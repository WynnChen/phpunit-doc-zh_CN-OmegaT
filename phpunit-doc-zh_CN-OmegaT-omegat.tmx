<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.1.9_2" segtype="paragraph" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>"Behind the scenes", PHPUnit automatically generates a new PHP class that implements the desired behavior when the &lt;l0&gt;getMock()&lt;/l0&gt; method is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075150Z" creationid="Wynn" creationdate="20150327T075150Z">
        <seg>“在幕后”，当使用了 &lt;l0&gt;getMock()&lt;/l0&gt; 方法时， PHPUnit 自动生成了一个新的 PHP 类来实现想要的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"Behind the scenes", PHPUnit automatically generates a new PHP class that implements the desired behavior when the &lt;l0&gt;getMock()&lt;/l0&gt; method is used. The generated test double class can be configured through the optional arguments of the &lt;l1&gt;getMock()&lt;/l1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044814Z" creationid="Wynn" creationdate="20150330T043941Z">
        <seg>“在幕后”，当使用了 &lt;l0&gt;getMock()&lt;/l0&gt; 方法时， PHPUnit 自动生成了一个新的 PHP 类来实现想要的行为。所生成的测试替身类可以通过 &lt;l1&gt;getMock()&lt;/l1&gt; 的可选参数来进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"phpunit/dbunit": "&gt;=1.2"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100737Z" creationid="Wynn" creationdate="20150319T100737Z">
        <seg>"phpunit/dbunit": "&gt;=1.2"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"phpunit/php-invoker": "*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100727Z" creationid="Wynn" creationdate="20150319T100727Z">
        <seg>"phpunit/php-invoker": "*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"phpunit/phpunit-selenium": "&gt;=1.2"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100757Z" creationid="Wynn" creationdate="20150319T100757Z">
        <seg>"phpunit/phpunit-selenium": "&gt;=1.2"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#!/usr/bin/env bash
clean=1 # Delete phpunit.phar after the tests are complete?
aftercmd="php phpunit.phar --bootstrap bootstrap.php src/tests"
gpg --fingerprint D8406D0D82947747293778314AA394086372C20A
if [ $? -ne 0 ]; then
    echo -e "\033[33mDownloading PGP Public Key...\033[0m"
    gpg --recv-keys D8406D0D82947747293778314AA394086372C20A
    # Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;
    gpg --fingerprint D8406D0D82947747293778314AA394086372C20A
    if [ $? -ne 0 ]; then
        echo -e "\033[31mCould not download PGP public key for verification\033[0m"
        exit
    fi
fi

if [ "$clean" -eq 1 ]; then
    # Let's clean them up, if they exist
    if [ -f phpunit.phar ]; then
        rm -f phpunit.phar
    fi
    if [ -f phpunit.phar.asc ]; then
        rm -f phpunit.phar.asc
    fi
fi

# Let's grab the latest release and its signature
if [ ! -f phpunit.phar ]; then
    wget https://phar.phpunit.de/phpunit.phar
fi
if [ ! -f phpunit.phar.asc ]; then
    wget https://phar.phpunit.de/phpunit.phar.asc
fi

# Verify before running
gpg --verify phpunit.phar.asc phpunit.phar
if [ $? -eq 0 ]; then
    echo
    echo -e "\033[33mBegin Unit Testing\033[0m"
    # Run the testing suite
    `$after_cmd`
    # Cleanup
    if [ "$clean" -eq 1 ]; then
        echo -e "\033[32mCleaning Up!\033[0m"
        rm -f phpunit.phar
        rm -f phpunit.phar.asc
    fi
else
    echo
    chmod -x phpunit.phar
    mv phpunit.phar /tmp/bad-phpunit.phar
    mv phpunit.phar.asc /tmp/bad-phpunit.phar.asc
    echo -e "\033[31mSignature did not match! PHPUnit has been moved to /tmp/bad-phpunit.phar\033[0m"
    exit 1
fi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T081055Z" creationid="Wynn" creationdate="20150416T081055Z">
        <seg>#!/usr/bin/env bash
clean=1 # 是否在测试完成之后删除 phpunit.phar ？
aftercmd="php phpunit.phar --bootstrap bootstrap.php src/tests"
gpg --fingerprint D8406D0D82947747293778314AA394086372C20A
if [ $? -ne 0 ]; then
    echo -e "\033[33mDownloading PGP Public Key...\033[0m"
    gpg --recv-keys D8406D0D82947747293778314AA394086372C20A
    # Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;
    gpg --fingerprint D8406D0D82947747293778314AA394086372C20A
    if [ $? -ne 0 ]; then
        echo -e "\033[31mCould not download PGP public key for verification\033[0m"
        exit
    fi
fi

if [ "$clean" -eq 1 ]; then
    # 如果存在就清理掉
    if [ -f phpunit.phar ]; then
        rm -f phpunit.phar
    fi
    if [ -f phpunit.phar.asc ]; then
        rm -f phpunit.phar.asc
    fi
fi

# 抓取最新的发行版和对应的签名
if [ ! -f phpunit.phar ]; then
    wget https://phar.phpunit.de/phpunit.phar
fi
if [ ! -f phpunit.phar.asc ]; then
    wget https://phar.phpunit.de/phpunit.phar.asc
fi

# 在运行前先校验
gpg --verify phpunit.phar.asc phpunit.phar
if [ $? -eq 0 ]; then
    echo
    echo -e "\033[33mBegin Unit Testing\033[0m"
    # 运行测试套件
    `$after_cmd`
    # 清理
    if [ "$clean" -eq 1 ]; then
        echo -e "\033[32mCleaning Up!\033[0m"
        rm -f phpunit.phar
        rm -f phpunit.phar.asc
    fi
else
    echo
    chmod -x phpunit.phar
    mv phpunit.phar /tmp/bad-phpunit.phar
    mv phpunit.phar.asc /tmp/bad-phpunit.phar.asc
    echo -e "\033[31mSignature did not match! PHPUnit has been moved to /tmp/bad-phpunit.phar\033[0m"
    exit 1
fi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$backupGlobalsBlacklist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085737Z" creationid="Wynn" creationdate="20150319T085737Z">
        <seg>$backupGlobalsBlacklist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$backupStaticAttributesBlacklist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085922Z" creationid="Wynn" creationdate="20150319T085922Z">
        <seg>$backupStaticAttributesBlacklist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$listener = new MyListener(
  array('Sebastian'),
  22,
  'April',
  19.78,
  NULL,
  new stdClass
);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075323Z" creationid="Wynn" creationdate="20150310T075323Z">
        <seg>$listener = new MyListener(
  array('Sebastian'),
  22,
  'April',
  19.78,
  NULL,
  new stdClass
);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--bootstrap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100511Z" creationid="Wynn" creationdate="20150327T100511Z">
        <seg>--bootstrap</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--colors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095748Z" creationid="Wynn" creationdate="20150327T095748Z">
        <seg>--colors</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--columns</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T034006Z" creationid="Wynn" creationdate="20150924T034006Z">
        <seg>--columns</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-clover</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093145Z" creationid="Wynn" creationdate="20150327T093145Z">
        <seg>--coverage-clover</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-clover /tmp/coverage.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095319Z" creationid="Wynn" creationdate="20150309T095319Z">
        <seg>--coverage-clover /tmp/coverage.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-crap4j</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093154Z" creationid="Wynn" creationdate="20150327T093154Z">
        <seg>--coverage-crap4j</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093251Z" creationid="Wynn" creationdate="20150327T093251Z">
        <seg>--coverage-html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-html /tmp/report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095318Z" creationid="Wynn" creationdate="20150309T095318Z">
        <seg>--coverage-html /tmp/report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093300Z" creationid="Wynn" creationdate="20150327T093300Z">
        <seg>--coverage-php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-php /tmp/coverage.serialized</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095321Z" creationid="Wynn" creationdate="20150309T095321Z">
        <seg>--coverage-php /tmp/coverage.serialized</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--coverage-text</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095321Z" creationid="Wynn" creationdate="20150309T095321Z">
        <seg>--coverage-text</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--debug</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095956Z" creationid="Wynn" creationdate="20150327T095956Z">
        <seg>--debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--disallow-test-output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095507Z" creationid="Wynn" creationdate="20150327T095507Z">
        <seg>--disallow-test-output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--disallow-todo-tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095537Z" creationid="Wynn" creationdate="20150327T095537Z">
        <seg>--disallow-todo-tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--enforce-time-limit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095556Z" creationid="Wynn" creationdate="20150327T095556Z">
        <seg>--enforce-time-limit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--exclude-group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093838Z" creationid="Wynn" creationdate="20150327T093838Z">
        <seg>--exclude-group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--exclude-group name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093623Z" creationid="Wynn" creationdate="20150309T093623Z">
        <seg>--exclude-group name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093514Z" creationid="Wynn" creationdate="20150327T093514Z">
        <seg>--filter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '#2'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093735Z" creationid="Wynn" creationdate="20150327T093735Z">
        <seg>--filter '#2'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '#2-4'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093740Z" creationid="Wynn" creationdate="20150327T093740Z">
        <seg>--filter '#2-4'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '/::testMethod .*"my named data"/'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter '/::testMethod .*"my named data"/'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '/::testMethod .*#(5|6|7)$/'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093723Z" creationid="Wynn" creationdate="20150327T093723Z">
        <seg>--filter '/::testMethod .*#(5|6|7)$/'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '/::testMethod .*#5$/'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter '/::testMethod .*#5$/'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '@my named data'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093741Z" creationid="Wynn" creationdate="20150327T093741Z">
        <seg>--filter '@my named data'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter '@my.*data'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093742Z" creationid="Wynn" creationdate="20150327T093742Z">
        <seg>--filter '@my.*data'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'TestNamespace\\TestCaseClass'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter 'TestNamespace\\TestCaseClass'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'TestNamespace\\TestCaseClass::testMethod'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093714Z" creationid="Wynn" creationdate="20150327T093714Z">
        <seg>--filter 'TestNamespace\\TestCaseClass::testMethod'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'testMethod#2'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093735Z" creationid="Wynn" creationdate="20150327T093735Z">
        <seg>--filter 'testMethod#2'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'testMethod#2-4'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093735Z" creationid="Wynn" creationdate="20150327T093735Z">
        <seg>--filter 'testMethod#2-4'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'testMethod@my named data'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093741Z" creationid="Wynn" creationdate="20150327T093741Z">
        <seg>--filter 'testMethod@my named data'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter 'testMethod@my.*data'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093741Z" creationid="Wynn" creationdate="20150327T093741Z">
        <seg>--filter 'testMethod@my.*data'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter TestCaseClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter TestCaseClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter TestNamespace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter TestNamespace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--filter testMethod</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093715Z" creationid="Wynn" creationdate="20150327T093715Z">
        <seg>--filter testMethod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093757Z" creationid="Wynn" creationdate="20150327T093757Z">
        <seg>--group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--group name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093517Z" creationid="Wynn" creationdate="20150309T093517Z">
        <seg>--group name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--include-path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100641Z" creationid="Wynn" creationdate="20150327T100641Z">
        <seg>--include-path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--list-groups</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093903Z" creationid="Wynn" creationdate="20150327T093903Z">
        <seg>--list-groups</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--loader</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095957Z" creationid="Wynn" creationdate="20150327T095957Z">
        <seg>--loader</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-json</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093432Z" creationid="Wynn" creationdate="20150327T093432Z">
        <seg>--log-json</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-json /tmp/logfile.json</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095322Z" creationid="Wynn" creationdate="20150309T095322Z">
        <seg>--log-json /tmp/logfile.json</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-junit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093343Z" creationid="Wynn" creationdate="20150327T093343Z">
        <seg>--log-junit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-junit /tmp/logfile.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095326Z" creationid="Wynn" creationdate="20150309T095326Z">
        <seg>--log-junit /tmp/logfile.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-tap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093407Z" creationid="Wynn" creationdate="20150327T093407Z">
        <seg>--log-tap</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--log-tap /tmp/logfile.tap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095324Z" creationid="Wynn" creationdate="20150309T095324Z">
        <seg>--log-tap /tmp/logfile.tap</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--no-configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100600Z" creationid="Wynn" creationdate="20150327T100600Z">
        <seg>--no-configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--no-globals-backup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095717Z" creationid="Wynn" creationdate="20150327T095717Z">
        <seg>--no-globals-backup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--printer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100336Z" creationid="Wynn" creationdate="20150327T100336Z">
        <seg>--printer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--process-isolation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095703Z" creationid="Wynn" creationdate="20150327T095703Z">
        <seg>--process-isolation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--repeat</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100127Z" creationid="Wynn" creationdate="20150327T100127Z">
        <seg>--repeat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--report-useless-tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095349Z" creationid="Wynn" creationdate="20150327T095349Z">
        <seg>--report-useless-tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--static-backup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095732Z" creationid="Wynn" creationdate="20150327T095732Z">
        <seg>--static-backup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stderr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095920Z" creationid="Wynn" creationdate="20150327T095920Z">
        <seg>--stderr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stop-on-error</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095937Z" creationid="Wynn" creationdate="20150327T095937Z">
        <seg>--stop-on-error</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stop-on-failure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095939Z" creationid="Wynn" creationdate="20150327T095939Z">
        <seg>--stop-on-failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stop-on-incomplete</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095954Z" creationid="Wynn" creationdate="20150327T095954Z">
        <seg>--stop-on-incomplete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stop-on-risky</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095948Z" creationid="Wynn" creationdate="20150327T095948Z">
        <seg>--stop-on-risky</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--stop-on-skipped</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095953Z" creationid="Wynn" creationdate="20150327T095953Z">
        <seg>--stop-on-skipped</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--strict</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095614Z" creationid="Wynn" creationdate="20150327T095614Z">
        <seg>--strict</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--strict-coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095510Z" creationid="Wynn" creationdate="20150327T095510Z">
        <seg>--strict-coverage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--strict-global-state</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T083209Z" creationid="Wynn" creationdate="20150416T083209Z">
        <seg>--strict-global-state</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--tap</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100132Z" creationid="Wynn" creationdate="20150327T100132Z">
        <seg>--tap</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--test-suffix</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093910Z" creationid="Wynn" creationdate="20150327T093910Z">
        <seg>--test-suffix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--testdox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100300Z" creationid="Wynn" creationdate="20150327T100300Z">
        <seg>--testdox</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--testdox-html /tmp/testdox.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095327Z" creationid="Wynn" creationdate="20150309T095327Z">
        <seg>--testdox-html /tmp/testdox.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--testdox-text /tmp/testdox.txt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095402Z" creationid="Wynn" creationdate="20150309T095402Z">
        <seg>--testdox-text /tmp/testdox.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--testsuite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093748Z" creationid="Wynn" creationdate="20150327T093748Z">
        <seg>--testsuite</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>--verbose</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095955Z" creationid="Wynn" creationdate="20150327T095955Z">
        <seg>--verbose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-d</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100654Z" creationid="Wynn" creationdate="20150327T100654Z">
        <seg>-d</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092740Z" creationid="Wynn" creationdate="20150327T092740Z">
        <seg>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031241Z" creationid="Wynn" creationdate="20150330T031241Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
     * Generated from @assert (0, 0) == 0.
     */
    public function testAdd() {
        $o = new Calculator;
        $this-&gt;assertEquals(0, $o-&gt;add(0, 0));
    }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043434Z" creationid="Wynn" creationdate="20150330T043434Z">
        <seg>/**
     * Generated from @assert (0, 0) == 0.
     */
    public function testAdd() {
        $o = new Calculator;
        $this-&gt;assertEquals(0, $o-&gt;add(0, 0));
    }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @backupGlobals disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupGlobals enabled
     */
    public function testThatInteractsWithGlobalVariables()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082008Z" creationid="Wynn" creationdate="20150228T082008Z">
        <seg>/**
 * @backupGlobals disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupGlobals enabled
     */
    public function testThatInteractsWithGlobalVariables()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @backupGlobals disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092219Z" creationid="Wynn" creationdate="20150309T092219Z">
        <seg>/**
 * @backupGlobals disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @backupStaticAttributes disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupStaticAttributes enabled
     */
    public function testThatInteractsWithStaticAttributes()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025256Z" creationid="Wynn" creationdate="20150330T025256Z">
        <seg>/**
 * @backupStaticAttributes disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupStaticAttributes enabled
     */
    public function testThatInteractsWithStaticAttributes()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @backupStaticAttributes disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025247Z" creationid="Wynn" creationdate="20150330T025247Z">
        <seg>/**
 * @backupStaticAttributes disabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @backupStaticAttributes enabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupStaticAttributes disabled
     */
    public function testThatInteractsWithStaticAttributes()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092243Z" creationid="Wynn" creationdate="20150309T092243Z">
        <seg>/**
 * @backupStaticAttributes enabled
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @backupStaticAttributes disabled
     */
    public function testThatInteractsWithStaticAttributes()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @covers BankAccount::deposit
 * @uses   Money
 */
public function testMoneyCanBeDepositedInAccount()
{
    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092756Z" creationid="Wynn" creationdate="20150309T092756Z">
        <seg>/**
 * @covers BankAccount::deposit
 * @uses   Money
 */
public function testMoneyCanBeDepositedInAccount()
{
    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @covers BankAccount::getBalance
 */
public function testBalanceIsInitiallyZero()
{
    $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092530Z" creationid="Wynn" creationdate="20150309T092530Z">
        <seg>/**
 * @covers BankAccount::getBalance
 */
public function testBalanceIsInitiallyZero()
{
    $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @runTestsInSeparateProcesses
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092738Z" creationid="Wynn" creationdate="20150309T092738Z">
        <seg>/**
 * @runTestsInSeparateProcesses
 */
class MyTest extends PHPUnit_Framework_TestCase
{
    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/**
 * @test
 */
public function initialBalanceShouldBe0()
{
    $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092750Z" creationid="Wynn" creationdate="20150309T092750Z">
        <seg>/**
 * @test
 */
public function initialBalanceShouldBe0()
{
    $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/path/to/my/test.phpt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093645Z" creationid="Wynn" creationdate="20150327T093645Z">
        <seg>/path/to/my/test.phpt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>0
1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040911Z" creationid="Wynn" creationdate="20150330T040911Z">
        <seg>0
1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1. Clean-Up Database</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071003Z" creationid="Wynn" creationdate="20150313T071003Z">
        <seg>1. 清理数据库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2. Set up fixture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071214Z" creationid="Wynn" creationdate="20150313T071108Z">
        <seg>2. 建立基境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2002</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093339Z" creationid="Wynn" creationdate="20150309T093339Z">
        <seg>2002</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2003</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>2003</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2005</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093345Z" creationid="Wynn" creationdate="20150309T093345Z">
        <seg>2005</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2006</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093345Z" creationid="Wynn" creationdate="20150309T093345Z">
        <seg>2006</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2007</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093343Z" creationid="Wynn" creationdate="20150309T093343Z">
        <seg>2007</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2008</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093345Z" creationid="Wynn" creationdate="20150309T093345Z">
        <seg>2008</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2009</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093345Z" creationid="Wynn" creationdate="20150309T093345Z">
        <seg>2009</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2010</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093346Z" creationid="Wynn" creationdate="20150309T093346Z">
        <seg>2010</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2011</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093346Z" creationid="Wynn" creationdate="20150309T093346Z">
        <seg>2011</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2012</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093346Z" creationid="Wynn" creationdate="20150309T093346Z">
        <seg>2012</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2013</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093346Z" creationid="Wynn" creationdate="20150309T093346Z">
        <seg>2013</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2014</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093346Z" creationid="Wynn" creationdate="20150309T093346Z">
        <seg>2014</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2015</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093347Z" creationid="Wynn" creationdate="20150309T093347Z">
        <seg>2015</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3–5. Run Test, Verify outcome and Teardown</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071201Z" creationid="Wynn" creationdate="20150313T071201Z">
        <seg>3–5. 运行测试、验证结果、并拆除基境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook');
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074752Z" creationid="Wynn" creationdate="20150317T074752Z">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook');
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook', 'SELECT * FROM guestbook');
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074831Z" creationid="Wynn" creationdate="20150317T074831Z">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook', 'SELECT * FROM guestbook');
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook', 'SELECT id, content FROM guestbook ORDER BY created DESC');
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074904Z" creationid="Wynn" creationdate="20150317T074904Z">
        <seg>&lt;?php
$ds = new PHPUnit_Extensions_Database_DataSet_QueryDataSet($this-&gt;getConnection());
$ds-&gt;addTable('guestbook', 'SELECT id, content FROM guestbook ORDER BY created DESC');
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$fixture = array();
// $fixture is expected to be empty.

$fixture[] = 'element';
// $fixture is expected to contain one element.
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025848Z" creationid="Wynn" creationdate="20150330T025848Z">
        <seg>&lt;?php
$fixture = array();
// $fixture is expected to be empty.

$fixture[] = 'element';
// $fixture is expected to contain one element.
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$fixture = array();
print count($fixture) . "\n";

$fixture[] = 'element';
print count($fixture) . "\n";
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030109Z" creationid="Wynn" creationdate="20150330T030109Z">
        <seg>&lt;?php
$fixture = array();
print count($fixture) . "\n";

$fixture[] = 'element';
print count($fixture) . "\n";
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$fixture = array();
print count($fixture) == 0 ? "ok\n" : "not ok\n";

$fixture[] = 'element';
print count($fixture) == 1 ? "ok\n" : "not ok\n";
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030145Z" creationid="Wynn" creationdate="20150330T030145Z">
        <seg>&lt;?php
$fixture = array();
print count($fixture) == 0 ? "ok\n" : "not ok\n";

$fixture[] = 'element';
print count($fixture) == 1 ? "ok\n" : "not ok\n";
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
$queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
    'guestbook', 'SELECT id, content, user FROM guestbook'
);
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042200Z" creationid="Wynn" creationdate="20150319T042200Z">
        <seg>&lt;?php
$queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
    'guestbook', 'SELECT id, content, user FROM guestbook'
);
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
/**
 * @codeCoverageIgnore
 */
class Foo
{
    public function bar()
    {
    }
}

class Bar
{
    /**
     * @codeCoverageIgnore
     */
    public function foo()
    {
    }
}

if (FALSE) {
    // @codeCoverageIgnoreStart
    print '*';
    // @codeCoverageIgnoreEnd
}

exit; // @codeCoverageIgnore
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093354Z" creationid="Wynn" creationdate="20150309T093354Z">
        <seg>&lt;?php
/**
 * @codeCoverageIgnore
 */
class Foo
{
    public function bar()
    {
    }
}

class Bar
{
    /**
     * @codeCoverageIgnore
     */
    public function foo()
    {
    }
}

if (FALSE) {
    // @codeCoverageIgnoreStart
    print '*';
    // @codeCoverageIgnoreEnd
}

exit; // @codeCoverageIgnore
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
/**
 * @codeCoverageIgnore
 */
class Foo
{
    public function bar()
    {
    }
}

class Bar
{
    /**
     * @codeCoverageIgnore
     */
    public function foo()
    {
    }
}

if (FALSE) {
    // @codeCoverageIgnoreStart
    print '*';
    // @codeCoverageIgnoreEnd
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032729Z" creationid="Wynn" creationdate="20150330T032729Z">
        <seg>&lt;?php
/**
 * @codeCoverageIgnore
 */
class Foo
{
    public function bar()
    {
    }
}

class Bar
{
    /**
     * @codeCoverageIgnore
     */
    public function foo()
    {
    }
}

if (FALSE) {
    // @codeCoverageIgnoreStart
    print '*';
    // @codeCoverageIgnoreEnd
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
/**
 * @coversDefaultClass \Foo\CoveredClass
 */
class CoversDefaultClassTest extends PHPUnit_Framework_TestCase
{
    /**
     * @covers ::publicMethod
     */
    public function testSomething()
    {
        $o = new Foo\CoveredClass;
        $o-&gt;publicMethod();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092552Z" creationid="Wynn" creationdate="20150309T092552Z">
        <seg>&lt;?php
/**
 * @coversDefaultClass \Foo\CoveredClass
 */
class CoversDefaultClassTest extends PHPUnit_Framework_TestCase
{
    /**
     * @covers ::publicMethod
     */
    public function testSomething()
    {
        $o = new Foo\CoveredClass;
        $o-&gt;publicMethod();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
/**
 * @requires extension mysqli
 */
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    /**
     * @requires PHP 5.3
     */
    public function testConnection()
    {
        // Test requires the mysqli extension and PHP &gt;= 5.3
    }

    // ... All other tests require the mysqli extension
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092759Z" creationid="Wynn" creationdate="20150319T092743Z">
        <seg>&lt;?php
/**
 * @requires extension mysqli
 */
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    /**
     * @requires PHP 5.3
     */
    public function testConnection()
    {
        // 测试要求有 mysqli 扩展，并且 PHP &gt;= 5.3
    }

    // ... 所有其他要求有 mysqli 扩展的测试
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-01-09 at 16:55:58.
 */
class BowlingGame
{
    /**
     * @todo Implement roll().
     */
    public function roll()
    {
        // Remove the following line when you implement this method.
        throw new RuntimeException('Not yet implemented.');
    }

    /**
     * @todo Implement score().
     */
    public function score()
    {
        // Remove the following line when you implement this method.
        throw new RuntimeException('Not yet implemented.');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043741Z" creationid="Wynn" creationdate="20150330T043741Z">
        <seg>&lt;?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-01-09 at 16:55:58.
 */
class BowlingGame
{
    /**
     * @todo Implement roll().
     */
    public function roll()
    {
        // Remove the following line when you implement this method.
        throw new RuntimeException('Not yet implemented.');
    }

    /**
     * @todo Implement score().
     */
    public function score()
    {
        // Remove the following line when you implement this method.
        throw new RuntimeException('Not yet implemented.');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
// Because it is "line based" and not statement base coverage
// one line will always have one coverage status
if (false) this_function_call_shows_up_as_covered();

// Due to how code coverage works internally these two lines are special.
// This line will show up as non executable
if (false)
    // This line will show up as covered because it is actually the 
    // coverage of the if statement in the line above that gets shown here!
    will_also_show_up_as_covered();

// To avoid this it is necessary that braces are used
if (false) {
    this_call_will_never_show_up_as_covered();
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T083835Z" creationid="Wynn" creationdate="20150817T083835Z">
        <seg>&lt;?php
// 因为覆盖率是“基于行”而不是基于语句的，
// 每行只会有一种覆盖状态
if (false) this_function_call_shows_up_as_covered();

// 由于代码覆盖率的内部工作方式，这两行显得很特殊。
// 这一行会显示为非可执行
if (false)
    // 这一行会显示为已覆盖，
    // 实际上是上一行的 if 语句的覆盖信息显示在这了！
    will_also_show_up_as_covered();

// 要避免这种情况，必须使用大括号
if (false) {
    this_call_will_never_show_up_as_covered();
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
// Because it is "line based" and not statement base coverage
// one line will always have one coverage status
if(false) this_function_call_shows_up_as_covered();

// Due to how code coverage works internally these two lines are special.
// This line will show up as non executable
if(false)
    // This line will show up as covered because it is actually the 
    // coverage of the if statement in the line above that gets shown here!
    will_also_show_up_as_covered();

// To avoid this it is necessary that braces are used
if(false) {
    this_call_will_never_show_up_as_covered();
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091044Z" creationid="Wynn" creationdate="20150817T091044Z">
        <seg>&lt;?php
// 因为覆盖率是“基于行”而不是基于语句的，
// 每行只会有一种覆盖状态
if(false) this_function_call_shows_up_as_covered();

// 由于代码覆盖率的内部工作方式，这两行显得很特殊。
// 这一行会显示为非可执行
if(false)
    // 这一行会显示为已覆盖，
    // 实际上是上一行的 if 语句的覆盖信息显示在这了！
    will_also_show_up_as_covered();

// 要避免这种情况，必须使用大括号
if(false) {
    this_call_will_never_show_up_as_covered();
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
// Matcher that asserts that there is an element with an id="my_id".
$matcher = array('id' =&gt; 'my_id');

// Matcher that asserts that there is a "span" tag.
$matcher = array('tag' =&gt; 'span');

// Matcher that asserts that there is a "span" tag with the content
// "Hello World".
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'Hello World');

// Matcher that asserts that there is a "span" tag with content matching the
// regular expression pattern.
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'regexp:/Try P(HP|ython)/');

// Matcher that asserts that there is a "span" with an "list" class attribute.
$matcher = array(
  'tag'        =&gt; 'span',
  'attributes' =&gt; array('class' =&gt; 'list')
);

// Matcher that asserts that there is a "span" inside of a "div".
$matcher = array(
  'tag'    =&gt; 'span',
  'parent' =&gt; array('tag' =&gt; 'div')
);

// Matcher that asserts that there is a "span" somewhere inside a "table".
$matcher = array(
  'tag'      =&gt; 'span',
  'ancestor' =&gt; array('tag' =&gt; 'table')
);

// Matcher that asserts that there is a "span" with at least one "em" child.
$matcher = array(
  'tag'   =&gt; 'span',
  'child' =&gt; array('tag' =&gt; 'em')
);

// Matcher that asserts that there is a "span" containing a (possibly nested)
// "strong" tag.
$matcher = array(
  'tag'        =&gt; 'span',
  'descendant' =&gt; array('tag' =&gt; 'strong')
);

// Matcher that asserts that there is a "span" containing 5-10 "em" tags as
// immediate children.
$matcher = array(
  'tag'      =&gt; 'span',
  'children' =&gt; array(
    'less_than'    =&gt; 11,
    'greater_than' =&gt; 4,
    'only'         =&gt; array('tag' =&gt; 'em')
  )
);

// Matcher that asserts that there is a "div", with an "ul" ancestor and a "li"
// parent (with class="enum"), and containing a "span" descendant that contains
// an element with id="my_test" and the text "Hello World".
$matcher = array(
  'tag'        =&gt; 'div',
  'ancestor'   =&gt; array('tag' =&gt; 'ul'),
  'parent'     =&gt; array(
    'tag'        =&gt; 'li',
    'attributes' =&gt; array('class' =&gt; 'enum')
  ),
  'descendant' =&gt; array(
    'tag'   =&gt; 'span',
    'child' =&gt; array(
      'id'      =&gt; 'my_test',
      'content' =&gt; 'Hello World'
    )
  )
);

// Use assertTag() to apply a $matcher to a piece of $html.
$this-&gt;assertTag($matcher, $html);

// Use assertTag() to apply a $matcher to a piece of $xml.
$this-&gt;assertTag($matcher, $xml, '', FALSE);
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T055039Z" creationid="Wynn" creationdate="20150330T055039Z">
        <seg>&lt;?php
// 这个匹配器断言存在 id="my_id" 的元素。
$matcher = array('id' =&gt; 'my_id');

// 这个匹配器断言存在 "span" 标签。
$matcher = array('tag' =&gt; 'span');

// 这个匹配器断言存在内容为 "Hello World" 的 "span" 标签。
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'Hello World');

// 这个匹配器断言存在其内容与正则表达式模式相匹配的 "span" 标签。
$matcher = array('tag' =&gt; 'span', 'content' =&gt; 'regexp:/Try P(HP|ython)/');

// 这个匹配器断言存在class属性为 "list" 的 "span"。
$matcher = array(
  'tag'        =&gt; 'span',
  'attributes' =&gt; array('class' =&gt; 'list')
);

// 这个匹配器断言存在父元素为 "div" 的 "span"。
$matcher = array(
  'tag'    =&gt; 'span',
  'parent' =&gt; array('tag' =&gt; 'div')
);

// 这个匹配器断言存在某个 "span"，其祖先元素中有 "table"。
$matcher = array(
  'tag'      =&gt; 'span',
  'ancestor' =&gt; array('tag' =&gt; 'table')
);

// 这个匹配器断言存在某个 "span"，其直接子节点中至少有一个 "em"。
$matcher = array(
  'tag'   =&gt; 'span',
  'child' =&gt; array('tag' =&gt; 'em')
);

// 这个匹配器断言存在某个 "span"，其所有后代子节点中存在 "strong" 标签。
$matcher = array(
  'tag'        =&gt; 'span',
  'descendant' =&gt; array('tag' =&gt; 'strong')
);

// 这个匹配器断言存在某个 "span"，其直接子节点中包含有 5 到 10 个 "em" 标签。
$matcher = array(
  'tag'      =&gt; 'span',
  'children' =&gt; array(
    'less_than'    =&gt; 11,
    'greater_than' =&gt; 4,
    'only'         =&gt; array('tag' =&gt; 'em')
  )
);

// 这个匹配器断言存在一个 "div"，其祖先元素中有 "ul"，且其父元素是 class="enum" 的 "li"，
// 且其后代子节点中存在一个 id="my_test" 同时文本内容为 "Hello World" 的 "span"。
$matcher = array(
  'tag'        =&gt; 'div',
  'ancestor'   =&gt; array('tag' =&gt; 'ul'),
  'parent'     =&gt; array(
    'tag'        =&gt; 'li',
    'attributes' =&gt; array('class' =&gt; 'enum')
  ),
  'descendant' =&gt; array(
    'tag'   =&gt; 'span',
    'child' =&gt; array(
      'id'      =&gt; 'my_test',
      'content' =&gt; 'Hello World'
    )
  )
);

// 使用 assertTag() 来将 $matcher 应用到 $html 片段上。
$this-&gt;assertTag($matcher, $html);

// 使用 assertTag() 来将 $matcher 应用到 $xml 片段上。
$this-&gt;assertTag($matcher, $xml, '', FALSE);
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
abstract class AbstractClass
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class AbstractClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $stub = $this-&gt;getMockForAbstractClass('AbstractClass');

        $stub-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($stub-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091143Z" creationid="Wynn" creationdate="20150327T091143Z">
        <seg>&lt;?php
abstract class AbstractClass
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class AbstractClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $stub = $this-&gt;getMockForAbstractClass('AbstractClass');

        $stub-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($stub-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
abstract class AbstractClass
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class AbstractClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $stub = $this-&gt;getMockForAbstractClass('AbstractClass');
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($stub-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045458Z" creationid="Wynn" creationdate="20150330T045458Z">
        <seg>&lt;?php
abstract class AbstractClass
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class AbstractClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $stub = $this-&gt;getMockForAbstractClass('AbstractClass');
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($stub-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
abstract class Generic_Tests_DatabaseTestCase extends PHPUnit_Extensions_Database_TestCase
{
    // only instantiate pdo once for test clean-up/fixture load
    static private $pdo = null;

    // only instantiate PHPUnit_Extensions_Database_DB_IDatabaseConnection once per test
    private $conn = null;

    final public function getConnection()
    {
        if ($this-&gt;conn === null) {
            if (self::$pdo == null) {
                self::$pdo = new PDO( $GLOBALS['DB_DSN'], $GLOBALS['DB_USER'], $GLOBALS['DB_PASSWD'] );
            }
            $this-&gt;conn = $this-&gt;createDefaultDBConnection(self::$pdo, $GLOBALS['DB_DBNAME']);
        }

        return $this-&gt;conn;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T101012Z" creationid="Wynn" creationdate="20150316T101012Z">
        <seg>&lt;?php
abstract class Generic_Tests_DatabaseTestCase extends PHPUnit_Extensions_Database_TestCase
{
    // 只实例化 pdo 一次，供测试的清理和装载基境使用
    static private $pdo = null;

    // 对于每个测试，只实例化 PHPUnit_Extensions_Database_DB_IDatabaseConnection 一次
    private $conn = null;

    final public function getConnection()
    {
        if ($this-&gt;conn === null) {
            if (self::$pdo == null) {
                self::$pdo = new PDO( $GLOBALS['DB_DSN'], $GLOBALS['DB_USER'], $GLOBALS['DB_PASSWD'] );
            }
            $this-&gt;conn = $this-&gt;createDefaultDBConnection(self::$pdo, $GLOBALS['DB_DBNAME']);
        }

        return $this-&gt;conn;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
abstract class MyApp_Tests_DatabaseTestCase extends PHPUnit_Extensions_Database_TestCase
{
    // only instantiate pdo once for test clean-up/fixture load
    static private $pdo = null;

    // only instantiate PHPUnit_Extensions_Database_DB_IDatabaseConnection once per test
    private $conn = null;

    final public function getConnection()
    {
        if ($this-&gt;conn === null) {
            if (self::$pdo == null) {
                self::$pdo = new PDO('sqlite::memory:');
            }
            $this-&gt;conn = $this-&gt;createDefaultDBConnection(self::$pdo, ':memory:');
        }

        return $this-&gt;conn;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100807Z" creationid="Wynn" creationdate="20150316T100807Z">
        <seg>&lt;?php
abstract class MyApp_Tests_DatabaseTestCase extends PHPUnit_Extensions_Database_TestCase
{
    // 只实例化 pdo 一次，供测试的清理和装载基境使用
    static private $pdo = null;

    // 对于每个测试，只实例化 PHPUnit_Extensions_Database_DB_IDatabaseConnection 一次
    private $conn = null;

    final public function getConnection()
    {
        if ($this-&gt;conn === null) {
            if (self::$pdo == null) {
                self::$pdo = new PDO('sqlite::memory:');
            }
            $this-&gt;conn = $this-&gt;createDefaultDBConnection(self::$pdo, ':memory:');
        }

        return $this-&gt;conn;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
abstract class PHPUnit_Framework_Assert
{
    // ...

    /**
     * Asserts that a condition is true.
     *
     * @param  boolean $condition
     * @param  string  $message
     * @throws PHPUnit_Framework_AssertionFailedError
     */
    public static function assertTrue($condition, $message = '')
    {
        self::assertThat($condition, self::isTrue(), $message);
    }

    // ...

    /**
     * Returns a PHPUnit_Framework_Constraint_IsTrue matcher object.
     *
     * @return PHPUnit_Framework_Constraint_IsTrue
     * @since  Method available since Release 3.3.0
     */
    public static function isTrue()
    {
        return new PHPUnit_Framework_Constraint_IsTrue;
    }

    // ...
}?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T065730Z" creationid="Wynn" creationdate="20150319T065730Z">
        <seg>&lt;?php
abstract class PHPUnit_Framework_Assert
{
    // ...

    /**
     * 断言某个条件为真。
     *
     * @param  boolean $condition
     * @param  string  $message
     * @throws PHPUnit_Framework_AssertionFailedError
     */
    public static function assertTrue($condition, $message = '')
    {
        self::assertThat($condition, self::isTrue(), $message);
    }

    // ...

    /**
     * 返回一个 PHPUnit_Framework_Constraint_IsTrue 匹配器对象
     *
     * @return PHPUnit_Framework_Constraint_IsTrue
     * @since  Method available since Release 3.3.0
     */
    public static function isTrue()
    {
        return new PHPUnit_Framework_Constraint_IsTrue;
    }

    // ...
}?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ArrayDiffTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(1,2,3 ,4,5,6),
            array(1,2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024953Z" creationid="Wynn" creationdate="20150330T024953Z">
        <seg>&lt;?php
class ArrayDiffTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(1,2,3 ,4,5,6),
            array(1,2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ArrayGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        return new MyApp_DbUnit_ArrayDataSet(array(
            'guestbook' =&gt; array(
                array('id' =&gt; 1, 'content' =&gt; 'Hello buddy!', 'user' =&gt; 'joe', 'created' =&gt; '2010-04-24 17:15:23'),
                array('id' =&gt; 2, 'content' =&gt; 'I like it!',   'user' =&gt; null,  'created' =&gt; '2010-04-26 12:14:20'),
            ),
        ));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074511Z" creationid="Wynn" creationdate="20150317T074511Z">
        <seg>&lt;?php
class ArrayGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        return new MyApp_DbUnit_ArrayDataSet(array(
            'guestbook' =&gt; array(
                array('id' =&gt; 1, 'content' =&gt; 'Hello buddy!', 'user' =&gt; 'joe', 'created' =&gt; '2010-04-24 17:15:23'),
                array('id' =&gt; 2, 'content' =&gt; 'I like it!',   'user' =&gt; null,  'created' =&gt; '2010-04-26 12:14:20'),
            ),
        ));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ArrayHasKeyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertArrayHasKey('foo', array('bar' =&gt; 'baz'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092801Z" creationid="Wynn" creationdate="20150309T092801Z">
        <seg>&lt;?php
class ArrayHasKeyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertArrayHasKey('foo', array('bar' =&gt; 'baz'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ArraySubsetTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertArraySubset(['config' =&gt; ['key-a', 'key-b']], ['config' =&gt; ['key-a']]);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075441Z" creationid="Wynn" creationdate="20150706T075441Z">
        <seg>&lt;?php
class ArraySubsetTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertArraySubset(['config' =&gt; ['key-a', 'key-b']], ['config' =&gt; ['key-a']]);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ArrayWeakComparisonTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(1  ,2,3 ,4,5,6),
            array('1',2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025050Z" creationid="Wynn" creationdate="20150330T025050Z">
        <seg>&lt;?php
class ArrayWeakComparisonTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(1  ,2,3 ,4,5,6),
            array('1',2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BankAccount
{
    private $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }

    protected function setBalance($balance)
    {
        PHPUnit_Framework_Assert::assertTrue($balance &gt;= 0);

        $this-&gt;balance = $balance;
    }

    public function depositMoney($amount)
    {
        PHPUnit_Framework_Assert::assertTrue($amount &gt;= 0);

        $this-&gt;setBalance($this-&gt;getBalance() + $amount);

        return $this-&gt;getBalance();
    }

    public function withdrawMoney($amount)
    {
        PHPUnit_Framework_Assert::assertTrue($amount &gt;= 0);
        PHPUnit_Framework_Assert::assertTrue($this-&gt;balance &gt;= $amount);

        $this-&gt;setBalance($this-&gt;getBalance() - $amount);

        return $this-&gt;getBalance();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050525Z" creationid="Wynn" creationdate="20150330T050525Z">
        <seg>&lt;?php
class BankAccount
{
    private $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }

    protected function setBalance($balance)
    {
        PHPUnit_Framework_Assert::assertTrue($balance &gt;= 0);

        $this-&gt;balance = $balance;
    }

    public function depositMoney($amount)
    {
        PHPUnit_Framework_Assert::assertTrue($amount &gt;= 0);

        $this-&gt;setBalance($this-&gt;getBalance() + $amount);

        return $this-&gt;getBalance();
    }

    public function withdrawMoney($amount)
    {
        PHPUnit_Framework_Assert::assertTrue($amount &gt;= 0);
        PHPUnit_Framework_Assert::assertTrue($this-&gt;balance &gt;= $amount);

        $this-&gt;setBalance($this-&gt;getBalance() - $amount);

        return $this-&gt;getBalance();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BankAccount
{
    protected $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }

    protected function setBalance($balance)
    {
        if ($balance &gt;= 0) {
            $this-&gt;balance = $balance;
        } else {
            throw new BankAccountException;
        }
    }

    public function depositMoney($balance)
    {
        $this-&gt;setBalance($this-&gt;getBalance() + $balance);

        return $this-&gt;getBalance();
    }

    public function withdrawMoney($balance)
    {
        $this-&gt;setBalance($this-&gt;getBalance() - $balance);

        return $this-&gt;getBalance();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050401Z" creationid="Wynn" creationdate="20150330T050401Z">
        <seg>&lt;?php
class BankAccount
{
    protected $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }

    protected function setBalance($balance)
    {
        if ($balance &gt;= 0) {
            $this-&gt;balance = $balance;
        } else {
            throw new BankAccountException;
        }
    }

    public function depositMoney($balance)
    {
        $this-&gt;setBalance($this-&gt;getBalance() + $balance);

        return $this-&gt;getBalance();
    }

    public function withdrawMoney($balance)
    {
        $this-&gt;setBalance($this-&gt;getBalance() - $balance);

        return $this-&gt;getBalance();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BankAccount
{
    protected $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050222Z" creationid="Wynn" creationdate="20150330T050222Z">
        <seg>&lt;?php
class BankAccount
{
    protected $balance = 0;

    public function getBalance()
    {
        return $this-&gt;balance;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    /**
     * @covers BankAccount::getBalance
     */
    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    /**
     * @covers BankAccount::withdrawMoney
     */
    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::depositMoney
     */
    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::getBalance
     * @covers BankAccount::depositMoney
     * @covers BankAccount::withdrawMoney
     */
    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093401Z" creationid="Wynn" creationdate="20150309T093401Z">
        <seg>&lt;?php
class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    /**
     * @covers BankAccount::getBalance
     */
    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    /**
     * @covers BankAccount::withdrawMoney
     */
    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::depositMoney
     */
    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::getBalance
     * @covers BankAccount::depositMoney
     * @covers BankAccount::withdrawMoney
     */
    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BiscuitTest extends PHPUnit_Framework_TestCase
{
    public function testEquals()
    {
        $theBiscuit = new Biscuit('Ginger');
        $myBiscuit  = new Biscuit('Ginger');

        $this-&gt;assertThat(
          $theBiscuit,
          $this-&gt;logicalNot(
            $this-&gt;equalTo($myBiscuit)
          )
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093238Z" creationid="Wynn" creationdate="20150309T093238Z">
        <seg>&lt;?php
class BiscuitTest extends PHPUnit_Framework_TestCase
{
    public function testEquals()
    {
        $theBiscuit = new Biscuit('Ginger');
        $myBiscuit  = new Biscuit('Ginger');

        $this-&gt;assertThat(
          $theBiscuit,
          $this-&gt;logicalNot(
            $this-&gt;equalTo($myBiscuit)
          )
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class BowlingGameTest extends PHPUnit_Framework_TestCase
{
    protected $game;

    protected function setUp()
    {
        $this-&gt;game = new BowlingGame;
    }

    protected function rollMany($n, $pins)
    {
        for ($i = 0; $i &lt; $n; $i++) {
            $this-&gt;game-&gt;roll($pins);
        }
    }

    public function testScoreForGutterGameIs0()
    {
        $this-&gt;rollMany(20, 0);
        $this-&gt;assertEquals(0, $this-&gt;game-&gt;score());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043716Z" creationid="Wynn" creationdate="20150330T043716Z">
        <seg>&lt;?php
class BowlingGameTest extends PHPUnit_Framework_TestCase
{
    protected $game;

    protected function setUp()
    {
        $this-&gt;game = new BowlingGame;
    }

    protected function rollMany($n, $pins)
    {
        for ($i = 0; $i &lt; $n; $i++) {
            $this-&gt;game-&gt;roll($pins);
        }
    }

    public function testScoreForGutterGameIs0()
    {
        $this-&gt;rollMany(20, 0);
        $this-&gt;assertEquals(0, $this-&gt;game-&gt;score());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class Calculator
{
    /**
     * @assert (0, 0) == 0
     * @assert (0, 1) == 1
     * @assert (1, 0) == 1
     * @assert (1, 1) == 2
     */
    public function add($a, $b)
    {
        return $a + $b;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043420Z" creationid="Wynn" creationdate="20150330T043420Z">
        <seg>&lt;?php
class Calculator
{
    /**
     * @assert (0, 0) == 0
     * @assert (0, 1) == 1
     * @assert (1, 0) == 1
     * @assert (1, 1) == 2
     */
    public function add($a, $b)
    {
        return $a + $b;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class Calculator
{
    public function add($a, $b)
    {
        return $a + $b;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043144Z" creationid="Wynn" creationdate="20150330T043144Z">
        <seg>&lt;?php
class Calculator
{
    public function add($a, $b)
    {
        return $a + $b;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ClassHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertClassHasAttribute('foo', 'stdClass');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092807Z" creationid="Wynn" creationdate="20150309T092807Z">
        <seg>&lt;?php
class ClassHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertClassHasAttribute('foo', 'stdClass');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ClassHasStaticAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertClassHasStaticAttribute('foo', 'stdClass');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092813Z" creationid="Wynn" creationdate="20150309T092813Z">
        <seg>&lt;?php
class ClassHasStaticAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertClassHasStaticAttribute('foo', 'stdClass');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ComplexQueryTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testComplexQuery()
    {
        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'myComplexQuery', 'SELECT complexQuery...'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("complexQueryAssertion.xml")
                              -&gt;getTable("myComplexQuery");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042217Z" creationid="Wynn" creationdate="20150319T042217Z">
        <seg>&lt;?php
class ComplexQueryTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testComplexQuery()
    {
        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'myComplexQuery', 'SELECT complexQuery...'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("complexQueryAssertion.xml")
                              -&gt;getTable("myComplexQuery");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class CompositeTest extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        $ds1 = $this-&gt;createFlatXmlDataSet('fixture1.xml');
        $ds2 = $this-&gt;createFlatXmlDataSet('fixture2.xml');

        $compositeDs = new PHPUnit_Extensions_Database_DataSet_CompositeDataSet();
        $compositeDs-&gt;addDataSet($ds1);
        $compositeDs-&gt;addDataSet($ds2);

        return $compositeDs;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075449Z" creationid="Wynn" creationdate="20150317T075449Z">
        <seg>&lt;?php
class CompositeTest extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        $ds1 = $this-&gt;createFlatXmlDataSet('fixture1.xml');
        $ds2 = $this-&gt;createFlatXmlDataSet('fixture2.xml');

        $compositeDs = new PHPUnit_Extensions_Database_DataSet_CompositeDataSet();
        $compositeDs-&gt;addDataSet($ds1);
        $compositeDs-&gt;addDataSet($ds2);

        return $compositeDs;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateDataSet()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090301Z" creationid="Wynn" creationdate="20150318T090301Z">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateDataSet()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateQueryTable()
    {
        $tableNames = array('guestbook');
        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable('guestbook', 'SELECT * FROM guestbook');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090351Z" creationid="Wynn" creationdate="20150318T090351Z">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateQueryTable()
    {
        $tableNames = array('guestbook');
        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable('guestbook', 'SELECT * FROM guestbook');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testGetRowCount()
    {
        $this-&gt;assertEquals(2, $this-&gt;getConnection()-&gt;getRowCount('guestbook'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090426Z" creationid="Wynn" creationdate="20150318T090426Z">
        <seg>&lt;?php
class ConnectionTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testGetRowCount()
    {
        $this-&gt;assertEquals(2, $this-&gt;getConnection()-&gt;getRowCount('guestbook'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ContainsOnlyInstancesOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContainsOnlyInstancesOf('Foo', array(new Foo(), new Bar(), new Foo()));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092925Z" creationid="Wynn" creationdate="20150309T092925Z">
        <seg>&lt;?php
class ContainsOnlyInstancesOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContainsOnlyInstancesOf('Foo', array(new Foo(), new Bar(), new Foo()));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ContainsOnlyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContainsOnly('string', array('1', '2', 3));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092914Z" creationid="Wynn" creationdate="20150309T092914Z">
        <seg>&lt;?php
class ContainsOnlyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContainsOnly('string', array('1', '2', 3));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains('baz', 'foobar');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092839Z" creationid="Wynn" creationdate="20150309T092839Z">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains('baz', 'foobar');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains('foo', 'FooBar');
    }

    public function testOK()
    {
        $this-&gt;assertContains('foo', 'FooBar', '', true);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092855Z" creationid="Wynn" creationdate="20150309T092855Z">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains('foo', 'FooBar');
    }

    public function testOK()
    {
        $this-&gt;assertContains('foo', 'FooBar', '', true);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains(4, array(1, 2, 3));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092829Z" creationid="Wynn" creationdate="20150309T092829Z">
        <seg>&lt;?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertContains(4, array(1, 2, 3));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class CountTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertCount(0, array('foo'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092933Z" creationid="Wynn" creationdate="20150309T092933Z">
        <seg>&lt;?php
class CountTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertCount(0, array('foo'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class CsvFileIterator implements Iterator {
    protected $file;
    protected $key = 0;
    protected $current;

    public function __construct($file) {
        $this-&gt;file = fopen($file, 'r');
    }

    public function __destruct() {
        fclose($this-&gt;file);
    }

    public function rewind() {
        rewind($this-&gt;file);
        $this-&gt;current = fgetcsv($this-&gt;file);
        $this-&gt;key = 0;
    }

    public function valid() {
        return !feof($this-&gt;file);
    }

    public function key() {
        return $this-&gt;key;
    }

    public function current() {
        return $this-&gt;current;
    }

    public function next() {
        $this-&gt;current = fgetcsv($this-&gt;file);
        $this-&gt;key++;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102333Z" creationid="Wynn" creationdate="20150327T102333Z">
        <seg>&lt;?php
class CsvFileIterator implements Iterator {
    protected $file;
    protected $key = 0;
    protected $current;

    public function __construct($file) {
        $this-&gt;file = fopen($file, 'r');
    }

    public function __destruct() {
        fclose($this-&gt;file);
    }

    public function rewind() {
        rewind($this-&gt;file);
        $this-&gt;current = fgetcsv($this-&gt;file);
        $this-&gt;key = 0;
    }

    public function valid() {
        return !feof($this-&gt;file);
    }

    public function key() {
        return $this-&gt;key;
    }

    public function current() {
        return $this-&gt;current;
    }

    public function next() {
        $this-&gt;current = fgetcsv($this-&gt;file);
        $this-&gt;key++;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class CsvGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        $dataSet = new PHPUnit_Extensions_Database_DataSet_CsvDataSet();
        $dataSet-&gt;addTable('guestbook', dirname(__FILE__)."/_files/guestbook.csv");
        return $dataSet;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074451Z" creationid="Wynn" creationdate="20150317T074451Z">
        <seg>&lt;?php
class CsvGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        $dataSet = new PHPUnit_Extensions_Database_DataSet_CsvDataSet();
        $dataSet-&gt;addTable('guestbook', dirname(__FILE__)."/_files/guestbook.csv");
        return $dataSet;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataDrivenTest implements PHPUnit_Framework_Test
{
    private $lines;

    public function __construct($dataFile)
    {
        $this-&gt;lines = file($dataFile);
    }

    public function count()
    {
        return 1;
    }

    public function run(PHPUnit_Framework_TestResult $result = NULL)
    {
        if ($result === NULL) {
            $result = new PHPUnit_Framework_TestResult;
        }

        foreach ($this-&gt;lines as $line) {
            $result-&gt;startTest($this);
            PHP_Timer::start();
            $stopTime = NULL;

            list($expected, $actual) = explode(';', $line);

            try {
                PHPUnit_Framework_Assert::assertEquals(
                  trim($expected), trim($actual)
                );
            }

            catch (PHPUnit_Framework_AssertionFailedError $e) {
                $stopTime = PHP_Timer::stop();
                $result-&gt;addFailure($this, $e, $stopTime);
            }

            catch (Exception $e) {
                $stopTime = PHP_Timer::stop();
                $result-&gt;addError($this, $e, $stopTime);
            }

            if ($stopTime === NULL) {
                $stopTime = PHP_Timer::stop();
            }

            $result-&gt;endTest($this, $stopTime);
        }

        return $result;
    }
}

$test = new DataDrivenTest('data_file.csv');
$result = PHPUnit_TextUI_TestRunner::run($test);
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075641Z" creationid="Wynn" creationdate="20150319T075641Z">
        <seg>&lt;?php
class DataDrivenTest implements PHPUnit_Framework_Test
{
    private $lines;

    public function __construct($dataFile)
    {
        $this-&gt;lines = file($dataFile);
    }

    public function count()
    {
        return 1;
    }

    public function run(PHPUnit_Framework_TestResult $result = NULL)
    {
        if ($result === NULL) {
            $result = new PHPUnit_Framework_TestResult;
        }

        foreach ($this-&gt;lines as $line) {
            $result-&gt;startTest($this);
            PHP_Timer::start();
            $stopTime = NULL;

            list($expected, $actual) = explode(';', $line);

            try {
                PHPUnit_Framework_Assert::assertEquals(
                  trim($expected), trim($actual)
                );
            }

            catch (PHPUnit_Framework_AssertionFailedError $e) {
                $stopTime = PHP_Timer::stop();
                $result-&gt;addFailure($this, $e, $stopTime);
            }

            catch (Exception $e) {
                $stopTime = PHP_Timer::stop();
                $result-&gt;addError($this, $e, $stopTime);
            }

            if ($stopTime === NULL) {
                $stopTime = PHP_Timer::stop();
            }

            $result-&gt;endTest($this, $stopTime);
        }

        return $result;
    }
}

$test = new DataDrivenTest('data_file.csv');
$result = PHPUnit_TextUI_TestRunner::run($test);
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataSetAssertionsTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateDataSetAssertion()
    {
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet(array('guestbook'));
        $expectedDataSet = $this-&gt;createFlatXmlDataSet('guestbook.xml');
        $this-&gt;assertDataSetsEqual($expectedDataSet, $dataSet);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042257Z" creationid="Wynn" creationdate="20150319T042257Z">
        <seg>&lt;?php
class DataSetAssertionsTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testCreateDataSetAssertion()
    {
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet(array('guestbook'));
        $expectedDataSet = $this-&gt;createFlatXmlDataSet('guestbook.xml');
        $this-&gt;assertDataSetsEqual($expectedDataSet, $dataSet);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataSetAssertionsTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testManualDataSetAssertion()
    {
        $dataSet = new PHPUnit_Extensions_Database_DataSet_QueryDataSet();
        $dataSet-&gt;addTable('guestbook', 'SELECT id, content, user FROM guestbook'); // additional tables
        $expectedDataSet = $this-&gt;createFlatXmlDataSet('guestbook.xml');

        $this-&gt;assertDataSetsEqual($expectedDataSet, $dataSet);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042306Z" creationid="Wynn" creationdate="20150319T042306Z">
        <seg>&lt;?php
class DataSetAssertionsTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testManualDataSetAssertion()
    {
        $dataSet = new PHPUnit_Extensions_Database_DataSet_QueryDataSet();
        $dataSet-&gt;addTable('guestbook', 'SELECT id, content, user FROM guestbook'); // additional tables
        $expectedDataSet = $this-&gt;createFlatXmlDataSet('guestbook.xml');

        $this-&gt;assertDataSetsEqual($expectedDataSet, $dataSet);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataSetFilterTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testIncludeFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();

        $filterDataSet = new PHPUnit_Extensions_Database_DataSet_DataSetFilter($dataSet);
        $filterDataSet-&gt;addIncludeTables(array('guestbook'));
        $filterDataSet-&gt;setIncludeColumnsForTable('guestbook', array('id', 'content'));
        // ..
    }

    public function testExcludeFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();

        $filterDataSet = new PHPUnit_Extensions_Database_DataSet_DataSetFilter($dataSet);
        $filterDataSet-&gt;addExcludeTables(array('foo', 'bar', 'baz')); // only keep the guestbook table!
        $filterDataSet-&gt;setExcludeColumnsForTable('guestbook', array('user', 'created'));
        // ..
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075221Z" creationid="Wynn" creationdate="20150317T075221Z">
        <seg>&lt;?php
class DataSetFilterTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testIncludeFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();

        $filterDataSet = new PHPUnit_Extensions_Database_DataSet_DataSetFilter($dataSet);
        $filterDataSet-&gt;addIncludeTables(array('guestbook'));
        $filterDataSet-&gt;setIncludeColumnsForTable('guestbook', array('id', 'content'));
        // ..
    }

    public function testExcludeFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();

        $filterDataSet = new PHPUnit_Extensions_Database_DataSet_DataSetFilter($dataSet);
        $filterDataSet-&gt;addExcludeTables(array('foo', 'bar', 'baz')); // only keep the guestbook table!
        $filterDataSet-&gt;setExcludeColumnsForTable('guestbook', array('user', 'created'));
        // ..
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return array(
          'adding zeros' =&gt; array(0, 0, 0),
          'zero plus one' =&gt; array(0, 1, 1),
          'one plus zero' =&gt; array(1, 0, 1),
          'one plus one' =&gt; array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090951Z" creationid="Wynn" creationdate="20150817T090951Z">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return array(
          'adding zeros' =&gt; array(0, 0, 0),
          'zero plus one' =&gt; array(0, 1, 1),
          'one plus zero' =&gt; array(1, 0, 1),
          'one plus one' =&gt; array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return array(
          array(0, 0, 0),
          array(0, 1, 1),
          array(1, 0, 1),
          array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102148Z" creationid="Wynn" creationdate="20150327T102148Z">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return array(
          array(0, 0, 0),
          array(0, 1, 1),
          array(1, 0, 1),
          array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testAdd($a, $b, $c)
    {
        $this-&gt;assertEquals($c, $a + $b);
    }

    public function provider()
    {
        return array(
          array(0, 0, 0),
          array(0, 1, 1),
          array(1, 0, 1),
          array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050955Z" creationid="Wynn" creationdate="20150330T050955Z">
        <seg>&lt;?php
class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testAdd($a, $b, $c)
    {
        $this-&gt;assertEquals($c, $a + $b);
    }

    public function provider()
    {
        return array(
          array(0, 0, 0),
          array(0, 1, 1),
          array(1, 0, 1),
          array(1, 1, 3)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        if (!extension_loaded('mysqli')) {
            $this-&gt;markTestSkipped(
              'The MySQLi extension is not available.'
            );
        }
    }

    public function testConnection()
    {
        // ...
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092153Z" creationid="Wynn" creationdate="20150319T092153Z">
        <seg>&lt;?php
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        if (!extension_loaded('mysqli')) {
            $this-&gt;markTestSkipped(
              'The MySQLi 扩展不可用。'
            );
        }
    }

    public function testConnection()
    {
        // ...
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    protected static $dbh;

    public static function setUpBeforeClass()
    {
        self::$dbh = new PDO('sqlite::memory:');
    }

    public static function tearDownAfterClass()
    {
        self::$dbh = NULL;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082234Z" creationid="Wynn" creationdate="20150319T082234Z">
        <seg>&lt;?php
class DatabaseTest extends PHPUnit_Framework_TestCase
{
    protected static $dbh;

    public static function setUpBeforeClass()
    {
        self::$dbh = new PDO('sqlite::memory:');
    }

    public static function tearDownAfterClass()
    {
        self::$dbh = NULL;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DependencyAndDataProviderComboTest extends PHPUnit_Framework_TestCase
{
    public function provider()
    {
        return array(array('provider1'), array('provider2'));
    }

    public function testProducerFirst()
    {
        $this-&gt;assertTrue(true);
        return 'first';
    }

    public function testProducerSecond()
    {
        $this-&gt;assertTrue(true);
        return 'second';
    }

    /**
     * @depends testProducerFirst
     * @depends testProducerSecond
     * @dataProvider provider
     */
    public function testConsumer()
    {
        $this-&gt;assertEquals(
            array('provider1', 'first', 'second'),
            func_get_args()
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102408Z" creationid="Wynn" creationdate="20150327T102408Z">
        <seg>&lt;?php
class DependencyAndDataProviderComboTest extends PHPUnit_Framework_TestCase
{
    public function provider()
    {
        return array(array('provider1'), array('provider2'));
    }

    public function testProducerFirst()
    {
        $this-&gt;assertTrue(true);
        return 'first';
    }

    public function testProducerSecond()
    {
        $this-&gt;assertTrue(true);
        return 'second';
    }

    /**
     * @depends testProducerFirst
     * @depends testProducerSecond
     * @dataProvider provider
     */
    public function testConsumer()
    {
        $this-&gt;assertEquals(
            array('provider1', 'first', 'second'),
            func_get_args()
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class DependencyFailureTest extends PHPUnit_Framework_TestCase
{
    public function testOne()
    {
        $this-&gt;assertTrue(FALSE);
    }

    /**
     * @depends testOne
     */
    public function testTwo()
    {
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101906Z" creationid="Wynn" creationdate="20150327T101906Z">
        <seg>&lt;?php
class DependencyFailureTest extends PHPUnit_Framework_TestCase
{
    public function testOne()
    {
        $this-&gt;assertTrue(FALSE);
    }

    /**
     * @depends testOne
     */
    public function testTwo()
    {
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EmptyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEmpty(array('foo'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092942Z" creationid="Wynn" creationdate="20150309T092942Z">
        <seg>&lt;?php
class EmptyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEmpty(array('foo'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualXMLStructureTest extends PHPUnit_Framework_TestCase
{
    public function testFailureWithDifferentNodeNames()
    {
        $expected = new DOMElement('foo');
        $actual = new DOMElement('bar');

        $this-&gt;assertEqualXMLStructure($expected, $actual);
    }

    public function testFailureWithDifferentNodeAttributes()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo bar="true" /&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo/&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild, TRUE
        );
    }

    public function testFailureWithDifferentChildrenCount()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild
        );
    }

    public function testFailureWithDifferentChildren()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo&gt;&lt;baz/&gt;&lt;baz/&gt;&lt;baz/&gt;&lt;/foo&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092954Z" creationid="Wynn" creationdate="20150309T092954Z">
        <seg>&lt;?php
class EqualXMLStructureTest extends PHPUnit_Framework_TestCase
{
    public function testFailureWithDifferentNodeNames()
    {
        $expected = new DOMElement('foo');
        $actual = new DOMElement('bar');

        $this-&gt;assertEqualXMLStructure($expected, $actual);
    }

    public function testFailureWithDifferentNodeAttributes()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo bar="true" /&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo/&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild, TRUE
        );
    }

    public function testFailureWithDifferentChildrenCount()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild
        );
    }

    public function testFailureWithDifferentChildren()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;foo&gt;&lt;baz/&gt;&lt;baz/&gt;&lt;baz/&gt;&lt;/foo&gt;');

        $this-&gt;assertEqualXMLStructure(
          $expected-&gt;firstChild, $actual-&gt;firstChild
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;bar&gt;&lt;foo/&gt;&lt;/bar&gt;');

        $this-&gt;assertEquals($expected, $actual);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093028Z" creationid="Wynn" creationdate="20150309T093028Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new DOMDocument;
        $expected-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;');

        $actual = new DOMDocument;
        $actual-&gt;loadXML('&lt;bar&gt;&lt;foo/&gt;&lt;/bar&gt;');

        $this-&gt;assertEquals($expected, $actual);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new stdClass;
        $expected-&gt;foo = 'foo';
        $expected-&gt;bar = 'bar';

        $actual = new stdClass;
        $actual-&gt;foo = 'bar';
        $actual-&gt;baz = 'bar';

        $this-&gt;assertEquals($expected, $actual);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093043Z" creationid="Wynn" creationdate="20150309T093043Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new stdClass;
        $expected-&gt;foo = 'foo';
        $expected-&gt;bar = 'bar';

        $actual = new stdClass;
        $actual-&gt;foo = 'bar';
        $actual-&gt;baz = 'bar';

        $this-&gt;assertEquals($expected, $actual);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(1, 0);
    }

    public function testFailure2()
    {
        $this-&gt;assertEquals('bar', 'baz');
    }

    public function testFailure3()
    {
        $this-&gt;assertEquals("foo\nbar\nbaz\n", "foo\nbah\nbaz\n");
    }

    public function testFailure4()
    {
        $this-&gt;assertEquals("", 0)
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T040949Z" creationid="Wynn" creationdate="20151222T040949Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(1, 0);
    }

    public function testFailure2()
    {
        $this-&gt;assertEquals('bar', 'baz');
    }

    public function testFailure3()
    {
        $this-&gt;assertEquals("foo\nbar\nbaz\n", "foo\nbah\nbaz\n");
    }

    public function testFailure4()
    {
        $this-&gt;assertEquals("", 0)
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(1, 0);
    }

    public function testFailure2()
    {
        $this-&gt;assertEquals('bar', 'baz');
    }

    public function testFailure3()
    {
        $this-&gt;assertEquals("foo\nbar\nbaz\n", "foo\nbah\nbaz\n");
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093013Z" creationid="Wynn" creationdate="20150309T093013Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(1, 0);
    }

    public function testFailure2()
    {
        $this-&gt;assertEquals('bar', 'baz');
    }

    public function testFailure3()
    {
        $this-&gt;assertEquals("foo\nbar\nbaz\n", "foo\nbah\nbaz\n");
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(array('a', 'b', 'c'), array('a', 'c', 'd'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093054Z" creationid="Wynn" creationdate="20150309T093054Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertEquals(array('a', 'b', 'c'), array('a', 'c', 'd'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testSuccess()
    {
        $this-&gt;assertEquals(1.0, 1.1, '', 0.2);
    }

    public function testFailure()
    {
        $this-&gt;assertEquals(1.0, 1.1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093024Z" creationid="Wynn" creationdate="20150309T093024Z">
        <seg>&lt;?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testSuccess()
    {
        $this-&gt;assertEquals(1.0, 1.1, '', 0.2);
    }

    public function testFailure()
    {
        $this-&gt;assertEquals(1.0, 1.1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ErrorSuppressionTest extends PHPUnit_Framework_TestCase
{
    public function testFileWriting() {
        $writer = new FileWriter;
        $this-&gt;assertFalse(@$writer-&gt;write('/is-not-writeable/file', 'stuff'));
    }
}
class FileWriter
{
    public function write($file, $content) {
        $file = fopen($file, 'w');
        if($file == false) {
            return false;
        }
        // ...
    }
}

?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024330Z" creationid="Wynn" creationdate="20150330T024330Z">
        <seg>&lt;?php
class ErrorSuppressionTest extends PHPUnit_Framework_TestCase
{
    public function testFileWriting() {
        $writer = new FileWriter;
        $this-&gt;assertFalse(@$writer-&gt;write('/is-not-writeable/file', 'stuff'));
    }
}
class FileWriter
{
    public function write($file, $content) {
        $file = fopen($file, 'w');
        if($file == false) {
            return false;
        }
        // ...
    }
}

?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class Example
{
    protected $id;
    protected $directory;

    public function __construct($id)
    {
        $this-&gt;id = $id;
    }

    public function setDirectory($directory)
    {
        $this-&gt;directory = $directory . DIRECTORY_SEPARATOR . $this-&gt;id;

        if (!file_exists($this-&gt;directory)) {
            mkdir($this-&gt;directory, 0700, TRUE);
        }
    }
}?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091725Z" creationid="Wynn" creationdate="20150327T091725Z">
        <seg>&lt;?php
class Example
{
    protected $id;
    protected $directory;

    public function __construct($id)
    {
        $this-&gt;id = $id;
    }

    public function setDirectory($directory)
    {
        $this-&gt;directory = $directory . DIRECTORY_SEPARATOR . $this-&gt;id;

        if (!file_exists($this-&gt;directory)) {
            mkdir($this-&gt;directory, 0700, TRUE);
        }
    }
}?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        InvalidArgumentException
     * @expectedExceptionMessage Right Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException              InvalidArgumentException
     * @expectedExceptionMessageRegExp #Right.*#
     */
    public function testExceptionMessageMatchesRegExp()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException     InvalidArgumentException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasRightCode()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102900Z" creationid="Wynn" creationdate="20150327T102900Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        InvalidArgumentException
     * @expectedExceptionMessage Right Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException              InvalidArgumentException
     * @expectedExceptionMessageRegExp #Right.*#
     */
    public function testExceptionMessageMatchesRegExp()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException     InvalidArgumentException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasRightCode()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        InvalidArgumentException
     * @expectedExceptionMessage Right Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException     InvalidArgumentException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasRightCode()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051147Z" creationid="Wynn" creationdate="20150330T051147Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        InvalidArgumentException
     * @expectedExceptionMessage Right Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }

    /**
     * @expectedException     InvalidArgumentException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasRightCode()
    {
        throw new InvalidArgumentException('Some Message', 10);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException InvalidArgumentException
     */
    public function testException()
    {
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102815Z" creationid="Wynn" creationdate="20150327T102815Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException InvalidArgumentException
     */
    public function testException()
    {
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;expectException(InvalidArgumentException::class);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041307Z" creationid="Wynn" creationdate="20160113T041307Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;expectException(InvalidArgumentException::class);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;setExpectedException('InvalidArgumentException');
    }

    public function testExceptionHasRightMessage()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message'
        );
        throw new InvalidArgumentException('Some Message', 10);
    }

    public function testExceptionHasRightCode()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message', 20
        );
        throw new InvalidArgumentException('The Right Message', 10);
    }
}?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051250Z" creationid="Wynn" creationdate="20150330T051250Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;setExpectedException('InvalidArgumentException');
    }

    public function testExceptionHasRightMessage()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message'
        );
        throw new InvalidArgumentException('Some Message', 10);
    }

    public function testExceptionHasRightCode()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message', 20
        );
        throw new InvalidArgumentException('The Right Message', 10);
    }
}?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;setExpectedException('InvalidArgumentException');
    }

    public function testExceptionHasRightMessage()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message'
        );
        throw new InvalidArgumentException('Some Message', 10);
    }

    public function testExceptionMessageMatchesRegExp()
    {
        $this-&gt;setExpectedExceptionRegExp(
          'InvalidArgumentException', '/Right.*/', 10
        );
        throw new InvalidArgumentException('The Wrong Message', 10);
    }

    public function testExceptionHasRightCode()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message', 20
        );
        throw new InvalidArgumentException('The Right Message', 10);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103108Z" creationid="Wynn" creationdate="20150327T103108Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase
{
    public function testException()
    {
        $this-&gt;setExpectedException('InvalidArgumentException');
    }

    public function testExceptionHasRightMessage()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message'
        );
        throw new InvalidArgumentException('Some Message', 10);
    }

    public function testExceptionMessageMatchesRegExp()
    {
        $this-&gt;setExpectedExceptionRegExp(
          'InvalidArgumentException', '/Right.*/', 10
        );
        throw new InvalidArgumentException('The Wrong Message', 10);
    }

    public function testExceptionHasRightCode()
    {
        $this-&gt;setExpectedException(
          'InvalidArgumentException', 'Right Message', 20
        );
        throw new InvalidArgumentException('The Right Message', 10);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase {
    public function testException() {
        try {
            // ... Code that is expected to raise an exception ...
        }

        catch (InvalidArgumentException $expected) {
            return;
        }

        $this-&gt;fail('An expected exception has not been raised.');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T023944Z" creationid="Wynn" creationdate="20150330T023944Z">
        <seg>&lt;?php
class ExceptionTest extends PHPUnit_Framework_TestCase {
    public function testException() {
        try {
            // ... 预期会引发异常的代码 ...
        }

        catch (InvalidArgumentException $expected) {
            return;
        }

        $this-&gt;fail('预期的异常未出现。');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ExpectedErrorTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException PHPUnit_Framework_Error
     */
    public function testFailingInclude()
    {
        include 'not_existing_file.php';
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024138Z" creationid="Wynn" creationdate="20150330T024138Z">
        <seg>&lt;?php
class ExpectedErrorTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException PHPUnit_Framework_Error
     */
    public function testFailingInclude()
    {
        include 'not_existing_file.php';
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FalseTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFalse(TRUE);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093101Z" creationid="Wynn" creationdate="20150309T093101Z">
        <seg>&lt;?php
class FalseTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFalse(TRUE);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FileEqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFileEquals('/home/sb/expected', '/home/sb/actual');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093108Z" creationid="Wynn" creationdate="20150309T093108Z">
        <seg>&lt;?php
class FileEqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFileEquals('/home/sb/expected', '/home/sb/actual');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FileExistsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFileExists('/path/to/file');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093116Z" creationid="Wynn" creationdate="20150309T093116Z">
        <seg>&lt;?php
class FileExistsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertFileExists('/path/to/file');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testFunctionCalledTwoTimesWithSpecificArguments()
    {
        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;setMethods(array('set'))
                     -&gt;getMock();

        $mock-&gt;expects($this-&gt;exactly(2))
             -&gt;method('set')
             -&gt;withConsecutive(
                 array($this-&gt;equalTo('foo'), $this-&gt;greaterThan(0)),
                 array($this-&gt;equalTo('bar'), $this-&gt;greaterThan(0))
             );

        $mock-&gt;set('foo', 21);
        $mock-&gt;set('bar', 48);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085825Z" creationid="Wynn" creationdate="20150327T085825Z">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testFunctionCalledTwoTimesWithSpecificArguments()
    {
        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;setMethods(array('set'))
                     -&gt;getMock();

        $mock-&gt;expects($this-&gt;exactly(2))
             -&gt;method('set')
             -&gt;withConsecutive(
                 array($this-&gt;equalTo('foo'), $this-&gt;greaterThan(0)),
                 array($this-&gt;equalTo('bar'), $this-&gt;greaterThan(0))
             );

        $mock-&gt;set('foo', 21);
        $mock-&gt;set('bar', 48);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $cloneArguments = true;

        $mock = $this-&gt;getMock(
            'stdClass',
            array(),
            array(),
            '',
            FALSE,
            TRUE,
            TRUE,
            $cloneArguments
        );

        // or using the mock builder
        $mock = $this-&gt;getMockBuilder('stdClass')-&gt;enableArgumentCloning()-&gt;getMock();

        // now your mock clones parameters so the identicalTo constraint will fail.
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045553Z" creationid="Wynn" creationdate="20150330T045553Z">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $cloneArguments = true;

        $mock = $this-&gt;getMock(
            'stdClass',
            array(),
            array(),
            '',
            FALSE,
            TRUE,
            TRUE,
            $cloneArguments
        );

        // 或使用仿件构建器
        $mock = $this-&gt;getMockBuilder('stdClass')-&gt;enableArgumentCloning()-&gt;getMock();

        // 现在仿件将对参数进行克隆，因此 identicalTo 约束将会失败。
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $cloneArguments = true;

        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;enableArgumentCloning()
                     -&gt;getMock();

        // now your mock clones parameters so the identicalTo constraint
        // will fail.
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090126Z" creationid="Wynn" creationdate="20150327T090126Z">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $cloneArguments = true;

        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;enableArgumentCloning()
                     -&gt;getMock();

        // 现在仿件将对参数进行克隆，因此 identicalTo 约束将会失败。
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $expectedObject = new stdClass;

        $mock = $this-&gt;getMock('stdClass', array('foo'));
        $mock-&gt;expects($this-&gt;once())
             -&gt;method('foo')
             -&gt;with($this-&gt;identicalTo($expectedObject));

        $mock-&gt;foo($expectedObject);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045504Z" creationid="Wynn" creationdate="20150330T045504Z">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $expectedObject = new stdClass;

        $mock = $this-&gt;getMock('stdClass', array('foo'));
        $mock-&gt;expects($this-&gt;once())
             -&gt;method('foo')
             -&gt;with($this-&gt;identicalTo($expectedObject));

        $mock-&gt;foo($expectedObject);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $expectedObject = new stdClass;

        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;setMethods(array('foo'))
                     -&gt;getMock();

        $mock-&gt;expects($this-&gt;once())
             -&gt;method('foo')
             -&gt;with($this-&gt;identicalTo($expectedObject));

        $mock-&gt;foo($expectedObject);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090106Z" creationid="Wynn" creationdate="20150327T090106Z">
        <seg>&lt;?php
class FooTest extends PHPUnit_Framework_TestCase
{
    public function testIdenticalObjectPassed()
    {
        $expectedObject = new stdClass;

        $mock = $this-&gt;getMockBuilder('stdClass')
                     -&gt;setMethods(array('foo'))
                     -&gt;getMock();

        $mock-&gt;expects($this-&gt;once())
             -&gt;method('foo')
             -&gt;with($this-&gt;identicalTo($expectedObject));

        $mock-&gt;foo($expectedObject);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GoogleTest extends PHPUnit_Framework_TestCase
{
    public function testSearch()
    {
        $googleSearch = $this-&gt;getMockFromWsdl(
          'GoogleSearch.wsdl', 'GoogleSearch'
        );

        $directoryCategory = new stdClass;
        $directoryCategory-&gt;fullViewableName = '';
        $directoryCategory-&gt;specialEncoding = '';

        $element = new stdClass;
        $element-&gt;summary = '';
        $element-&gt;URL = 'http://www.phpunit.de/';
        $element-&gt;snippet = '...';
        $element-&gt;title = '&lt;b&gt;PHPUnit&lt;/b&gt;';
        $element-&gt;cachedSize = '11k';
        $element-&gt;relatedInformationPresent = TRUE;
        $element-&gt;hostName = 'www.phpunit.de';
        $element-&gt;directoryCategory = $directoryCategory;
        $element-&gt;directoryTitle = '';

        $result = new stdClass;
        $result-&gt;documentFiltering = FALSE;
        $result-&gt;searchComments = '';
        $result-&gt;estimatedTotalResultsCount = 378000;
        $result-&gt;estimateIsExact = FALSE;
        $result-&gt;resultElements = array($element);
        $result-&gt;searchQuery = 'PHPUnit';
        $result-&gt;startIndex = 1;
        $result-&gt;endIndex = 1;
        $result-&gt;searchTips = '';
        $result-&gt;directoryCategories = array();
        $result-&gt;searchTime = 0.248822;

        $googleSearch-&gt;expects($this-&gt;any())
                     -&gt;method('doGoogleSearch')
                     -&gt;will($this-&gt;returnValue($result));

        /**
         * $googleSearch-&gt;doGoogleSearch() will now return a stubbed result and
         * the web service's doGoogleSearch() method will not be invoked.
         */
        $this-&gt;assertEquals(
          $result,
          $googleSearch-&gt;doGoogleSearch(
            '00000000000000000000000000000000',
            'PHPUnit',
            0,
            1,
            FALSE,
            '',
            FALSE,
            '',
            '',
            ''
          )
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045621Z" creationid="Wynn" creationdate="20150330T045621Z">
        <seg>&lt;?php
class GoogleTest extends PHPUnit_Framework_TestCase
{
    public function testSearch()
    {
        $googleSearch = $this-&gt;getMockFromWsdl(
          'GoogleSearch.wsdl', 'GoogleSearch'
        );

        $directoryCategory = new stdClass;
        $directoryCategory-&gt;fullViewableName = '';
        $directoryCategory-&gt;specialEncoding = '';

        $element = new stdClass;
        $element-&gt;summary = '';
        $element-&gt;URL = 'http://www.phpunit.de/';
        $element-&gt;snippet = '...';
        $element-&gt;title = '&lt;b&gt;PHPUnit&lt;/b&gt;';
        $element-&gt;cachedSize = '11k';
        $element-&gt;relatedInformationPresent = TRUE;
        $element-&gt;hostName = 'www.phpunit.de';
        $element-&gt;directoryCategory = $directoryCategory;
        $element-&gt;directoryTitle = '';

        $result = new stdClass;
        $result-&gt;documentFiltering = FALSE;
        $result-&gt;searchComments = '';
        $result-&gt;estimatedTotalResultsCount = 378000;
        $result-&gt;estimateIsExact = FALSE;
        $result-&gt;resultElements = array($element);
        $result-&gt;searchQuery = 'PHPUnit';
        $result-&gt;startIndex = 1;
        $result-&gt;endIndex = 1;
        $result-&gt;searchTips = '';
        $result-&gt;directoryCategories = array();
        $result-&gt;searchTime = 0.248822;

        $googleSearch-&gt;expects($this-&gt;any())
                     -&gt;method('doGoogleSearch')
                     -&gt;will($this-&gt;returnValue($result));

        /**
         * $googleSearch-&gt;doGoogleSearch() 将会返回上桩的结果，
         * web 服务的 doGoogleSearch() 方法不会被调用。
         */
        $this-&gt;assertEquals(
          $result,
          $googleSearch-&gt;doGoogleSearch(
            '00000000000000000000000000000000',
            'PHPUnit',
            0,
            1,
            FALSE,
            '',
            FALSE,
            '',
            '',
            ''
          )
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GoogleTest extends PHPUnit_Framework_TestCase
{
    public function testSearch()
    {
        $googleSearch = $this-&gt;getMockFromWsdl(
          'GoogleSearch.wsdl', 'GoogleSearch'
        );

        $directoryCategory = new stdClass;
        $directoryCategory-&gt;fullViewableName = '';
        $directoryCategory-&gt;specialEncoding = '';

        $element = new stdClass;
        $element-&gt;summary = '';
        $element-&gt;URL = 'https://phpunit.de/';
        $element-&gt;snippet = '...';
        $element-&gt;title = '&lt;b&gt;PHPUnit&lt;/b&gt;';
        $element-&gt;cachedSize = '11k';
        $element-&gt;relatedInformationPresent = TRUE;
        $element-&gt;hostName = 'phpunit.de';
        $element-&gt;directoryCategory = $directoryCategory;
        $element-&gt;directoryTitle = '';

        $result = new stdClass;
        $result-&gt;documentFiltering = FALSE;
        $result-&gt;searchComments = '';
        $result-&gt;estimatedTotalResultsCount = 3.9000;
        $result-&gt;estimateIsExact = FALSE;
        $result-&gt;resultElements = array($element);
        $result-&gt;searchQuery = 'PHPUnit';
        $result-&gt;startIndex = 1;
        $result-&gt;endIndex = 1;
        $result-&gt;searchTips = '';
        $result-&gt;directoryCategories = array();
        $result-&gt;searchTime = 0.248822;

        $googleSearch-&gt;expects($this-&gt;any())
                     -&gt;method('doGoogleSearch')
                     -&gt;will($this-&gt;returnValue($result));

        /**
         * $googleSearch-&gt;doGoogleSearch() will now return a stubbed result and
         * the web service's doGoogleSearch() method will not be invoked.
         */
        $this-&gt;assertEquals(
          $result,
          $googleSearch-&gt;doGoogleSearch(
            '00000000000000000000000000000000',
            'PHPUnit',
            0,
            1,
            FALSE,
            '',
            FALSE,
            '',
            '',
            ''
          )
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091350Z" creationid="Wynn" creationdate="20150327T091350Z">
        <seg>&lt;?php
class GoogleTest extends PHPUnit_Framework_TestCase
{
    public function testSearch()
    {
        $googleSearch = $this-&gt;getMockFromWsdl(
          'GoogleSearch.wsdl', 'GoogleSearch'
        );

        $directoryCategory = new stdClass;
        $directoryCategory-&gt;fullViewableName = '';
        $directoryCategory-&gt;specialEncoding = '';

        $element = new stdClass;
        $element-&gt;summary = '';
        $element-&gt;URL = 'https://phpunit.de/';
        $element-&gt;snippet = '...';
        $element-&gt;title = '&lt;b&gt;PHPUnit&lt;/b&gt;';
        $element-&gt;cachedSize = '11k';
        $element-&gt;relatedInformationPresent = TRUE;
        $element-&gt;hostName = 'phpunit.de';
        $element-&gt;directoryCategory = $directoryCategory;
        $element-&gt;directoryTitle = '';

        $result = new stdClass;
        $result-&gt;documentFiltering = FALSE;
        $result-&gt;searchComments = '';
        $result-&gt;estimatedTotalResultsCount = 3.9000;
        $result-&gt;estimateIsExact = FALSE;
        $result-&gt;resultElements = array($element);
        $result-&gt;searchQuery = 'PHPUnit';
        $result-&gt;startIndex = 1;
        $result-&gt;endIndex = 1;
        $result-&gt;searchTips = '';
        $result-&gt;directoryCategories = array();
        $result-&gt;searchTime = 0.248822;

        $googleSearch-&gt;expects($this-&gt;any())
                     -&gt;method('doGoogleSearch')
                     -&gt;will($this-&gt;returnValue($result));

        /**
         * $googleSearch-&gt;doGoogleSearch() 将会返回上桩的结果，
         * web 服务的 doGoogleSearch() 方法不会被调用。
         */
        $this-&gt;assertEquals(
          $result,
          $googleSearch-&gt;doGoogleSearch(
            '00000000000000000000000000000000',
            'PHPUnit',
            0,
            1,
            FALSE,
            '',
            FALSE,
            '',
            '',
            ''
          )
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GreatThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertGreaterThanOrEqual(2, 1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093124Z" creationid="Wynn" creationdate="20150309T093124Z">
        <seg>&lt;?php
class GreatThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertGreaterThanOrEqual(2, 1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GreaterThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertGreaterThan(2, 1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093120Z" creationid="Wynn" creationdate="20150309T093120Z">
        <seg>&lt;?php
class GreaterThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertGreaterThan(2, 1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GuestbookIntegrationTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @coversNothing
     */
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );

        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");

        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093404Z" creationid="Wynn" creationdate="20150309T093404Z">
        <seg>&lt;?php
class GuestbookIntegrationTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @coversNothing
     */
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );

        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");

        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GuestbookIntegrationTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @coversNothing
     */
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032716Z" creationid="Wynn" creationdate="20150330T032716Z">
        <seg>&lt;?php
class GuestbookIntegrationTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @coversNothing
     */
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T024343Z" creationid="Wynn" creationdate="20150319T024343Z">
        <seg>&lt;?php
class GuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testAddEntry()
    {
        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $queryTable = $this-&gt;getConnection()-&gt;createQueryTable(
            'guestbook', 'SELECT * FROM guestbook'
        );
        $expectedTable = $this-&gt;createFlatXmlDataSet("expectedBook.xml")
                              -&gt;getTable("guestbook");
        $this-&gt;assertTablesEqual($expectedTable, $queryTable);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class GuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testAddEntry()
    {
        $this-&gt;assertEquals(2, $this-&gt;getConnection()-&gt;getRowCount('guestbook'), "Pre-Condition");

        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $this-&gt;assertEquals(3, $this-&gt;getConnection()-&gt;getRowCount('guestbook'), "Inserting failed");
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T023701Z" creationid="Wynn" creationdate="20150319T023701Z">
        <seg>&lt;?php
class GuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    public function testAddEntry()
    {
        $this-&gt;assertEquals(2, $this-&gt;getConnection()-&gt;getRowCount('guestbook'), "Pre-Condition");

        $guestbook = new Guestbook();
        $guestbook-&gt;addEntry("suzy", "Hello world!");

        $this-&gt;assertEquals(3, $this-&gt;getConnection()-&gt;getRowCount('guestbook'), "Inserting failed");
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class InfiniteTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInfinite(1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080006Z" creationid="Wynn" creationdate="20150706T080006Z">
        <seg>&lt;?php
class InfiniteTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInfinite(1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class InstanceOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInstanceOf('RuntimeException', new Exception);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093129Z" creationid="Wynn" creationdate="20150309T093129Z">
        <seg>&lt;?php
class InstanceOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInstanceOf('RuntimeException', new Exception);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class InternalTypeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInternalType('string', 42);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093133Z" creationid="Wynn" creationdate="20150309T093133Z">
        <seg>&lt;?php
class InternalTypeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertInternalType('string', 42);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class JsonFileEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonFileEqualsJsonFile(
          'path/to/fixture/file', 'path/to/actual/file');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093136Z" creationid="Wynn" creationdate="20150309T093136Z">
        <seg>&lt;?php
class JsonFileEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonFileEqualsJsonFile(
          'path/to/fixture/file', 'path/to/actual/file');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class JsonStringEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonStringEqualsJsonFile(
          'path/to/fixture/file', json_encode(array("Mascott" =&gt; "ux"))
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093141Z" creationid="Wynn" creationdate="20150309T093141Z">
        <seg>&lt;?php
class JsonStringEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonStringEqualsJsonFile(
          'path/to/fixture/file', json_encode(array("Mascott" =&gt; "ux"))
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class JsonStringEqualsJsonStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonStringEqualsJsonString(
          json_encode(array("Mascott" =&gt; "Tux")), json_encode(array("Mascott" =&gt; "ux"))
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093144Z" creationid="Wynn" creationdate="20150309T093144Z">
        <seg>&lt;?php
class JsonStringEqualsJsonStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertJsonStringEqualsJsonString(
          json_encode(array("Mascott" =&gt; "Tux")), json_encode(array("Mascott" =&gt; "ux"))
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class LessThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertLessThanOrEqual(1, 2);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093153Z" creationid="Wynn" creationdate="20150309T093153Z">
        <seg>&lt;?php
class LessThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertLessThanOrEqual(1, 2);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class LessThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertLessThan(1, 2);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093150Z" creationid="Wynn" creationdate="20150309T093150Z">
        <seg>&lt;?php
class LessThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertLessThan(1, 2);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class LongArrayDiffTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(0,0,0,0,0,0,0,0,0,0,0,0,1,2,3 ,4,5,6),
            array(0,0,0,0,0,0,0,0,0,0,0,0,1,2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025012Z" creationid="Wynn" creationdate="20150330T025012Z">
        <seg>&lt;?php
class LongArrayDiffTest extends PHPUnit_Framework_TestCase
{
    public function testEquality() {
        $this-&gt;assertEquals(
            array(0,0,0,0,0,0,0,0,0,0,0,0,1,2,3 ,4,5,6),
            array(0,0,0,0,0,0,0,0,0,0,0,0,1,2,33,4,5,6)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MultipleDependenciesTest extends PHPUnit_Framework_TestCase
{
    public function testProducerFirst()
    {
        $this-&gt;assertTrue(true);
        return 'first';
    }

    public function testProducerSecond()
    {
        $this-&gt;assertTrue(true);
        return 'second';
    }

    /**
     * @depends testProducerFirst
     * @depends testProducerSecond
     */
    public function testConsumer()
    {
        $this-&gt;assertEquals(
            array('first', 'second'),
            func_get_args()
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102005Z" creationid="Wynn" creationdate="20150327T102005Z">
        <seg>&lt;?php
class MultipleDependenciesTest extends PHPUnit_Framework_TestCase
{
    public function testProducerFirst()
    {
        $this-&gt;assertTrue(true);
        return 'first';
    }

    public function testProducerSecond()
    {
        $this-&gt;assertTrue(true);
        return 'second';
    }

    /**
     * @depends testProducerFirst
     * @depends testProducerSecond
     */
    public function testConsumer()
    {
        $this-&gt;assertEquals(
            array('first', 'second'),
            func_get_args()
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyApp_DbUnit_ArrayDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet
{
    /**
     * @var array
     */
    protected $tables = array();

    /**
     * @param array $data
     */
    public function __construct(array $data)
    {
        foreach ($data AS $tableName =&gt; $rows) {
            $columns = array();
            if (isset($rows[0])) {
                $columns = array_keys($rows[0]);
            }

            $metaData = new PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData($tableName, $columns);
            $table = new PHPUnit_Extensions_Database_DataSet_DefaultTable($metaData);

            foreach ($rows AS $row) {
                $table-&gt;addRow($row);
            }
            $this-&gt;tables[$tableName] = $table;
        }
    }

    protected function createIterator($reverse = FALSE)
    {
        return new PHPUnit_Extensions_Database_DataSet_DefaultTableIterator($this-&gt;tables, $reverse);
    }

    public function getTable($tableName)
    {
        if (!isset($this-&gt;tables[$tableName])) {
            throw new InvalidArgumentException("$tableName is not a table in the current database.");
        }

        return $this-&gt;tables[$tableName];
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074700Z" creationid="Wynn" creationdate="20150317T074700Z">
        <seg>&lt;?php
class MyApp_DbUnit_ArrayDataSet extends PHPUnit_Extensions_Database_DataSet_AbstractDataSet
{
    /**
     * @var array
     */
    protected $tables = array();

    /**
     * @param array $data
     */
    public function __construct(array $data)
    {
        foreach ($data AS $tableName =&gt; $rows) {
            $columns = array();
            if (isset($rows[0])) {
                $columns = array_keys($rows[0]);
            }

            $metaData = new PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData($tableName, $columns);
            $table = new PHPUnit_Extensions_Database_DataSet_DefaultTable($metaData);

            foreach ($rows AS $row) {
                $table-&gt;addRow($row);
            }
            $this-&gt;tables[$tableName] = $table;
        }
    }

    protected function createIterator($reverse = FALSE)
    {
        return new PHPUnit_Extensions_Database_DataSet_DefaultTableIterator($this-&gt;tables, $reverse);
    }

    public function getTable($tableName)
    {
        if (!isset($this-&gt;tables[$tableName])) {
            throw new InvalidArgumentException("$tableName is not a table in the current database.");
        }

        return $this-&gt;tables[$tableName];
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @return PHPUnit_Extensions_Database_DB_IDatabaseConnection
     */
    public function getConnection()
    {
        $pdo = new PDO('sqlite::memory:');
        return $this-&gt;createDefaultDBConnection($pdo, ':memory:');
    }

    /**
     * @return PHPUnit_Extensions_Database_DataSet_IDataSet
     */
    public function getDataSet()
    {
        return $this-&gt;createFlatXMLDataSet(dirname(__FILE__).'/_files/guestbook-seed.xml');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094711Z" creationid="Wynn" creationdate="20150316T094711Z">
        <seg>&lt;?php
class MyGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @return PHPUnit_Extensions_Database_DB_IDatabaseConnection
     */
    public function getConnection()
    {
        $pdo = new PDO('sqlite::memory:');
        return $this-&gt;createDefaultDBConnection($pdo, ':memory:');
    }

    /**
     * @return PHPUnit_Extensions_Database_DataSet_IDataSet
     */
    public function getDataSet()
    {
        return $this-&gt;createFlatXMLDataSet(dirname(__FILE__).'/_files/guestbook-seed.xml');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MySqlGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @return PHPUnit_Extensions_Database_DB_IDatabaseConnection
     */
    public function getConnection()
    {
        $database = 'my_database';
        $user = 'my_user';
        $password = 'my_password';
        $pdo = new PDO('mysql:...', $user, $password);
        return $this-&gt;createDefaultDBConnection($pdo, $database);
    }

    public function testGuestbook()
    {
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();
        // ...
    }

    public function testFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet($tableNames);
        // ...
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075032Z" creationid="Wynn" creationdate="20150317T075032Z">
        <seg>&lt;?php
class MySqlGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    /**
     * @return PHPUnit_Extensions_Database_DB_IDatabaseConnection
     */
    public function getConnection()
    {
        $database = 'my_database';
        $user = 'my_user';
        $password = 'my_password';
        $pdo = new PDO('mysql:...', $user, $password);
        return $this-&gt;createDefaultDBConnection($pdo, $database);
    }

    public function testGuestbook()
    {
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet();
        // ...
    }

    public function testFilteredGuestbook()
    {
        $tableNames = array('guestbook');
        $dataSet = $this-&gt;getConnection()-&gt;createDataSet($tableNames);
        // ...
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyTest extends PHPUnit_Framework_TestCase
{
    public function testCalculate()
    {
        $this-&gt;assertEquals(2, 1 + 1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094513Z" creationid="Wynn" creationdate="20150316T094513Z">
        <seg>&lt;?php
class MyTest extends PHPUnit_Framework_TestCase
{
    public function testCalculate()
    {
        $this-&gt;assertEquals(2, 1 + 1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createFlatXmlDataSet('myFlatXmlFixture.xml');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072502Z" creationid="Wynn" creationdate="20150317T072502Z">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createFlatXmlDataSet('myFlatXmlFixture.xml');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createMySQLXMLDataSet('/path/to/file.xml');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074216Z" creationid="Wynn" creationdate="20150317T074216Z">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createMySQLXMLDataSet('/path/to/file.xml');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createXMLDataSet('myXmlFixture.xml');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T073948Z" creationid="Wynn" creationdate="20150317T073948Z">
        <seg>&lt;?php
class MyTestCase extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        return $this-&gt;createXMLDataSet('myXmlFixture.xml');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class NanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertNan(1);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080049Z" creationid="Wynn" creationdate="20150706T080049Z">
        <seg>&lt;?php
class NanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertNan(1);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class NullTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertNull('foo');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093155Z" creationid="Wynn" creationdate="20150309T093155Z">
        <seg>&lt;?php
class NullTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertNull('foo');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ObjectHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertObjectHasAttribute('foo', new stdClass);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093157Z" creationid="Wynn" creationdate="20150309T093157Z">
        <seg>&lt;?php
class ObjectHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertObjectHasAttribute('foo', new stdClass);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class OutputTest extends PHPUnit_Framework_TestCase
{
    public function testExpectFooActualFoo()
    {
        $this-&gt;expectOutputString('foo');
        print 'foo';
    }

    public function testExpectBarActualBaz()
    {
        $this-&gt;expectOutputString('bar');
        print 'baz';
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024639Z" creationid="Wynn" creationdate="20150330T024639Z">
        <seg>&lt;?php
class OutputTest extends PHPUnit_Framework_TestCase
{
    public function testExpectFooActualFoo()
    {
        $this-&gt;expectOutputString('foo');
        print 'foo';
    }

    public function testExpectBarActualBaz()
    {
        $this-&gt;expectOutputString('bar');
        print 'baz';
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class PHPUnit_Framework_Constraint_IsTrue extends PHPUnit_Framework_Constraint
{
    /**
     * Evaluates the constraint for parameter $other. Returns TRUE if the
     * constraint is met, FALSE otherwise.
     *
     * @param mixed $other Value or object to evaluate.
     * @return bool
     */
    public function matches($other)
    {
        return $other === TRUE;
    }

    /**
     * Returns a string representation of the constraint.
     *
     * @return string
     */
    public function toString()
    {
        return 'is true';
    }
}?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T065838Z" creationid="Wynn" creationdate="20150319T065838Z">
        <seg>&lt;?php
class PHPUnit_Framework_Constraint_IsTrue extends PHPUnit_Framework_Constraint
{
    /**
     * 对参数 $other 进行约束评定。如果符合约束，
     * 返回 TRUE，否则返回 FALSE。
     *
     * @param mixed $other Value or object to evaluate.
     * @return bool
     */
    public function matches($other)
    {
        return $other === TRUE;
    }

    /**
     * 返回代表此约束的字符串。
     *
     * @return string
     */
    public function toString()
    {
        return 'is true';
    }
}?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class RegExpTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertRegExp('/foo/', 'bar');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093159Z" creationid="Wynn" creationdate="20150309T093159Z">
        <seg>&lt;?php
class RegExpTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertRegExp('/foo/', 'bar');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ReplacementTest extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        $ds = $this-&gt;createFlatXmlDataSet('myFlatXmlFixture.xml');
        $rds = new PHPUnit_Extensions_Database_DataSet_ReplacementDataSet($ds);
        $rds-&gt;addFullReplacement('##NULL##', null);
        return $rds;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075139Z" creationid="Wynn" creationdate="20150317T075139Z">
        <seg>&lt;?php
class ReplacementTest extends PHPUnit_Extensions_Database_TestCase
{
    public function getDataSet()
    {
        $ds = $this-&gt;createFlatXmlDataSet('myFlatXmlFixture.xml');
        $rds = new PHPUnit_Extensions_Database_DataSet_ReplacementDataSet($ds);
        $rds-&gt;addFullReplacement('##NULL##', null);
        return $rds;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertSame('2204', 2204);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093215Z" creationid="Wynn" creationdate="20150309T093215Z">
        <seg>&lt;?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertSame('2204', 2204);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertSame(new stdClass, new stdClass);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093218Z" creationid="Wynn" creationdate="20150309T093218Z">
        <seg>&lt;?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertSame(new stdClass, new stdClass);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SampleTest extends PHPUnit_Framework_TestCase
{
    public function testSomething()
    {
        // Optional: Test anything here, if you want.
        $this-&gt;assertTrue(TRUE, 'This should already work.');

        // Stop here and mark this test as incomplete.
        $this-&gt;markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091842Z" creationid="Wynn" creationdate="20150319T091711Z">
        <seg>&lt;?php
class SampleTest extends PHPUnit_Framework_TestCase
{
    public function testSomething()
    {
        // 可选：如果愿意，在这里随便测试点什么。
        $this-&gt;assertTrue(TRUE, '这应该已经是能正常工作的。');

        // 在这里停止，并将此测试标记为未完成。
        $this-&gt;markTestIncomplete(
          '此测试目前尚未实现。'
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SelectCountTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectCount('foo bar', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectCount('foo baz', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectCount('foo bar', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectCount('foo bar', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053942Z" creationid="Wynn" creationdate="20150330T053942Z">
        <seg>&lt;?php
class SelectCountTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;bar/&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectCount('foo bar', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectCount('foo baz', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectCount('foo bar', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectCount('foo bar', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SelectEqualsTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Bat', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054147Z" creationid="Wynn" creationdate="20150330T054147Z">
        <seg>&lt;?php
class SelectEqualsTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Bat', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectEquals('foo bar', 'Baz', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SelectRegExpTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/B[oe]z]/', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054242Z" creationid="Wynn" creationdate="20150330T054242Z">
        <seg>&lt;?php
class SelectRegExpTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        $this-&gt;xml = new DomDocument;
        $this-&gt;xml-&gt;loadXML('&lt;foo&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;bar&gt;Baz&lt;/bar&gt;&lt;/foo&gt;');
    }

    public function testAbsenceFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', FALSE, $this-&gt;xml);
    }

    public function testPresenceFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/B[oe]z]/', TRUE, $this-&gt;xml);
    }

    public function testExactCountFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', 5, $this-&gt;xml);
    }

    public function testRangeFailure()
    {
        $this-&gt;assertSelectRegExp('foo bar', '/Ba.*/', array('&gt;'=&gt;6, '&lt;'=&gt;8), $this-&gt;xml);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class ShortTestListener extends PHPUnit_Framework_BaseTestListener
{
    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070535Z" creationid="Wynn" creationdate="20150319T070535Z">
        <seg>&lt;?php
class ShortTestListener extends PHPUnit_Framework_BaseTestListener
{
    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SimpleTestListener implements PHPUnit_Framework_TestListener
{
    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Error while running test '%s'.\n", $test-&gt;getName());
    }

    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)
    {
        printf("Test '%s' failed.\n", $test-&gt;getName());
    }

    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is incomplete.\n", $test-&gt;getName());
    }

    public function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is deemed risky.\n", $test-&gt;getName());
    }

    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' has been skipped.\n", $test-&gt;getName());
    }

    public function startTest(PHPUnit_Framework_Test $test)
    {
        printf("Test '%s' started.\n", $test-&gt;getName());
    }

    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }

    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' started.\n", $suite-&gt;getName());
    }

    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' ended.\n", $suite-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070150Z" creationid="Wynn" creationdate="20150319T070150Z">
        <seg>&lt;?php
class SimpleTestListener implements PHPUnit_Framework_TestListener
{
    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Error while running test '%s'.\n", $test-&gt;getName());
    }

    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)
    {
        printf("Test '%s' failed.\n", $test-&gt;getName());
    }

    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is incomplete.\n", $test-&gt;getName());
    }

    public function addRiskyTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is deemed risky.\n", $test-&gt;getName());
    }

    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' has been skipped.\n", $test-&gt;getName());
    }

    public function startTest(PHPUnit_Framework_Test $test)
    {
        printf("Test '%s' started.\n", $test-&gt;getName());
    }

    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }

    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' started.\n", $suite-&gt;getName());
    }

    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' ended.\n", $suite-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SimpleTestListener implements PHPUnit_Framework_TestListener
{
    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Error while running test '%s'.\n", $test-&gt;getName());
    }

    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)
    {
        printf("Test '%s' failed.\n", $test-&gt;getName());
    }

    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is incomplete.\n", $test-&gt;getName());
    }

    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' has been skipped.\n", $test-&gt;getName());
    }

    public function startTest(PHPUnit_Framework_Test $test)
    {
        printf("Test '%s' started.\n", $test-&gt;getName());
    }

    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }

    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' started.\n", $suite-&gt;getName());
    }

    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' ended.\n", $suite-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040314Z" creationid="Wynn" creationdate="20150330T040314Z">
        <seg>&lt;?php
class SimpleTestListener implements PHPUnit_Framework_TestListener
{
    public function addError(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Error while running test '%s'.\n", $test-&gt;getName());
    }

    public function addFailure(PHPUnit_Framework_Test $test, PHPUnit_Framework_AssertionFailedError $e, $time)
    {
        printf("Test '%s' failed.\n", $test-&gt;getName());
    }

    public function addIncompleteTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' is incomplete.\n", $test-&gt;getName());
    }

    public function addSkippedTest(PHPUnit_Framework_Test $test, Exception $e, $time)
    {
        printf("Test '%s' has been skipped.\n", $test-&gt;getName());
    }

    public function startTest(PHPUnit_Framework_Test $test)
    {
        printf("Test '%s' started.\n", $test-&gt;getName());
    }

    public function endTest(PHPUnit_Framework_Test $test, $time)
    {
        printf("Test '%s' ended.\n", $test-&gt;getName());
    }

    public function startTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' started.\n", $suite-&gt;getName());
    }

    public function endTestSuite(PHPUnit_Framework_TestSuite $suite)
    {
        printf("TestSuite '%s' ended.\n", $suite-&gt;getName());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SomeClass
{
    public function doSomething()
    {
        // Do something.
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074947Z" creationid="Wynn" creationdate="20150327T074947Z">
        <seg>&lt;?php
class SomeClass
{
    public function doSomething()
    {
        // 随便做点什么。
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    protected $stack;

    protected function setUp()
    {
        $this-&gt;stack = array();
    }

    public function testEmpty()
    {
        $this-&gt;assertTrue(empty($this-&gt;stack));
    }

    public function testPush()
    {
        array_push($this-&gt;stack, 'foo');
        $this-&gt;assertEquals('foo', $this-&gt;stack[count($this-&gt;stack)-1]);
        $this-&gt;assertFalse(empty($this-&gt;stack));
    }

    public function testPop()
    {
        array_push($this-&gt;stack, 'foo');
        $this-&gt;assertEquals('foo', array_pop($this-&gt;stack));
        $this-&gt;assertTrue(empty($this-&gt;stack));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081029Z" creationid="Wynn" creationdate="20150319T081029Z">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    protected $stack;

    protected function setUp()
    {
        $this-&gt;stack = array();
    }

    public function testEmpty()
    {
        $this-&gt;assertTrue(empty($this-&gt;stack));
    }

    public function testPush()
    {
        array_push($this-&gt;stack, 'foo');
        $this-&gt;assertEquals('foo', $this-&gt;stack[count($this-&gt;stack)-1]);
        $this-&gt;assertFalse(empty($this-&gt;stack));
    }

    public function testPop()
    {
        array_push($this-&gt;stack, 'foo');
        $this-&gt;assertEquals('foo', array_pop($this-&gt;stack));
        $this-&gt;assertTrue(empty($this-&gt;stack));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    public function testEmpty()
    {
        $stack = array();
        $this-&gt;assertEmpty($stack);

        return $stack;
    }

    /**
     * @depends testEmpty
     */
    public function testPush(array $stack)
    {
        array_push($stack, 'foo');
        $this-&gt;assertEquals('foo', $stack[count($stack)-1]);
        $this-&gt;assertNotEmpty($stack);

        return $stack;
    }

    /**
     * @depends testPush
     */
    public function testPop(array $stack)
    {
        $this-&gt;assertEquals('foo', array_pop($stack));
        $this-&gt;assertEmpty($stack);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101734Z" creationid="Wynn" creationdate="20150327T101734Z">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    public function testEmpty()
    {
        $stack = array();
        $this-&gt;assertEmpty($stack);

        return $stack;
    }

    /**
     * @depends testEmpty
     */
    public function testPush(array $stack)
    {
        array_push($stack, 'foo');
        $this-&gt;assertEquals('foo', $stack[count($stack)-1]);
        $this-&gt;assertNotEmpty($stack);

        return $stack;
    }

    /**
     * @depends testPush
     */
    public function testPop(array $stack)
    {
        $this-&gt;assertEquals('foo', array_pop($stack));
        $this-&gt;assertEmpty($stack);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    public function testPushAndPop()
    {
        $stack = array();
        $this-&gt;assertEquals(0, count($stack));

        array_push($stack, 'foo');
        $this-&gt;assertEquals('foo', $stack[count($stack)-1]);
        $this-&gt;assertEquals(1, count($stack));

        $this-&gt;assertEquals('foo', array_pop($stack));
        $this-&gt;assertEquals(0, count($stack));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101608Z" creationid="Wynn" creationdate="20150327T101608Z">
        <seg>&lt;?php
class StackTest extends PHPUnit_Framework_TestCase
{
    public function testPushAndPop()
    {
        $stack = array();
        $this-&gt;assertEquals(0, count($stack));

        array_push($stack, 'foo');
        $this-&gt;assertEquals('foo', $stack[count($stack)-1]);
        $this-&gt;assertEquals(1, count($stack));

        $this-&gt;assertEquals('foo', array_pop($stack));
        $this-&gt;assertEquals(0, count($stack));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StringEndsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringEndsWith('suffix', 'foo');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093225Z" creationid="Wynn" creationdate="20150309T093225Z">
        <seg>&lt;?php
class StringEndsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringEndsWith('suffix', 'foo');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StringEqualsFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringEqualsFile('/home/sb/expected', 'actual');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093230Z" creationid="Wynn" creationdate="20150309T093230Z">
        <seg>&lt;?php
class StringEqualsFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringEqualsFile('/home/sb/expected', 'actual');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StringMatchesFormatFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringMatchesFormatFile('/path/to/expected.txt', 'foo');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093208Z" creationid="Wynn" creationdate="20150309T093208Z">
        <seg>&lt;?php
class StringMatchesFormatFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringMatchesFormatFile('/path/to/expected.txt', 'foo');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StringMatchesFormatTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringMatchesFormat('%i', 'foo');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093201Z" creationid="Wynn" creationdate="20150309T093201Z">
        <seg>&lt;?php
class StringMatchesFormatTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringMatchesFormat('%i', 'foo');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class StringStartsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringStartsWith('prefix', 'foo');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093234Z" creationid="Wynn" creationdate="20150309T093234Z">
        <seg>&lt;?php
class StringStartsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertStringStartsWith('prefix', 'foo');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class Subject
{
    protected $observers = array();
    protected $name;

    public function __construct($name)
    {
        $this-&gt;name = $name;
    }

    public function getName()
    {
        return $this-&gt;name;
    }

    public function attach(Observer $observer)
    {
        $this-&gt;observers[] = $observer;
    }

    public function doSomething()
    {
        // Do something.
        // ...

        // Notify observers that we did something.
        $this-&gt;notify('something');
    }

    public function doSomethingBad()
    {
        foreach ($this-&gt;observers as $observer) {
            $observer-&gt;reportError(42, 'Something bad happened', $this);
        }
    }

    protected function notify($argument)
    {
        foreach ($this-&gt;observers as $observer) {
            $observer-&gt;update($argument);
        }
    }

    // Other methods.
}

class Observer
{
    public function update($argument)
    {
        // Do something.
    }

    public function reportError($errorCode, $errorMessage, Subject $subject)
    {
        // Do something
    }

    // Other methods.
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084844Z" creationid="Wynn" creationdate="20150327T084844Z">
        <seg>&lt;?php
class Subject
{
    protected $observers = array();
    protected $name;

    public function __construct($name)
    {
        $this-&gt;name = $name;
    }

    public function getName()
    {
        return $this-&gt;name;
    }

    public function attach(Observer $observer)
    {
        $this-&gt;observers[] = $observer;
    }

    public function doSomething()
    {
        // 做点什么。
        // ...

        // 通知观察者。
        $this-&gt;notify('something');
    }

    public function doSomethingBad()
    {
        foreach ($this-&gt;observers as $observer) {
            $observer-&gt;reportError(42, 'Something bad happened', $this);
        }
    }

    protected function notify($argument)
    {
        foreach ($this-&gt;observers as $observer) {
            $observer-&gt;update($argument);
        }
    }

    // 其他方法。
}

class Observer
{
    public function update($argument)
    {
        // 做点什么。
    }

    public function reportError($errorCode, $errorMessage, Subject $subject)
    {
        // 做点什么。
    }

    // 其他方法。
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // Create a mock for the Observer class, mocking the
        // reportError() method
        $observer = $this-&gt;getMock('Observer', array('reportError'));

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;anything());

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // The doSomethingBad() method should report an error to the observer
        // via the reportError() method
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045429Z" creationid="Wynn" creationdate="20150330T045429Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // 为 Observer 类建立仿件，对 reportError() 方法进行模仿
        $observer = $this-&gt;getMock('Observer', array('reportError'));

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;anything());

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // doSomethingBad() 方法应当会通过（observer的）reportError()方法
        //向 observer 报告错误。
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // Create a mock for the Observer class, mocking the
        // reportError() method
        $observer = $this-&gt;getMock('Observer', array('reportError'));

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;callback(function($subject){
                          return is_callable(array($subject, 'getName')) &amp;&amp;
                                 $subject-&gt;getName() == 'My subject';
                        }));

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // The doSomethingBad() method should report an error to the observer
        // via the reportError() method
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045448Z" creationid="Wynn" creationdate="20150330T045448Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // 为 Observer 类建立仿件，模仿 reportError() 方法
        $observer = $this-&gt;getMock('Observer', array('reportError'));

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;callback(function($subject){
                          return is_callable(array($subject, 'getName')) &amp;&amp;
                                 $subject-&gt;getName() == 'My subject';
                        }));

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // doSomethingBad() 方法应当会通过（observer的）reportError()方法
        //向 observer 报告错误。
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // Create a mock for the Observer class, mocking the
        // reportError() method
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('reportError'))
                         -&gt;getMock();

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with(
                       $this-&gt;greaterThan(0),
                       $this-&gt;stringContains('Something'),
                       $this-&gt;anything()
                   );

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // The doSomethingBad() method should report an error to the observer
        // via the reportError() method
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085616Z" creationid="Wynn" creationdate="20150327T085616Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // 为 Observer 类建立仿件，对 reportError() 方法进行模仿
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('reportError'))
                         -&gt;getMock();

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with(
                       $this-&gt;greaterThan(0),
                       $this-&gt;stringContains('Something'),
                       $this-&gt;anything()
                   );

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // doSomethingBad() 方法应当会通过（observer的）reportError()方法
        //向 observer 报告错误。
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // Create a mock for the Observer class, mocking the
        // reportError() method
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('reportError'))
                         -&gt;getMock();

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;callback(function($subject){
                          return is_callable(array($subject, 'getName')) &amp;&amp;
                                 $subject-&gt;getName() == 'My subject';
                        }));

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // The doSomethingBad() method should report an error to the observer
        // via the reportError() method
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090049Z" creationid="Wynn" creationdate="20150327T090049Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testErrorReported()
    {
        // 为 Observer 类建立仿件，模仿 reportError() 方法
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('reportError'))
                         -&gt;getMock();

        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('reportError')
                 -&gt;with($this-&gt;greaterThan(0),
                        $this-&gt;stringContains('Something'),
                        $this-&gt;callback(function($subject){
                          return is_callable(array($subject, 'getName')) &amp;&amp;
                                 $subject-&gt;getName() == 'My subject';
                        }));

        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // doSomethingBad() 方法应当会通过（observer的）reportError()方法
        //向 observer 报告错误。
        $subject-&gt;doSomethingBad();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        $subject = new Subject('My subject');

        // Create a prophecy for the Observer class.
        $observer = $this-&gt;prophesize('Observer');

        // Set up the expectation for the update() method
        // to be called only once and with the string 'something'
        // as its parameter.
        $observer-&gt;update('something')-&gt;shouldBeCalled();

        // Reveal the prophecy and attach the mock object
        // to the Subject.
        $subject-&gt;attach($observer-&gt;reveal());

        // Call the doSomething() method on the $subject object
        // which we expect to call the mocked Observer object's
        // update() method with the string 'something'.
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090950Z" creationid="Wynn" creationdate="20150327T090950Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        $subject = new Subject('My subject');

        // 为 Observer 类建立预言(prophecy)。
        $observer = $this-&gt;prophesize('Observer');

        // 建立预期状况：update() 方法将会被调用一次，
        // 并且将以字符串 'something' 为参数。
        $observer-&gt;update('something')-&gt;shouldBeCalled();

        // 揭示预言，并将仿件对象链接到主体上。
        $subject-&gt;attach($observer-&gt;reveal());

        // 在 $subject 对象上调用 doSomething() 方法，
        // 预期将以字符串 'something' 为参数调用 
        // Observer 仿件对象的 update() 方法。
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        // Create a mock for the Observer class,
        // only mock the update() method.
        $observer = $this-&gt;getMock('Observer', array('update'));

        // Set up the expectation for the update() method
        // to be called only once and with the string 'something'
        // as its parameter.
        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('update')
                 -&gt;with($this-&gt;equalTo('something'));

        // Create a Subject object and attach the mocked
        // Observer object to it.
        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // Call the doSomething() method on the $subject object
        // which we expect to call the mocked Observer object's
        // update() method with the string 'something'.
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045359Z" creationid="Wynn" creationdate="20150330T045359Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        // 为 Observer 类建立仿件对象，只模仿 update() 方法。
        $observer = $this-&gt;getMock('Observer', array('update'));

        // 建立预期状况：update() 方法将会被调用一次，
        // 并且将以字符串 'something' 为参数。
        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('update')
                 -&gt;with($this-&gt;equalTo('something'));

        // 创建 Subject 对象，并将模仿的 Observer 对象连接其上。
        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // 在 $subject 对象上调用 doSomething() 方法，
        // 预期将以字符串 'something' 为参数调用 
        // Observer 仿件对象的 update() 方法。
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        // Create a mock for the Observer class,
        // only mock the update() method.
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('update'))
                         -&gt;getMock();

        // Set up the expectation for the update() method
        // to be called only once and with the string 'something'
        // as its parameter.
        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('update')
                 -&gt;with($this-&gt;equalTo('something'));

        // Create a Subject object and attach the mocked
        // Observer object to it.
        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // Call the doSomething() method on the $subject object
        // which we expect to call the mocked Observer object's
        // update() method with the string 'something'.
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085525Z" creationid="Wynn" creationdate="20150327T085525Z">
        <seg>&lt;?php
class SubjectTest extends PHPUnit_Framework_TestCase
{
    public function testObserversAreUpdated()
    {
        // 为 Observer 类建立仿件对象，只模仿 update() 方法。
        $observer = $this-&gt;getMockBuilder('Observer')
                         -&gt;setMethods(array('update'))
                         -&gt;getMock();

        // 建立预期状况：update() 方法将会被调用一次，
        // 并且将以字符串 'something' 为参数。
        $observer-&gt;expects($this-&gt;once())
                 -&gt;method('update')
                 -&gt;with($this-&gt;equalTo('something'));

        // 创建 Subject 对象，并将模仿的 Observer 对象连接其上。
        $subject = new Subject('My subject');
        $subject-&gt;attach($observer);

        // 在 $subject 对象上调用 doSomething() 方法，
        // 预期将以字符串 'something' 为参数调用 
        // Observer 仿件对象的 update() 方法。
        $subject-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class TemplateMethodsTest extends PHPUnit_Framework_TestCase
{
    public static function setUpBeforeClass()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function setUp()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function assertPreConditions()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    public function testOne()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        $this-&gt;assertTrue(TRUE);
    }

    public function testTwo()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        $this-&gt;assertTrue(FALSE);
    }

    protected function assertPostConditions()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function tearDown()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    public static function tearDownAfterClass()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function onNotSuccessfulTest(Exception $e)
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        throw $e;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081301Z" creationid="Wynn" creationdate="20150319T081301Z">
        <seg>&lt;?php
class TemplateMethodsTest extends PHPUnit_Framework_TestCase
{
    public static function setUpBeforeClass()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function setUp()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function assertPreConditions()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    public function testOne()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        $this-&gt;assertTrue(TRUE);
    }

    public function testTwo()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        $this-&gt;assertTrue(FALSE);
    }

    protected function assertPostConditions()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function tearDown()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    public static function tearDownAfterClass()
    {
        fwrite(STDOUT, __METHOD__ . "\n");
    }

    protected function onNotSuccessfulTest(Exception $e)
    {
        fwrite(STDOUT, __METHOD__ . "\n");
        throw $e;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class TrueTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertTrue(FALSE);
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093323Z" creationid="Wynn" creationdate="20150309T093323Z">
        <seg>&lt;?php
class TrueTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertTrue(FALSE);
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class WebTest extends PHPUnit_Extensions_Selenium2TestCase
{
    protected function setUp()
    {
        $this-&gt;setBrowser('firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;url('http://www.example.com/');
        $this-&gt;assertEquals('Example WWW Page', $this-&gt;title());
    }

}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T062948Z" creationid="Wynn" creationdate="20150327T062948Z">
        <seg>&lt;?php
class WebTest extends PHPUnit_Extensions_Selenium2TestCase
{
    protected function setUp()
    {
        $this-&gt;setBrowser('firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;url('http://www.example.com/');
        $this-&gt;assertEquals('Example WWW Page', $this-&gt;title());
    }

}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class XmlFileEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlFileEqualsXmlFile(
          '/home/sb/expected.xml', '/home/sb/actual.xml');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093325Z" creationid="Wynn" creationdate="20150309T093325Z">
        <seg>&lt;?php
class XmlFileEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlFileEqualsXmlFile(
          '/home/sb/expected.xml', '/home/sb/actual.xml');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class XmlStringEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlStringEqualsXmlFile(
          '/home/sb/expected.xml', '&lt;foo&gt;&lt;baz/&gt;&lt;/foo&gt;');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093329Z" creationid="Wynn" creationdate="20150309T093329Z">
        <seg>&lt;?php
class XmlStringEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlStringEqualsXmlFile(
          '/home/sb/expected.xml', '&lt;foo&gt;&lt;baz/&gt;&lt;/foo&gt;');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class XmlStringEqualsXmlStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlStringEqualsXmlString(
          '&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;', '&lt;foo&gt;&lt;baz/&gt;&lt;/foo&gt;');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093332Z" creationid="Wynn" creationdate="20150309T093332Z">
        <seg>&lt;?php
class XmlStringEqualsXmlStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $this-&gt;assertXmlStringEqualsXmlString(
          '&lt;foo&gt;&lt;bar/&gt;&lt;/foo&gt;', '&lt;foo&gt;&lt;baz/&gt;&lt;/foo&gt;');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
class YamlGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        return new PHPUnit_Extensions_Database_DataSet_YamlDataSet(
            dirname(__FILE__)."/_files/guestbook.yml"
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074333Z" creationid="Wynn" creationdate="20150317T074333Z">
        <seg>&lt;?php
class YamlGuestbookTest extends PHPUnit_Extensions_Database_TestCase
{
    protected function getDataSet()
    {
        return new PHPUnit_Extensions_Database_DataSet_YamlDataSet(
            dirname(__FILE__)."/_files/guestbook.yml"
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
ini_set('error_log', '');
ini_set('display_errors', 'Off');

$fixture = array();
assertTrue(count($fixture) == 0);

$fixture[] = 'element';
assertTrue(count($fixture) == 1);

function assertTrue($condition)
{
    if (!$condition) {
        throw new Exception('Assertion failed.');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030223Z" creationid="Wynn" creationdate="20150330T030223Z">
        <seg>&lt;?php
ini_set('error_log', '');
ini_set('display_errors', 'Off');

$fixture = array();
assertTrue(count($fixture) == 0);

$fixture[] = 'element';
assertTrue(count($fixture) == 1);

function assertTrue($condition)
{
    if (!$condition) {
        throw new Exception('Assertion failed.');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DB_IDatabaseConnection
{
    public function createDataSet(Array $tableNames = NULL);
    public function createQueryTable($resultName, $sql);
    public function getRowCount($tableName, $whereClause = NULL);

    // ...
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080158Z" creationid="Wynn" creationdate="20150317T080158Z">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DB_IDatabaseConnection
{
    public function createDataSet(Array $tableNames = NULL);
    public function createQueryTable($resultName, $sql);
    public function getRowCount($tableName, $whereClause = NULL);

    // ...
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DataSet_IDataSet extends IteratorAggregate
{
    public function getTableNames();
    public function getTableMetaData($tableName);
    public function getTable($tableName);
    public function assertEquals(PHPUnit_Extensions_Database_DataSet_IDataSet $other);

    public function getReverseIterator();
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075609Z" creationid="Wynn" creationdate="20150317T075609Z">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DataSet_IDataSet extends IteratorAggregate
{
    public function getTableNames();
    public function getTableMetaData($tableName);
    public function getTable($tableName);
    public function assertEquals(PHPUnit_Extensions_Database_DataSet_IDataSet $other);

    public function getReverseIterator();
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DataSet_ITable
{
    public function getTableMetaData();
    public function getRowCount();
    public function getValue($row, $column);
    public function getRow($row);
    public function assertEquals(PHPUnit_Extensions_Database_DataSet_ITable $other);
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075853Z" creationid="Wynn" creationdate="20150317T075853Z">
        <seg>&lt;?php
interface PHPUnit_Extensions_Database_DataSet_ITable
{
    public function getTableMetaData();
    public function getRowCount();
    public function getValue($row, $column);
    public function getRow($row);
    public function assertEquals(PHPUnit_Extensions_Database_DataSet_ITable $other);
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
namespace TestNamespace;

class TestCaseClass extends \PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testMethod($data)
    {
        $this-&gt;assertTrue($data);
    }

    public function provider()
    {
        return array(
           'my named data' =&gt; array(true),
           'my data'       =&gt; array(true)
        );
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093644Z" creationid="Wynn" creationdate="20150327T093644Z">
        <seg>&lt;?php
namespace TestNamespace;

class TestCaseClass extends \PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testMethod($data)
    {
        $this-&gt;assertTrue($data);
    }

    public function provider()
    {
        return array(
           'my named data' =&gt; array(true),
           'my data'       =&gt; array(true)
        );
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require 'CsvFileIterator.php';

class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return new CsvFileIterator('data.csv');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102204Z" creationid="Wynn" creationdate="20150327T102204Z">
        <seg>&lt;?php
require 'CsvFileIterator.php';

class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider additionProvider
     */
    public function testAdd($a, $b, $expected)
    {
        $this-&gt;assertEquals($expected, $a + $b);
    }

    public function additionProvider()
    {
        return new CsvFileIterator('data.csv');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require 'CsvFileIterator.php';

class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testAdd($a, $b, $c)
    {
        $this-&gt;assertEquals($c, $a + $b);
    }

    public function provider()
    {
        return new CsvFileIterator('data.csv');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051005Z" creationid="Wynn" creationdate="20150330T051005Z">
        <seg>&lt;?php
require 'CsvFileIterator.php';

class DataTest extends PHPUnit_Framework_TestCase
{
    /**
     * @dataProvider provider
     */
    public function testAdd($a, $b, $c)
    {
        $this-&gt;assertEquals($c, $a + $b);
    }

    public function provider()
    {
        return new CsvFileIterator('data.csv');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    // ...

    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032614Z" creationid="Wynn" creationdate="20150330T032614Z">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    // ...

    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    /**
     * @covers BankAccount::getBalance
     */
    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    /**
     * @covers BankAccount::withdrawMoney
     */
    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::depositMoney
     */
    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::getBalance
     * @covers BankAccount::depositMoney
     * @covers BankAccount::withdrawMoney
     */

    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032712Z" creationid="Wynn" creationdate="20150330T032712Z">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    /**
     * @covers BankAccount::getBalance
     */
    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    /**
     * @covers BankAccount::withdrawMoney
     */
    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::depositMoney
     */
    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    /**
     * @covers BankAccount::getBalance
     * @covers BankAccount::depositMoney
     * @covers BankAccount::withdrawMoney
     */

    public function testDepositWithdrawMoney()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;depositMoney(1);
        $this-&gt;assertEquals(1, $this-&gt;ba-&gt;getBalance());
        $this-&gt;ba-&gt;withdrawMoney(1);
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050126Z" creationid="Wynn" creationdate="20150330T050126Z">
        <seg>&lt;?php
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    protected $ba;

    protected function setUp()
    {
        $this-&gt;ba = new BankAccount;
    }

    public function testBalanceIsInitiallyZero()
    {
        $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());
    }

    public function testBalanceCannotBecomeNegative()
    {
        try {
            $this-&gt;ba-&gt;withdrawMoney(1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }

    public function testBalanceCannotBecomeNegative2()
    {
        try {
            $this-&gt;ba-&gt;depositMoney(-1);
        }

        catch (BankAccountException $e) {
            $this-&gt;assertEquals(0, $this-&gt;ba-&gt;getBalance());

            return;
        }

        $this-&gt;fail();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'Example.php';

class ExampleTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        if (file_exists(dirname(__FILE__) . '/id')) {
            rmdir(dirname(__FILE__) . '/id');
        }
    }

    public function testDirectoryIsCreated()
    {
        $example = new Example('id');
        $this-&gt;assertFalse(file_exists(dirname(__FILE__) . '/id'));

        $example-&gt;setDirectory(dirname(__FILE__));
        $this-&gt;assertTrue(file_exists(dirname(__FILE__) . '/id'));
    }

    protected function tearDown()
    {
        if (file_exists(dirname(__FILE__) . '/id')) {
            rmdir(dirname(__FILE__) . '/id');
        }
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092010Z" creationid="Wynn" creationdate="20150327T092010Z">
        <seg>&lt;?php
require_once 'Example.php';

class ExampleTest extends PHPUnit_Framework_TestCase
{
    protected function setUp()
    {
        if (file_exists(dirname(__FILE__) . '/id')) {
            rmdir(dirname(__FILE__) . '/id');
        }
    }

    public function testDirectoryIsCreated()
    {
        $example = new Example('id');
        $this-&gt;assertFalse(file_exists(dirname(__FILE__) . '/id'));

        $example-&gt;setDirectory(dirname(__FILE__));
        $this-&gt;assertTrue(file_exists(dirname(__FILE__) . '/id'));
    }

    protected function tearDown()
    {
        if (file_exists(dirname(__FILE__) . '/id')) {
            rmdir(dirname(__FILE__) . '/id');
        }
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class SeleneseTests extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $seleneseDirectory = '/path/to/files';
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073942Z" creationid="Wynn" creationdate="20150327T073942Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class SeleneseTests extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $seleneseDirectory = '/path/to/files';
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected $captureScreenshotOnFailure = TRUE;
    protected $screenshotPath = '/var/www/localhost/htdocs/screenshots';
    protected $screenshotUrl = 'http://localhost/screenshots';

    protected function setUp()
    {
        $this-&gt;setBrowser('*firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example WWW Page');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064004Z" creationid="Wynn" creationdate="20150327T064004Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected $captureScreenshotOnFailure = TRUE;
    protected $screenshotPath = '/var/www/localhost/htdocs/screenshots';
    protected $screenshotUrl = 'http://localhost/screenshots';

    protected function setUp()
    {
        $this-&gt;setBrowser('*firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example WWW Page');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected function setUp()
    {
        $this-&gt;setBrowser('*firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example WWW Page');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063426Z" creationid="Wynn" creationdate="20150327T063426Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected function setUp()
    {
        $this-&gt;setBrowser('*firefox');
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example WWW Page');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $browsers = array(
      array(
        'name'    =&gt; 'Firefox on Linux',
        'browser' =&gt; '*firefox',
        'host'    =&gt; 'my.linux.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Safari on MacOS X',
        'browser' =&gt; '*safari',
        'host'    =&gt; 'my.macosx.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Safari on Windows XP',
        'browser' =&gt; '*custom C:\Program Files\Safari\Safari.exe -url',
        'host'    =&gt; 'my.windowsxp.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Internet Explorer on Windows XP',
        'browser' =&gt; '*iexplore',
        'host'    =&gt; 'my.windowsxp.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      )
    );

    protected function setUp()
    {
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example Web Page');
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064136Z" creationid="Wynn" creationdate="20150327T064136Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $browsers = array(
      array(
        'name'    =&gt; 'Firefox on Linux',
        'browser' =&gt; '*firefox',
        'host'    =&gt; 'my.linux.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Safari on MacOS X',
        'browser' =&gt; '*safari',
        'host'    =&gt; 'my.macosx.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Safari on Windows XP',
        'browser' =&gt; '*custom C:\Program Files\Safari\Safari.exe -url',
        'host'    =&gt; 'my.windowsxp.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      ),
      array(
        'name'    =&gt; 'Internet Explorer on Windows XP',
        'browser' =&gt; '*iexplore',
        'host'    =&gt; 'my.windowsxp.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000,
      )
    );

    protected function setUp()
    {
        $this-&gt;setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this-&gt;open('http://www.example.com/');
        $this-&gt;assertTitle('Example Web Page');
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/Story/TestCase.php';
require_once 'BowlingGame.php';

class BowlingGameSpec extends PHPUnit_Extensions_Story_TestCase
{
    /**
     * @scenario
     */
    public function scoreForGutterGameIs0()
    {
        $this-&gt;given('New game')
             -&gt;then('Score should be', 0);
    }

    /**
     * @scenario
     */
    public function scoreForAllOnesIs20()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;then('Score should be', 20);
    }

    /**
     * @scenario
     */
    public function scoreForOneSpareAnd3Is16()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 5)
             -&gt;and('Player rolls', 5)
             -&gt;and('Player rolls', 3)
             -&gt;then('Score should be', 16);
    }

    /**
     * @scenario
     */
    public function scoreForOneStrikeAnd3And4Is24()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 10)
             -&gt;and('Player rolls', 3)
             -&gt;and('Player rolls', 4)
             -&gt;then('Score should be', 24);
    }

    /**
     * @scenario
     */
    public function scoreForPerfectGameIs300()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;then('Score should be', 300);
    }

    public function runGiven(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'New game': {
                $world['game']  = new BowlingGame;
                $world['rolls'] = 0;
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }

    public function runWhen(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'Player rolls': {
                $world['game']-&gt;roll($arguments[0]);
                $world['rolls']++;
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }

    public function runThen(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'Score should be': {
                for ($i = $world['rolls']; $i &lt; 20; $i++) {
                    $world['game']-&gt;roll(0);
                }

                $this-&gt;assertEquals($arguments[0], $world['game']-&gt;score());
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031934Z" creationid="Wynn" creationdate="20150330T031934Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/Story/TestCase.php';
require_once 'BowlingGame.php';

class BowlingGameSpec extends PHPUnit_Extensions_Story_TestCase
{
    /**
     * @scenario
     */
    public function scoreForGutterGameIs0()
    {
        $this-&gt;given('New game')
             -&gt;then('Score should be', 0);
    }

    /**
     * @scenario
     */
    public function scoreForAllOnesIs20()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;and('Player rolls', 1)
             -&gt;then('Score should be', 20);
    }

    /**
     * @scenario
     */
    public function scoreForOneSpareAnd3Is16()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 5)
             -&gt;and('Player rolls', 5)
             -&gt;and('Player rolls', 3)
             -&gt;then('Score should be', 16);
    }

    /**
     * @scenario
     */
    public function scoreForOneStrikeAnd3And4Is24()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 10)
             -&gt;and('Player rolls', 3)
             -&gt;and('Player rolls', 4)
             -&gt;then('Score should be', 24);
    }

    /**
     * @scenario
     */
    public function scoreForPerfectGameIs300()
    {
        $this-&gt;given('New game')
             -&gt;when('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;and('Player rolls', 10)
             -&gt;then('Score should be', 300);
    }

    public function runGiven(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'New game': {
                $world['game']  = new BowlingGame;
                $world['rolls'] = 0;
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }

    public function runWhen(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'Player rolls': {
                $world['game']-&gt;roll($arguments[0]);
                $world['rolls']++;
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }

    public function runThen(&amp;$world, $action, $arguments)
    {
        switch($action) {
            case 'Score should be': {
                for ($i = $world['rolls']; $i &lt; 20; $i++) {
                    $world['game']-&gt;roll(0);
                }

                $this-&gt;assertEquals($arguments[0], $world['game']-&gt;score());
            }
            break;

            default: {
                return $this-&gt;notImplemented($action);
            }
        }
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/TestDecorator.php';

class PHPUnit_Extensions_RepeatedTest extends PHPUnit_Extensions_TestDecorator
{
    private $timesRepeat = 1;

    public function __construct(PHPUnit_Framework_Test $test, $timesRepeat = 1)
    {
        parent::__construct($test);

        if (is_integer($timesRepeat) &amp;&amp;
            $timesRepeat &gt;= 0) {
            $this-&gt;timesRepeat = $timesRepeat;
        }
    }

    public function count()
    {
        return $this-&gt;timesRepeat * $this-&gt;test-&gt;count();
    }

    public function run(PHPUnit_Framework_TestResult $result = NULL)
    {
        if ($result === NULL) {
            $result = $this-&gt;createResult();
        }

        for ($i = 0; $i &lt; $this-&gt;timesRepeat &amp;&amp; !$result-&gt;shouldStop(); $i++) {
            $this-&gt;test-&gt;run($result);
        }

        return $result;
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073417Z" creationid="Wynn" creationdate="20150319T073417Z">
        <seg>&lt;?php
require_once 'PHPUnit/Extensions/TestDecorator.php';

class PHPUnit_Extensions_RepeatedTest extends PHPUnit_Extensions_TestDecorator
{
    private $timesRepeat = 1;

    public function __construct(PHPUnit_Framework_Test $test, $timesRepeat = 1)
    {
        parent::__construct($test);

        if (is_integer($timesRepeat) &amp;&amp;
            $timesRepeat &gt;= 0) {
            $this-&gt;timesRepeat = $timesRepeat;
        }
    }

    public function count()
    {
        return $this-&gt;timesRepeat * $this-&gt;test-&gt;count();
    }

    public function run(PHPUnit_Framework_TestResult $result = NULL)
    {
        if ($result === NULL) {
            $result = $this-&gt;createResult();
        }

        for ($i = 0; $i &lt; $this-&gt;timesRepeat &amp;&amp; !$result-&gt;shouldStop(); $i++) {
            $this-&gt;test-&gt;run($result);
        }

        return $result;
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testOnConsecutiveCallsStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;onConsecutiveCalls(2, 3, 5, 7));

        // $stub-&gt;doSomething() returns a different value each time
        $this-&gt;assertEquals(2, $stub-&gt;doSomething());
        $this-&gt;assertEquals(3, $stub-&gt;doSomething());
        $this-&gt;assertEquals(5, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045306Z" creationid="Wynn" creationdate="20150330T045306Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testOnConsecutiveCallsStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;onConsecutiveCalls(2, 3, 5, 7));

        // $stub-&gt;doSomething() 每次返回值都不同
        $this-&gt;assertEquals(2, $stub-&gt;doSomething());
        $this-&gt;assertEquals(3, $stub-&gt;doSomething());
        $this-&gt;assertEquals(5, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testOnConsecutiveCallsStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;onConsecutiveCalls(2, 3, 5, 7));

        // $stub-&gt;doSomething() returns a different value each time
        $this-&gt;assertEquals(2, $stub-&gt;doSomething());
        $this-&gt;assertEquals(3, $stub-&gt;doSomething());
        $this-&gt;assertEquals(5, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084209Z" creationid="Wynn" creationdate="20150327T084209Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testOnConsecutiveCallsStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;onConsecutiveCalls(2, 3, 5, 7));

        // $stub-&gt;doSomething() 每次返回值都不同
        $this-&gt;assertEquals(2, $stub-&gt;doSomething());
        $this-&gt;assertEquals(3, $stub-&gt;doSomething());
        $this-&gt;assertEquals(5, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnArgumentStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnArgument(0));

        // $stub-&gt;doSomething('foo') returns 'foo'
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething('foo'));

        // $stub-&gt;doSomething('bar') returns 'bar'
        $this-&gt;assertEquals('bar', $stub-&gt;doSomething('bar'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045128Z" creationid="Wynn" creationdate="20150330T045128Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnArgumentStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnArgument(0));

        // stub-&gt;doSomething('foo') 返回 'foo'
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething('foo'));

        // $stub-&gt;doSomething('bar') 返回 'bar'
        $this-&gt;assertEquals('bar', $stub-&gt;doSomething('bar'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnArgumentStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnArgument(0));

        // $stub-&gt;doSomething('foo') returns 'foo'
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething('foo'));

        // $stub-&gt;doSomething('bar') returns 'bar'
        $this-&gt;assertEquals('bar', $stub-&gt;doSomething('bar'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083623Z" creationid="Wynn" creationdate="20150327T083623Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnArgumentStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnArgument(0));

        // stub-&gt;doSomething('foo') 返回 'foo'
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething('foo'));

        // $stub-&gt;doSomething('bar') 返回 'bar'
        $this-&gt;assertEquals('bar', $stub-&gt;doSomething('bar'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnCallbackStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnCallback('str_rot13'));

        // $stub-&gt;doSomething($argument) returns str_rot13($argument)
        $this-&gt;assertEquals('fbzrguvat', $stub-&gt;doSomething('something'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045249Z" creationid="Wynn" creationdate="20150330T045249Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnCallbackStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnCallback('str_rot13'));

        // $stub-&gt;doSomething($argument) 返回 str_rot13($argument)
        $this-&gt;assertEquals('fbzrguvat', $stub-&gt;doSomething('something'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnCallbackStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnCallback('str_rot13'));

        // $stub-&gt;doSomething($argument) returns str_rot13($argument)
        $this-&gt;assertEquals('fbzrguvat', $stub-&gt;doSomething('something'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084116Z" creationid="Wynn" creationdate="20150327T084116Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnCallbackStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnCallback('str_rot13'));

        // $stub-&gt;doSomething($argument) 返回 str_rot13($argument)
        $this-&gt;assertEquals('fbzrguvat', $stub-&gt;doSomething('something'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnSelf()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnSelf());

        // $stub-&gt;doSomething() returns $stub
        $this-&gt;assertSame($stub, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045144Z" creationid="Wynn" creationdate="20150330T045144Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnSelf()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnSelf());

        // $stub-&gt;doSomething() 返回 $stub
        $this-&gt;assertSame($stub, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnSelf()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnSelf());

        // $stub-&gt;doSomething() returns $stub
        $this-&gt;assertSame($stub, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083722Z" creationid="Wynn" creationdate="20150327T083722Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnSelf()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnSelf());

        // $stub-&gt;doSomething() 返回 $stub
        $this-&gt;assertSame($stub, $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnValueMapStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Create a map of arguments to return values.
        $map = array(
          array('a', 'b', 'c', 'd'),
          array('e', 'f', 'g', 'h')
        );

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValueMap($map));

        // $stub-&gt;doSomething() returns different values depending on
        // the provided arguments.
        $this-&gt;assertEquals('d', $stub-&gt;doSomething('a', 'b', 'c'));
        $this-&gt;assertEquals('h', $stub-&gt;doSomething('e', 'f', 'g'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045221Z" creationid="Wynn" creationdate="20150330T045221Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnValueMapStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 创建从参数到返回值的映射。
        $map = array(
          array('a', 'b', 'c', 'd'),
          array('e', 'f', 'g', 'h')
        );

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValueMap($map));

        // $stub-&gt;doSomething() 根据提供的参数返回不同的值。
        $this-&gt;assertEquals('d', $stub-&gt;doSomething('a', 'b', 'c'));
        $this-&gt;assertEquals('h', $stub-&gt;doSomething('e', 'f', 'g'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnValueMapStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Create a map of arguments to return values.
        $map = array(
          array('a', 'b', 'c', 'd'),
          array('e', 'f', 'g', 'h')
        );

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnValueMap($map));

        // $stub-&gt;doSomething() returns different values depending on
        // the provided arguments.
        $this-&gt;assertEquals('d', $stub-&gt;doSomething('a', 'b', 'c'));
        $this-&gt;assertEquals('h', $stub-&gt;doSomething('e', 'f', 'g'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083954Z" creationid="Wynn" creationdate="20150327T083954Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testReturnValueMapStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 创建从参数到返回值的映射。
        $map = array(
          array('a', 'b', 'c', 'd'),
          array('e', 'f', 'g', 'h')
        );

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;returnValueMap($map));

        // $stub-&gt;doSomething() 根据提供的参数返回不同的值。
        $this-&gt;assertEquals('d', $stub-&gt;doSomething('a', 'b', 'c'));
        $this-&gt;assertEquals('h', $stub-&gt;doSomething('e', 'f', 'g'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValue('foo'));

        // Calling $stub-&gt;doSomething() will now return
        // 'foo'.
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044033Z" creationid="Wynn" creationdate="20150330T043934Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValue('foo'));

        // 在调用 $stub-&gt;doSomething() 将返回 'foo'。
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;disableOriginalConstructor()
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValue('foo'));

        // Calling $stub-&gt;doSomething() will now return
        // 'foo'.
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045101Z" creationid="Wynn" creationdate="20150330T045101Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;disableOriginalConstructor()
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;returnValue('foo'));

        // 现在调用 $stub-&gt;doSomething() 将返回 'foo'。
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;disableOriginalConstructor()
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;willReturn('foo');

        // Calling $stub-&gt;doSomething() will now return
        // 'foo'.
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075300Z" creationid="Wynn" creationdate="20150327T075300Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;disableOriginalConstructor()
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;willReturn('foo');

        // 现在调用 $stub-&gt;doSomething() 将返回 'foo'。
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;willReturn('foo');

        // Calling $stub-&gt;doSomething() will now return
        // 'foo'.
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075027Z" creationid="Wynn" creationdate="20150327T075027Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;willReturn('foo');

        // 现在调用 $stub-&gt;doSomething() 将返回 'foo'。
        $this-&gt;assertEquals('foo', $stub-&gt;doSomething());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testThrowExceptionStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMock('SomeClass');

        // Configure the stub.
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;throwException(new Exception));

        // $stub-&gt;doSomething() throws Exception
        $stub-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045323Z" creationid="Wynn" creationdate="20150330T045323Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testThrowExceptionStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMock('SomeClass');

        // 配置桩件。
        $stub-&gt;expects($this-&gt;any())
             -&gt;method('doSomething')
             -&gt;will($this-&gt;throwException(new Exception));

        // $stub-&gt;doSomething() 抛出异常
        $stub-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testThrowExceptionStub()
    {
        // Create a stub for the SomeClass class.
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // Configure the stub.
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;throwException(new Exception));

        // $stub-&gt;doSomething() throws Exception
        $stub-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084312Z" creationid="Wynn" creationdate="20150327T084312Z">
        <seg>&lt;?php
require_once 'SomeClass.php';

class StubTest extends PHPUnit_Framework_TestCase
{
    public function testThrowExceptionStub()
    {
        // 为 SomeClass 类创建桩件。
        $stub = $this-&gt;getMockBuilder('SomeClass')
                     -&gt;getMock();

        // 配置桩件。
        $stub-&gt;method('doSomething')
             -&gt;will($this-&gt;throwException(new Exception));

        // $stub-&gt;doSomething() 抛出异常
        $stub-&gt;doSomething();
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
require_once 'vfsStream/vfsStream.php';
require_once 'Example.php';

class ExampleTest extends PHPUnit_Framework_TestCase
{
    public function setUp()
    {
        vfsStreamWrapper::register();
        vfsStreamWrapper::setRoot(new vfsStreamDirectory('exampleDir'));
    }

    public function testDirectoryIsCreated()
    {
        $example = new Example('id');
        $this-&gt;assertFalse(vfsStreamWrapper::getRoot()-&gt;hasChild('id'));

        $example-&gt;setDirectory(vfsStream::url('exampleDir'));
        $this-&gt;assertTrue(vfsStreamWrapper::getRoot()-&gt;hasChild('id'));
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092149Z" creationid="Wynn" creationdate="20150327T092149Z">
        <seg>&lt;?php
require_once 'vfsStream/vfsStream.php';
require_once 'Example.php';

class ExampleTest extends PHPUnit_Framework_TestCase
{
    public function setUp()
    {
        vfsStreamWrapper::register();
        vfsStreamWrapper::setRoot(new vfsStreamDirectory('exampleDir'));
    }

    public function testDirectoryIsCreated()
    {
        $example = new Example('id');
        $this-&gt;assertFalse(vfsStreamWrapper::getRoot()-&gt;hasChild('id'));

        $example-&gt;setDirectory(vfsStream::url('exampleDir'));
        $this-&gt;assertTrue(vfsStreamWrapper::getRoot()-&gt;hasChild('id'));
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?php
trait AbstractTrait
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class TraitClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $mock = $this-&gt;getMockForTrait('AbstractTrait');

        $mock-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($mock-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091115Z" creationid="Wynn" creationdate="20150327T091115Z">
        <seg>&lt;?php
trait AbstractTrait
{
    public function concreteMethod()
    {
        return $this-&gt;abstractMethod();
    }

    public abstract function abstractMethod();
}

class TraitClassTest extends PHPUnit_Framework_TestCase
{
    public function testConcreteMethod()
    {
        $mock = $this-&gt;getMockForTrait('AbstractTrait');

        $mock-&gt;expects($this-&gt;any())
             -&gt;method('abstractMethod')
             -&gt;will($this-&gt;returnValue(TRUE));

        $this-&gt;assertTrue($mock-&gt;concreteMethod());
    }
}
?&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071126Z" creationid="Wynn" creationdate="20150317T071126Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" /&gt;
    &lt;guestbook id="3" content="Hello world!" user="suzy" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042149Z" creationid="Wynn" creationdate="20150319T042149Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" /&gt;
    &lt;guestbook id="3" content="Hello world!" user="suzy" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071311Z" creationid="Wynn" creationdate="20150317T071311Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="##NULL##" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075128Z" creationid="Wynn" creationdate="20150317T075128Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="##NULL##" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" created="2010-04-26 12:14:20" /&gt;
    &lt;guestbook id="3" content="Hello world!" user="suzy" created="2010-05-01 21:47:08" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042034Z" creationid="Wynn" creationdate="20150319T042034Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" created="2010-04-26 12:14:20" /&gt;
    &lt;guestbook id="3" content="Hello world!" user="suzy" created="2010-05-01 21:47:08" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070953Z" creationid="Wynn" creationdate="20150317T070953Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
    &lt;guestbook id="2" content="I like it!" user="nancy" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075426Z" creationid="Wynn" creationdate="20150317T075426Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="1" content="Hello buddy!" user="joe" created="2010-04-24 17:15:23" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="2" content="I like it!" user="##NULL##" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075432Z" creationid="Wynn" creationdate="20150317T075432Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;guestbook id="2" content="I like it!" user="##NULL##" created="2010-04-26 12:14:20" /&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;table name="guestbook"&gt;
        &lt;column&gt;id&lt;/column&gt;
        &lt;column&gt;content&lt;/column&gt;
        &lt;column&gt;user&lt;/column&gt;
        &lt;column&gt;created&lt;/column&gt;
        &lt;row&gt;
            &lt;value&gt;1&lt;/value&gt;
            &lt;value&gt;Hello buddy!&lt;/value&gt;
            &lt;value&gt;joe&lt;/value&gt;
            &lt;value&gt;2010-04-24 17:15:23&lt;/value&gt;
        &lt;/row&gt;
        &lt;row&gt;
            &lt;value&gt;2&lt;/value&gt;
            &lt;value&gt;I like it!&lt;/value&gt;
            &lt;null /&gt;
            &lt;value&gt;2010-04-26 12:14:20&lt;/value&gt;
        &lt;/row&gt;
    &lt;/table&gt;
&lt;/dataset&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072656Z" creationid="Wynn" creationdate="20150317T072656Z">
        <seg>&lt;?xml version="1.0" ?&gt;
&lt;dataset&gt;
    &lt;table name="guestbook"&gt;
        &lt;column&gt;id&lt;/column&gt;
        &lt;column&gt;content&lt;/column&gt;
        &lt;column&gt;user&lt;/column&gt;
        &lt;column&gt;created&lt;/column&gt;
        &lt;row&gt;
            &lt;value&gt;1&lt;/value&gt;
            &lt;value&gt;Hello buddy!&lt;/value&gt;
            &lt;value&gt;joe&lt;/value&gt;
            &lt;value&gt;2010-04-24 17:15:23&lt;/value&gt;
        &lt;/row&gt;
        &lt;row&gt;
            &lt;value&gt;2&lt;/value&gt;
            &lt;value&gt;I like it!&lt;/value&gt;
            &lt;null /&gt;
            &lt;value&gt;2010-04-26 12:14:20&lt;/value&gt;
        &lt;/row&gt;
    &lt;/table&gt;
&lt;/dataset&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;phpunit&gt;
    &lt;php&gt;
        &lt;var name="DB_DSN" value="mysql:dbname=myguestbook;host=localhost" /&gt;
        &lt;var name="DB_USER" value="user" /&gt;
        &lt;var name="DB_PASSWD" value="passwd" /&gt;
        &lt;var name="DB_DBNAME" value="myguestbook" /&gt;
    &lt;/php&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100934Z" creationid="Wynn" creationdate="20150316T100934Z">
        <seg>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;phpunit&gt;
    &lt;php&gt;
        &lt;var name="DB_DSN" value="mysql:dbname=myguestbook;host=localhost" /&gt;
        &lt;var name="DB_USER" value="user" /&gt;
        &lt;var name="DB_PASSWD" value="passwd" /&gt;
        &lt;var name="DB_DBNAME" value="myguestbook" /&gt;
    &lt;/php&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;coverage generated="1184835473" phpunit="3.6.0"&gt;
  &lt;project name="BankAccountTest" timestamp="1184835473"&gt;
    &lt;file name="/home/sb/BankAccount.php"&gt;
      &lt;class name="BankAccountException"&gt;
        &lt;metrics methods="0" coveredmethods="0" statements="0"
                 coveredstatements="0" elements="0" coveredelements="0"/&gt;
      &lt;/class&gt;
      &lt;class name="BankAccount"&gt;
        &lt;metrics methods="4" coveredmethods="4" statements="13"
                 coveredstatements="5" elements="17" coveredelements="9"/&gt;
      &lt;/class&gt;
      &lt;line num="77" type="method" count="3"/&gt;
      &lt;line num="79" type="stmt" count="3"/&gt;
      &lt;line num="89" type="method" count="2"/&gt;
      &lt;line num="91" type="stmt" count="2"/&gt;
      &lt;line num="92" type="stmt" count="0"/&gt;
      &lt;line num="93" type="stmt" count="0"/&gt;
      &lt;line num="94" type="stmt" count="2"/&gt;
      &lt;line num="96" type="stmt" count="0"/&gt;
      &lt;line num="105" type="method" count="1"/&gt;
      &lt;line num="107" type="stmt" count="1"/&gt;
      &lt;line num="109" type="stmt" count="0"/&gt;
      &lt;line num="119" type="method" count="1"/&gt;
      &lt;line num="121" type="stmt" count="1"/&gt;
      &lt;line num="123" type="stmt" count="0"/&gt;
      &lt;metrics loc="126" ncloc="37" classes="2" methods="4" coveredmethods="4"
               statements="13" coveredstatements="5" elements="17"
               coveredelements="9"/&gt;
    &lt;/file&gt;
    &lt;metrics files="1" loc="126" ncloc="37" classes="2" methods="4"
             coveredmethods="4" statements="13" coveredstatements="5"
             elements="17" coveredelements="9"/&gt;
  &lt;/project&gt;
&lt;/coverage&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101657Z" creationid="Wynn" creationdate="20150319T101657Z">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;coverage generated="1184835473" phpunit="3.6.0"&gt;
  &lt;project name="BankAccountTest" timestamp="1184835473"&gt;
    &lt;file name="/home/sb/BankAccount.php"&gt;
      &lt;class name="BankAccountException"&gt;
        &lt;metrics methods="0" coveredmethods="0" statements="0"
                 coveredstatements="0" elements="0" coveredelements="0"/&gt;
      &lt;/class&gt;
      &lt;class name="BankAccount"&gt;
        &lt;metrics methods="4" coveredmethods="4" statements="13"
                 coveredstatements="5" elements="17" coveredelements="9"/&gt;
      &lt;/class&gt;
      &lt;line num="77" type="method" count="3"/&gt;
      &lt;line num="79" type="stmt" count="3"/&gt;
      &lt;line num="89" type="method" count="2"/&gt;
      &lt;line num="91" type="stmt" count="2"/&gt;
      &lt;line num="92" type="stmt" count="0"/&gt;
      &lt;line num="93" type="stmt" count="0"/&gt;
      &lt;line num="94" type="stmt" count="2"/&gt;
      &lt;line num="96" type="stmt" count="0"/&gt;
      &lt;line num="105" type="method" count="1"/&gt;
      &lt;line num="107" type="stmt" count="1"/&gt;
      &lt;line num="109" type="stmt" count="0"/&gt;
      &lt;line num="119" type="method" count="1"/&gt;
      &lt;line num="121" type="stmt" count="1"/&gt;
      &lt;line num="123" type="stmt" count="0"/&gt;
      &lt;metrics loc="126" ncloc="37" classes="2" methods="4" coveredmethods="4"
               statements="13" coveredstatements="5" elements="17"
               coveredelements="9"/&gt;
    &lt;/file&gt;
    &lt;metrics files="1" loc="126" ncloc="37" classes="2" methods="4"
             coveredmethods="4" statements="13" coveredstatements="5"
             elements="17" coveredelements="9"/&gt;
  &lt;/project&gt;
&lt;/coverage&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;testsuites&gt;
  &lt;testsuite name="ArrayTest"
             file="/home/sb/ArrayTest.php"
             tests="2"
             assertions="2"
             failures="0"
             errors="0"
             time="0.016030"&gt;
    &lt;testcase name="testNewArrayIsEmpty"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="6"
              assertions="1"
              time="0.008044"/&gt;
    &lt;testcase name="testArrayContainsAnElement"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="15"
              assertions="1"
              time="0.007986"/&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101027Z" creationid="Wynn" creationdate="20150319T101027Z">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;testsuites&gt;
  &lt;testsuite name="ArrayTest"
             file="/home/sb/ArrayTest.php"
             tests="2"
             assertions="2"
             failures="0"
             errors="0"
             time="0.016030"&gt;
    &lt;testcase name="testNewArrayIsEmpty"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="6"
              assertions="1"
              time="0.008044"/&gt;
    &lt;testcase name="testArrayContainsAnElement"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="15"
              assertions="1"
              time="0.007986"/&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;testsuites&gt;
  &lt;testsuite name="FailureErrorTest"
             file="/home/sb/FailureErrorTest.php"
             tests="2"
             assertions="1"
             failures="1"
             errors="1"
             time="0.019744"&gt;
    &lt;testcase name="testFailure"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="6"
              assertions="1"
              time="0.011456"&gt;
      &lt;failure type="PHPUnit_Framework_ExpectationFailedException"&gt;
testFailure(FailureErrorTest)
Failed asserting that &amp;lt;integer:2&amp;gt; matches expected value &amp;lt;integer:1&amp;gt;.

/home/sb/FailureErrorTest.php:8
&lt;/failure&gt;
    &lt;/testcase&gt;
    &lt;testcase name="testError"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="11"
              assertions="0"
              time="0.008288"&gt;
      &lt;error type="Exception"&gt;testError(FailureErrorTest)
Exception:

/home/sb/FailureErrorTest.php:13
&lt;/error&gt;
    &lt;/testcase&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101115Z" creationid="Wynn" creationdate="20150319T101115Z">
        <seg>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;testsuites&gt;
  &lt;testsuite name="FailureErrorTest"
             file="/home/sb/FailureErrorTest.php"
             tests="2"
             assertions="1"
             failures="1"
             errors="1"
             time="0.019744"&gt;
    &lt;testcase name="testFailure"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="6"
              assertions="1"
              time="0.011456"&gt;
      &lt;failure type="PHPUnit_Framework_ExpectationFailedException"&gt;
testFailure(FailureErrorTest)
Failed asserting that &amp;lt;integer:2&amp;gt; matches expected value &amp;lt;integer:1&amp;gt;.

/home/sb/FailureErrorTest.php:8
&lt;/failure&gt;
    &lt;/testcase&gt;
    &lt;testcase name="testError"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="11"
              assertions="0"
              time="0.008288"&gt;
      &lt;error type="Exception"&gt;testError(FailureErrorTest)
Exception:

/home/sb/FailureErrorTest.php:13
&lt;/error&gt;
    &lt;/testcase&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;NOTE&lt;/e0&gt; You cannot use both exclude and include column filtering on the same table, only on different ones. Plus it is only possible to either white- or blacklist tables, not both of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075259Z" creationid="Wynn" creationdate="20150317T075259Z">
        <seg>&lt;e0&gt;注意：&lt;/e0&gt;不能对同一个表同时应用排除与包含两种列筛选器，只能分别应用于不同的表。另外，表的白名单和黑名单也只能选择其一，不能二者同时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Note:&lt;/e0&gt; By default, PHPUnit will attempt to preserve the global state from the parent process by serializing all globals in the parent process and unserializing them in the child process. This can cause problems if the parent process contains globals that are not serializable. See &lt;x1/&gt; for information on how to fix this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T060156Z" creationid="Wynn" creationdate="20150302T073922Z">
        <seg>&lt;e0&gt;注意：&lt;/e0&gt;&lt;x1/&gt; 默认情况下，PHPUnit 会尝试通过在父进程序列化全局状态然后在子进程反序列化的方式在子进程中保持来自父进程的全局状态。这当父进程包含非可序列化的全局内容时可能会导致问题。关于如何修正此问题的信息参见&lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;filter&gt;
  &lt;blacklist&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/blacklist&gt;
  &lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/whitelist&gt;
&lt;/filter&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093830Z" creationid="Wynn" creationdate="20150309T093830Z">
        <seg>&lt;filter&gt;
  &lt;blacklist&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/blacklist&gt;
  &lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/whitelist&gt;
&lt;/filter&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;filter&gt;
  &lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/whitelist&gt;
&lt;/filter&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151105T070142Z" creationid="Wynn" creationdate="20151105T070142Z">
        <seg>&lt;filter&gt;
  &lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;
    &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
    &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;exclude&gt;
      &lt;directory suffix=".php"&gt;/path/to/files&lt;/directory&gt;
      &lt;file&gt;/path/to/file&lt;/file&gt;
    &lt;/exclude&gt;
  &lt;/whitelist&gt;
&lt;/filter&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;groups&gt;
  &lt;include&gt;
    &lt;group&gt;name&lt;/group&gt;
  &lt;/include&gt;
  &lt;exclude&gt;
    &lt;group&gt;name&lt;/group&gt;
  &lt;/exclude&gt;
&lt;/groups&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093515Z" creationid="Wynn" creationdate="20150309T093515Z">
        <seg>&lt;groups&gt;
  &lt;include&gt;
    &lt;group&gt;name&lt;/group&gt;
  &lt;/include&gt;
  &lt;exclude&gt;
    &lt;group&gt;name&lt;/group&gt;
  &lt;/exclude&gt;
&lt;/groups&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;$count&lt;/l0&gt; can be one of the following types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053804Z" creationid="Wynn" creationdate="20150330T053804Z">
        <seg>&lt;l0&gt;$count&lt;/l0&gt; 可以是以下类型之一：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;$isNativeType&lt;/l0&gt; is a flag used to indicate whether &lt;l1&gt;$type&lt;/l1&gt; is a native PHP type or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T082158Z" creationid="Wynn" creationdate="20150303T082158Z">
        <seg>&lt;l0&gt;$isNativeType&lt;/l0&gt; 是一个标志，用来表明 &lt;l1&gt;$type&lt;/l1&gt; 是否是原生 PHP 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;$matcher&lt;/l0&gt; is an associative array that specifies the match criteria for the assertion:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054551Z" creationid="Wynn" creationdate="20150330T054551Z">
        <seg>&lt;l0&gt;$matcher&lt;/l0&gt; 是关联数组，用来为断言指定匹配准则：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;$strict&lt;/l0&gt; is a flag used to compare the identity of objects within arrays.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075420Z" creationid="Wynn" creationdate="20150706T075300Z">
        <seg>&lt;l0&gt;$strict&lt;/l0&gt; 是一个标志，用于表明是否需要对数组中的对象进行全等判定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%A&lt;/l0&gt;: Zero or more of anything (character or white space) including the end of line character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081831Z" creationid="Wynn" creationdate="20150306T081831Z">
        <seg>&lt;l0&gt;%A&lt;/l0&gt;：零个或多个包括换行符在内的任意字符（非空白字符或者空白字符）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%S&lt;/l0&gt;: Zero or more of anything (character or white space) except the end of line character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081806Z" creationid="Wynn" creationdate="20150306T081806Z">
        <seg>&lt;l0&gt;%S&lt;/l0&gt;：零个或多个除了换行符以外的任意字符（非空白字符或者空白字符）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%a&lt;/l0&gt;: One or more of anything (character or white space) including the end of line character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081813Z" creationid="Wynn" creationdate="20150306T081813Z">
        <seg>&lt;l0&gt;%a&lt;/l0&gt;：一个或多个包括换行符在内的任意字符（非空白字符或者空白字符）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%c&lt;/l0&gt;: A single character of any sort.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082034Z" creationid="Wynn" creationdate="20150306T082034Z">
        <seg>&lt;l0&gt;%c&lt;/l0&gt;：单个任意字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%d&lt;/l0&gt;: An unsigned integer value, for example &lt;l1&gt;123456&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081916Z" creationid="Wynn" creationdate="20150306T081916Z">
        <seg>&lt;l0&gt;%d&lt;/l0&gt;：无符号整数值，例如 &lt;l1&gt;123456&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%e&lt;/l0&gt;: Represents a directory separator, for example &lt;l1&gt;/&lt;/l1&gt; on Linux.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081733Z" creationid="Wynn" creationdate="20150306T081733Z">
        <seg>&lt;l0&gt;%e&lt;/l0&gt;：表示目录分隔符，例如在 Linux 系统中是 &lt;l1&gt;/&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%f&lt;/l0&gt;: A floating point number, for example: &lt;l1&gt;3.142&lt;/l1&gt;, &lt;l2&gt;-3.142&lt;/l2&gt;, &lt;l3&gt;3.142E-10&lt;/l3&gt;, &lt;l4&gt;3.142e+10&lt;/l4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082017Z" creationid="Wynn" creationdate="20150306T081957Z">
        <seg>&lt;l0&gt;%f&lt;/l0&gt;：浮点数，例如 &lt;l1&gt;3.142&lt;/l1&gt;、&lt;l2&gt;-3.142&lt;/l2&gt;、&lt;l3&gt;3.142E-10&lt;/l3&gt;、&lt;l4&gt;3.142e+10&lt;/l4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%i&lt;/l0&gt;: A signed integer value, for example &lt;l1&gt;+3142&lt;/l1&gt;, &lt;l2&gt;-3142&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081907Z" creationid="Wynn" creationdate="20150306T081907Z">
        <seg>&lt;l0&gt;%i&lt;/l0&gt;：带符号整数值，例如 &lt;l1&gt;+3142&lt;/l1&gt;、&lt;l2&gt;-3142&lt;/l2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%s&lt;/l0&gt;: One or more of anything (character or white space) except the end of line character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081754Z" creationid="Wynn" creationdate="20150306T081754Z">
        <seg>&lt;l0&gt;%s&lt;/l0&gt;：一个或多个除了换行符以外的任意字符（非空白字符或者空白字符）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%w&lt;/l0&gt;: Zero or more white space characters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081837Z" creationid="Wynn" creationdate="20150306T081837Z">
        <seg>&lt;l0&gt;%w&lt;/l0&gt;：零个或多个空白字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;%x&lt;/l0&gt;: One or more hexadecimal character. That is, characters in the range &lt;l1&gt;0-9&lt;/l1&gt;, &lt;l2&gt;a-f&lt;/l2&gt;, &lt;l3&gt;A-F&lt;/l3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081940Z" creationid="Wynn" creationdate="20150306T081940Z">
        <seg>&lt;l0&gt;%x&lt;/l0&gt;：一个或多个十六进制字符。所谓十六进制字符，指的是在以下范围内的字符：&lt;l1&gt;0-9&lt;/l1&gt;、&lt;l2&gt;a-f&lt;/l2&gt;、&lt;l3&gt;A-F&lt;/l3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;--testdox-html&lt;/l0&gt; and &lt;l1&gt;--testdox-text&lt;/l1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093505Z" creationid="Wynn" creationdate="20150327T093505Z">
        <seg>&lt;l0&gt;--testdox-html&lt;/l0&gt; 和 &lt;l1&gt;--testdox-text&lt;/l1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; is limited by PHP internals and may cause unintended static values to persist and leak into subsequent tests in some circumstances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T061140Z" creationid="Wynn" creationdate="20150228T061140Z">
        <seg>受限于 PHP 的内部实现，在某些情况下即使使用了 &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; 也可能有个别静态值出现意料外的延续，并污染后继测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;ClassTest&lt;/l0&gt; inherits (most of the time) from &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101453Z" creationid="Wynn" creationdate="20150327T101453Z">
        <seg>&lt;l0&gt;ClassTest&lt;/l0&gt;（通常）继承自 &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; can collect code coverage information for tests run through Selenium:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064152Z" creationid="Wynn" creationdate="20150327T064152Z">
        <seg>&lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; 可以为通过 Selenium 运行的测试收集代码覆盖率信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;PHPUnit_Framework_Error_Notice&lt;/l0&gt; and &lt;l1&gt;PHPUnit_Framework_Error_Warning&lt;/l1&gt; represent PHP notices and warnings, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024203Z" creationid="Wynn" creationdate="20150330T024203Z">
        <seg>&lt;l0&gt;PHPUnit_Framework_Error_Notice&lt;/l0&gt; 和 &lt;l1&gt;PHPUnit_Framework_Error_Warning&lt;/l1&gt; 分别代表 PHP 通知与 PHP 警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;UnitTest&lt;/l0&gt; must be either a class that inherits from &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; or a class that provides a &lt;l2&gt;public static suite()&lt;/l2&gt; method which returns a &lt;l3&gt;PHPUnit_Framework_Test&lt;/l3&gt; object, for example an instance of the &lt;l4&gt;PHPUnit_Framework_TestSuite&lt;/l4&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093130Z" creationid="Wynn" creationdate="20150327T093130Z">
        <seg>&lt;l0&gt;UnitTest&lt;/l0&gt; 这个类必须满足以下二个条件之一：要么它继承自 &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt;；要么它提供 &lt;l2&gt;public static suite()&lt;/l2&gt; 方法，这个方法返回一个 &lt;l3&gt;PHPUnit_Framework_Test&lt;/l3&gt; 对象，比如，一个 &lt;l4&gt;PHPUnit_Framework_TestSuite&lt;/l4&gt; 类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;addUncoveredFilesFromWhitelist&lt;/l0&gt; was removed in favor of &lt;l1&gt;processUncoveredFilesFromWhitelist&lt;/l1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042310Z" creationid="Wynn" creationdate="20150330T042310Z">
        <seg>&lt;l0&gt;addUncoveredFilesFromWhitelist&lt;/l0&gt; 已移除，以 &lt;l1&gt;processUncoveredFilesFromWhitelist&lt;/l1&gt; 取而代之</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;always&lt;/l0&gt;: always displays colors in the output even when the current terminal doesn't support colors, or when the output is piped to a command or redirected to a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T033911Z" creationid="Wynn" creationdate="20150924T033911Z">
        <seg>&lt;l0&gt;always&lt;/l0&gt;: 总是使用彩色输出，即使当前终端不支持彩色、输出被管道输出至其他命令、或输出被重定向至文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;always&lt;/l0&gt;: always displays colors in the output even when the current terminal doesn't supports colors, or when the output is piped to a command or redirected to a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T035109Z" creationid="Wynn" creationdate="20150924T035109Z">
        <seg>&lt;l0&gt;always&lt;/l0&gt;: 总是使用彩色输出，即使当前终端不支持彩色、输出被管道输出至其他命令、或输出被重定向至文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;ancestor&lt;/l0&gt;: At least one of the node's ancestors must meet the criteria described by the &lt;l1&gt;$ancestor&lt;/l1&gt; associative array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054748Z" creationid="Wynn" creationdate="20150330T054748Z">
        <seg>&lt;l0&gt;ancestor&lt;/l0&gt;：节点的祖先节点中要至少有一个与 &lt;l1&gt;$ancestor&lt;/l1&gt; 关联数组所描述的准则一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;array&lt;/l0&gt;: Asserts that the count is in a range specified by using &lt;l1&gt;&lt;&lt;/l1&gt;, &lt;l2&gt;&gt;&lt;/l2&gt;, &lt;l3&gt;&lt;=&lt;/l3&gt;, and &lt;l4&gt;&gt;=&lt;/l4&gt; as keys.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053933Z" creationid="Wynn" creationdate="20150330T053933Z">
        <seg>&lt;l0&gt;array&lt;/l0&gt;：断言符合条件的元素的数量所在的区间，用 &lt;l1&gt;&lt;&lt;/l1&gt;、&lt;l2&gt;&gt;&lt;/l2&gt;、&lt;l3&gt;&lt;=&lt;/l3&gt;, 和 &lt;l4&gt;&gt;=&lt;/l4&gt;作为键名来指定相关信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertArrayNotHasKey()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T061444Z" creationid="Wynn" creationdate="20150303T061444Z">
        <seg>&lt;l0&gt;assertArrayNotHasKey()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeContains()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotContains()&lt;/l1&gt; are convenience wrappers that use a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object as the haystack.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085323Z" creationid="Wynn" creationdate="20150303T063955Z">
        <seg>&lt;l0&gt;assertAttributeContains()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotContains()&lt;/l1&gt; 是便捷包装(convenience wrapper)，以某个类或对象的 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性为搜索范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeContainsOnly()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotContainsOnly()&lt;/l1&gt; are convenience wrappers that use a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object as the haystack.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085318Z" creationid="Wynn" creationdate="20150303T082250Z">
        <seg>&lt;l0&gt;assertAttributeContainsOnly()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotContainsOnly()&lt;/l1&gt; 是便捷包装(convenience wrapper)，以某个类或对象的 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性为搜索范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeEmpty()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotEmpty()&lt;/l1&gt; are convenience wrappers that can be applied to a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085330Z" creationid="Wynn" creationdate="20150303T084838Z">
        <seg>&lt;l0&gt;assertAttributeEmpty()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotEmpty()&lt;/l1&gt; 是便捷包装(convenience wrapper)，可以应用于某个类或对象的某个 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeEquals()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotEquals()&lt;/l1&gt; are convenience wrappers that use a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085441Z" creationid="Wynn" creationdate="20150303T085309Z">
        <seg>&lt;l0&gt;assertAttributeEquals()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotEquals()&lt;/l1&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeGreaterThan()&lt;/l0&gt; is a convenience wrapper that uses a &lt;l1&gt;public&lt;/l1&gt;, &lt;l2&gt;protected&lt;/l2&gt;, or &lt;l3&gt;private&lt;/l3&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031154Z" creationid="Wynn" creationdate="20150305T031154Z">
        <seg>&lt;l0&gt;assertAttributeGreaterThan()&lt;/l0&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l1&gt;public&lt;/l1&gt;、&lt;l2&gt;protected&lt;/l2&gt; 或 &lt;l3&gt;private&lt;/l3&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeGreaterThanOrEqual()&lt;/l0&gt; is a convenience wrapper that uses a &lt;l1&gt;public&lt;/l1&gt;, &lt;l2&gt;protected&lt;/l2&gt;, or &lt;l3&gt;private&lt;/l3&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031309Z" creationid="Wynn" creationdate="20150305T031309Z">
        <seg>&lt;l0&gt;assertAttributeGreaterThanOrEqual()&lt;/l0&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l1&gt;public&lt;/l1&gt;、&lt;l2&gt;protected&lt;/l2&gt; 或 &lt;l3&gt;private&lt;/l3&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeInstanceOf()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotInstanceOf()&lt;/l1&gt; are convenience wrappers that can be applied to a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T061456Z" creationid="Wynn" creationdate="20150305T061456Z">
        <seg>&lt;l0&gt;assertAttributeInstanceOf()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotInstanceOf()&lt;/l1&gt; 是便捷包装(convenience wrapper)，可以应用于某个类或对象的某个 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeInternalType()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotInternalType()&lt;/l1&gt; are convenience wrappers that can be applied to a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T064139Z" creationid="Wynn" creationdate="20150305T064139Z">
        <seg>&lt;l0&gt;assertAttributeInternalType()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotInternalType()&lt;/l1&gt; 是便捷包装(convenience wrapper)，可以应用于某个类或对象的某个 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeLessThan()&lt;/l0&gt; is a convenience wrapper that uses a &lt;l1&gt;public&lt;/l1&gt;, &lt;l2&gt;protected&lt;/l2&gt;, or &lt;l3&gt;private&lt;/l3&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065441Z" creationid="Wynn" creationdate="20150305T065441Z">
        <seg>&lt;l0&gt;assertAttributeLessThan()&lt;/l0&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l1&gt;public&lt;/l1&gt;、&lt;l2&gt;protected&lt;/l2&gt; 或 &lt;l3&gt;private&lt;/l3&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeLessThanOrEqual()&lt;/l0&gt; is a convenience wrapper that uses a &lt;l1&gt;public&lt;/l1&gt;, &lt;l2&gt;protected&lt;/l2&gt;, or &lt;l3&gt;private&lt;/l3&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065525Z" creationid="Wynn" creationdate="20150305T065525Z">
        <seg>&lt;l0&gt;assertAttributeLessThanOrEqual()&lt;/l0&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l1&gt;public&lt;/l1&gt;、&lt;l2&gt;protected&lt;/l2&gt; 或 &lt;l3&gt;private&lt;/l3&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertAttributeSame()&lt;/l0&gt; and &lt;l1&gt;assertAttributeNotSame()&lt;/l1&gt; are convenience wrappers that use a &lt;l2&gt;public&lt;/l2&gt;, &lt;l3&gt;protected&lt;/l3&gt;, or &lt;l4&gt;private&lt;/l4&gt; attribute of a class or object as the actual value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082243Z" creationid="Wynn" creationdate="20150306T082243Z">
        <seg>&lt;l0&gt;assertAttributeSame()&lt;/l0&gt; 和 &lt;l1&gt;assertAttributeNotSame()&lt;/l1&gt; 是便捷包装(convenience wrapper)，以某个类或对象的某个 &lt;l2&gt;public&lt;/l2&gt;、&lt;l3&gt;protected&lt;/l3&gt; 或 &lt;l4&gt;private&lt;/l4&gt; 属性作为实际值来进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertClassNotHasAttribute()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063516Z" creationid="Wynn" creationdate="20150303T063516Z">
        <seg>&lt;l0&gt;assertClassNotHasAttribute()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertClassNotHasStaticAttribute()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063654Z" creationid="Wynn" creationdate="20150303T063654Z">
        <seg>&lt;l0&gt;assertClassNotHasStaticAttribute()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertFileNotEquals()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030841Z" creationid="Wynn" creationdate="20150305T030841Z">
        <seg>&lt;l0&gt;assertFileNotEquals()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertFileNotExists()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030946Z" creationid="Wynn" creationdate="20150305T030946Z">
        <seg>&lt;l0&gt;assertFileNotExists()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertFinite()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075844Z" creationid="Wynn" creationdate="20150706T075844Z">
        <seg>&lt;l0&gt;assertFinite()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotContains()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063840Z" creationid="Wynn" creationdate="20150303T063840Z">
        <seg>&lt;l0&gt;assertNotContains()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotContainsOnly()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T082207Z" creationid="Wynn" creationdate="20150303T082207Z">
        <seg>&lt;l0&gt;assertNotContainsOnly()&lt;/l0&gt; 是与之相反的断言，并接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotCount()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084103Z" creationid="Wynn" creationdate="20150303T084103Z">
        <seg>&lt;l0&gt;assertNotCount()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotEmpty()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084728Z" creationid="Wynn" creationdate="20150303T084728Z">
        <seg>&lt;l0&gt;assertNotEmpty()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotEquals()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085237Z" creationid="Wynn" creationdate="20150303T085237Z">
        <seg>&lt;l0&gt;assertNotEquals()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotFalse()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030649Z" creationid="Wynn" creationdate="20150305T030649Z">
        <seg>&lt;l0&gt;assertNotFalse()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotInstanceOf()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T032709Z" creationid="Wynn" creationdate="20150305T032709Z">
        <seg>&lt;l0&gt;assertNotInstanceOf()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotInternalType()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T061701Z" creationid="Wynn" creationdate="20150305T061701Z">
        <seg>&lt;l0&gt;assertNotInternalType()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotNull()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065617Z" creationid="Wynn" creationdate="20150305T065617Z">
        <seg>&lt;l0&gt;assertNotNull()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotRegExp()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081338Z" creationid="Wynn" creationdate="20150306T081338Z">
        <seg>&lt;l0&gt;assertNotRegExp()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotSame()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082215Z" creationid="Wynn" creationdate="20150306T082215Z">
        <seg>&lt;l0&gt;assertNotSame()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotTag()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054911Z" creationid="Wynn" creationdate="20150330T054911Z">
        <seg>&lt;l0&gt;assertNotTag()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertNotTrue()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034208Z" creationid="Wynn" creationdate="20150309T034208Z">
        <seg>&lt;l0&gt;assertNotTrue()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertObjectNotHasAttribute()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065710Z" creationid="Wynn" creationdate="20150305T065710Z">
        <seg>&lt;l0&gt;assertObjectNotHasAttribute()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertStringEndsNotWith()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082447Z" creationid="Wynn" creationdate="20150306T082447Z">
        <seg>&lt;l0&gt;assertStringEndsNotWith()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertStringNotEqualsFile()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082600Z" creationid="Wynn" creationdate="20150306T082600Z">
        <seg>&lt;l0&gt;assertStringNotEqualsFile()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertStringNotMatchesFormat()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081546Z" creationid="Wynn" creationdate="20150306T081546Z">
        <seg>&lt;l0&gt;assertStringNotMatchesFormat()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertStringNotMatchesFormatFile()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082117Z" creationid="Wynn" creationdate="20150306T082117Z">
        <seg>&lt;l0&gt;assertStringNotMatchesFormatFile()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertStringStartsNotWith()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082655Z" creationid="Wynn" creationdate="20150306T082655Z">
        <seg>&lt;l0&gt;assertStringStartsNotWith()&lt;/l0&gt; 是与之相反的断言，并接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertXmlFileNotEqualsXmlFile()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035245Z" creationid="Wynn" creationdate="20150309T035245Z">
        <seg>&lt;l0&gt;assertXmlFileNotEqualsXmlFile()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertXmlStringNotEqualsXmlFile()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035407Z" creationid="Wynn" creationdate="20150309T035407Z">
        <seg>&lt;l0&gt;assertXmlStringNotEqualsXmlFile()&lt;/l0&gt; 是与之相反的断言，并接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;assertXmlStringNotEqualsXmlString()&lt;/l0&gt; is the inverse of this assertion and takes the same arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035629Z" creationid="Wynn" creationdate="20150309T035629Z">
        <seg>&lt;l0&gt;assertXmlStringNotEqualsXmlString()&lt;/l0&gt; 是与之相反的断言，接受相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;attributes&lt;/l0&gt;: The node's attributes must match the corresponsing values in the &lt;l1&gt;$attributes&lt;/l1&gt; associative array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054645Z" creationid="Wynn" creationdate="20150330T054645Z">
        <seg>&lt;l0&gt;attributes&lt;/l0&gt;：节点的属性必须与 &lt;l1&gt;$attributes&lt;/l1&gt; 关联数组中所描述的对应值相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;auto&lt;/l0&gt;: displays colors in the output unless the current terminal doesn't support colors, or if the output is piped to a command or redirected to a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T033831Z" creationid="Wynn" creationdate="20150924T033831Z">
        <seg>&lt;l0&gt;auto&lt;/l0&gt;: 如果当前终端不支持彩色、或者输出被管道输出至其他命令、或输出被重定向至文件时，不使用彩色输出，其余情况使用彩色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;auto&lt;/l0&gt;: displays colors in the output unless the current terminal doesn't supports colors, or if the output is piped to a command or redirected to a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T035057Z" creationid="Wynn" creationdate="20150924T035057Z">
        <seg>&lt;l0&gt;auto&lt;/l0&gt;: 如果当前终端不支持彩色、或者输出被管道输出至其他命令、或输出被重定向至文件时，不使用彩色输出，其余情况使用彩色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;boolean&lt;/l0&gt;: Asserts for presence of elements matching the selector (&lt;l1&gt;TRUE&lt;/l1&gt;) or absence of elements (&lt;l2&gt;FALSE&lt;/l2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053821Z" creationid="Wynn" creationdate="20150330T053821Z">
        <seg>&lt;l0&gt;boolean&lt;/l0&gt;: 断言存在符合条件的元素(&lt;l1&gt;TRUE&lt;/l1&gt;)或不存在这样的元素(&lt;l2&gt;FALSE&lt;/l2&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;charset&lt;/l0&gt;: Character set to be used for the generated HTML pages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040240Z" creationid="Wynn" creationdate="20150330T040240Z">
        <seg>&lt;l0&gt;charset&lt;/l0&gt;：生成的 HTML 页面所要使用的字符集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;child&lt;/l0&gt;: At least one of the node's immediate children must meet the criteria described by the &lt;l1&gt;$child&lt;/l1&gt; associative array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054736Z" creationid="Wynn" creationdate="20150330T054736Z">
        <seg>&lt;l0&gt;child&lt;/l0&gt;： 节点的直接子节点（immediate children，即节点的下一级节点）中要至少有一个与 &lt;l1&gt;$child&lt;/l1&gt; 关联数组所描述的准则一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;children&lt;/l0&gt;: Associative array for counting children of a node.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054810Z" creationid="Wynn" creationdate="20150330T054810Z">
        <seg>&lt;l0&gt;children&lt;/l0&gt;：关联数组，节点的子节点的计数信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;content&lt;/l0&gt;: The text content must match the given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054654Z" creationid="Wynn" creationdate="20150330T054654Z">
        <seg>&lt;l0&gt;content&lt;/l0&gt;：文本内容必须与指定值相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;count&lt;/l0&gt;: The number of matching children must be equal to this number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054822Z" creationid="Wynn" creationdate="20150330T054822Z">
        <seg>&lt;l0&gt;count&lt;/l0&gt;：匹配的子节点数量必须等于此数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;descendant&lt;/l0&gt;: At least one of the node's descendants must meet the criteria described by the &lt;l1&gt;$descendant&lt;/l1&gt; associative array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054802Z" creationid="Wynn" creationdate="20150330T054802Z">
        <seg>&lt;l0&gt;descendant&lt;/l0&gt;：节点的后代节点中要至少有一个与 &lt;l1&gt;$descendant&lt;/l1&gt; 关联数组所描述的准则一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;disableAutoload()&lt;/l0&gt; can be used to disable &lt;l1&gt;__autoload()&lt;/l1&gt; during the generation of the test double class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T080633Z" creationid="Wynn" creationdate="20150327T080633Z">
        <seg>&lt;l0&gt;disableAutoload()&lt;/l0&gt;可用于在测试替身类的生成期间禁用 &lt;l1&gt;__autoload()&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;disableOriginalClone()&lt;/l0&gt; can be used to disable the call to the original class' clone constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075816Z" creationid="Wynn" creationdate="20150327T075816Z">
        <seg>&lt;l0&gt;disableOriginalClone()&lt;/l0&gt; 可用于禁用对原版类的克隆方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;disableOriginalConstructor()&lt;/l0&gt; can be used to disable the call to the original class' constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075806Z" creationid="Wynn" creationdate="20150327T075806Z">
        <seg>&lt;l0&gt;disableOriginalConstructor()&lt;/l0&gt; 参数可用于禁用对原版类的构造方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;greater_than&lt;/l0&gt;: The number of matching children must be greater than this number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054847Z" creationid="Wynn" creationdate="20150330T054847Z">
        <seg>&lt;l0&gt;greater_than&lt;/l0&gt;：匹配的子节点数量必须大于此数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;highLowerBound&lt;/l0&gt;: Minimum coverage percentage to be considered "highly" covered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095634Z" creationid="Wynn" creationdate="20150309T095634Z">
        <seg>&lt;l0&gt;highLowerBound&lt;/l0&gt;：视为“高”覆盖率的最小覆盖率百分比。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;highlight&lt;/l0&gt;: When set to &lt;l1&gt;true&lt;/l1&gt;, the code in your coverage reports is syntax highlighted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040255Z" creationid="Wynn" creationdate="20150330T040255Z">
        <seg>&lt;l0&gt;highlight&lt;/l0&gt;：设置为 &lt;l1&gt;true&lt;/l1&gt;时，覆盖率报告中的代码将会进行语法高亮标注。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;id&lt;/l0&gt;: The node with the given &lt;l1&gt;id&lt;/l1&gt; attribute must match the corresponsing value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054620Z" creationid="Wynn" creationdate="20150330T054554Z">
        <seg>&lt;l0&gt;id&lt;/l0&gt;： 节点必须具有指定 &lt;l1&gt;id&lt;/l1&gt; 属性值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;integer&lt;/l0&gt;: Asserts the count of elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053832Z" creationid="Wynn" creationdate="20150330T053832Z">
        <seg>&lt;l0&gt;integer&lt;/l0&gt;：断言符合条件的元素的数量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;less_than&lt;/l0&gt;: The number of matching children must be less than this number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054833Z" creationid="Wynn" creationdate="20150330T054833Z">
        <seg>&lt;l0&gt;less_than&lt;/l0&gt;&gt;：匹配的子节点数量必须小于此数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;lowUpperBound&lt;/l0&gt;: Maximum coverage percentage to be considered "lowly" covered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095614Z" creationid="Wynn" creationdate="20150309T095614Z">
        <seg>&lt;l0&gt;lowUpperBound&lt;/l0&gt;：视为“低”覆盖率的最大覆盖率百分比。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;never&lt;/l0&gt;: never displays colors in the output. This is the default value when &lt;l1&gt;--colors&lt;/l1&gt; option is not used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T031919Z" creationid="Wynn" creationdate="20150924T031919Z">
        <seg>&lt;l0&gt;never&lt;/l0&gt;: 完全不使用彩色输出。当未使用 &lt;l1&gt;--colors&lt;/l1&gt; 选项时，这是默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;only&lt;/l0&gt;: Another associative array consisting of the keys to use to match on the children, and only matching children will be counted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054856Z" creationid="Wynn" creationdate="20150330T054856Z">
        <seg>&lt;l0&gt;only&lt;/l0&gt;：另一个关联数组，由用来对子节点进行匹配的键名组成，只有匹配的子节点才会进行计数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;parent&lt;/l0&gt;: The node's parent must match the &lt;l1&gt;$parent&lt;/l1&gt; associative array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054705Z" creationid="Wynn" creationdate="20150330T054705Z">
        <seg>&lt;l0&gt;parent&lt;/l0&gt;：节点的父节点必须匹配于 &lt;l1&gt;$parent&lt;/l1&gt; 关联数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;setConstructorArgs(array $args)&lt;/l0&gt; can be called to provide a parameter array that is passed to the original class' constructor (which is not replaced with a dummy implementation by default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075749Z" creationid="Wynn" creationdate="20150327T075749Z">
        <seg>&lt;l0&gt;setConstructorArgs(array $args)&lt;/l0&gt; 可用于向原版类的构造函数（默认情况下不会被替换为伪实现）提供参数数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;setMethods(array $methods)&lt;/l0&gt; can be called on the Mock Builder object to specify the methods that are to be replaced with a configurable test double. The behavior of the other methods is not changed. If you call &lt;l1&gt;setMethods(NULL)&lt;/l1&gt;, then no methods will be replaced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045028Z" creationid="Wynn" creationdate="20150330T045028Z">
        <seg>&lt;l0&gt;setMethods(array $methods)&lt;/l0&gt; 可以在仿件生成器对象上调用，来指定哪些方法将被替换为可配置的测试提升。其他方法的行为不会有所改变。如果调用 &lt;l1&gt;setMethods(NULL)&lt;/l1&gt;，那么没有方法会被替换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;setMethods(array $methods)&lt;/l0&gt; can be called on the Mock Builder object to specify the methods that are to be replaced with a configurable test double. The behavior of the other methods is not changed. If you call &lt;l1&gt;setMethods(null)&lt;/l1&gt;, then no methods will be replaced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075728Z" creationid="Wynn" creationdate="20150327T075728Z">
        <seg>&lt;l0&gt;setMethods(array $methods)&lt;/l0&gt; 可以在仿件生成器对象上调用，来指定哪些方法将被替换为可配置的测试替身。其他方法的行为不会有所改变。如果调用 &lt;l1&gt;setMethods(null)&lt;/l1&gt;，那么没有方法会被替换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;setMockClassName($name)&lt;/l0&gt; can be used to specify a class name for the generated test double class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075758Z" creationid="Wynn" creationdate="20150327T075729Z">
        <seg>&lt;l0&gt;setMockClassName($name)&lt;/l0&gt; 可用于指定生成的测试替身类的类名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;setUp()&lt;/l0&gt; and &lt;l1&gt;tearDown()&lt;/l1&gt; are nicely symmetrical in theory but not in practice. In practice, you only need to implement &lt;l2&gt;tearDown()&lt;/l2&gt; if you have allocated external resources like files or sockets in &lt;l3&gt;setUp()&lt;/l3&gt;. If your &lt;l4&gt;setUp()&lt;/l4&gt; just creates plain PHP objects, you can generally ignore &lt;l5&gt;tearDown()&lt;/l5&gt;. However, if you create many objects in your &lt;l6&gt;setUp()&lt;/l6&gt;, you might want to &lt;l7&gt;unset()&lt;/l7&gt; the variables pointing to those objects in your &lt;l8&gt;tearDown()&lt;/l8&gt; so they can be garbage collected. The garbage collection of test case objects is not predictable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081620Z" creationid="Wynn" creationdate="20150319T081620Z">
        <seg>理论上说，&lt;l0&gt;setUp()&lt;/l0&gt; 和 &lt;l1&gt;tearDown()&lt;/l1&gt; 是精确对称的，但是实践中并非如此。实际上，只有在 &lt;l3&gt;setUp()&lt;/l3&gt; 中分配了诸如文件或套接字之类的外部资源时才需要实现 &lt;l2&gt;tearDown()&lt;/l2&gt; 。如果 &lt;l4&gt;setUp()&lt;/l4&gt; 中只创建纯 PHP 对象，通常可以略过 &lt;l5&gt;tearDown()&lt;/l5&gt;。不过，如果在 &lt;l6&gt;setUp()&lt;/l6&gt; 中创建了大量对象，你可能想要在 &lt;l8&gt;tearDown()&lt;/l8&gt; 中 &lt;l7&gt;unset()&lt;/l7&gt; 指向这些对象的变量，这样它们就可以被垃圾回收机制回收掉。对测试用例对象的垃圾回收动作则是不可预知的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;showOnlySummary&lt;/l0&gt;: Show only the summary in &lt;l1&gt;--coverage-text&lt;/l1&gt; output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095805Z" creationid="Wynn" creationdate="20150309T095805Z">
        <seg>&lt;l0&gt;showOnlySummary&lt;/l0&gt;：在 &lt;l1&gt;--coverage-text&lt;/l1&gt; 输出中只显示摘要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;showUncoveredFiles&lt;/l0&gt;: Show all whitelisted files in &lt;l1&gt;--coverage-text&lt;/l1&gt; output not just the ones with coverage information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095733Z" creationid="Wynn" creationdate="20150309T095733Z">
        <seg>&lt;l0&gt;showUncoveredFiles&lt;/l0&gt;：在 &lt;l1&gt;--coverage-text&lt;/l1&gt; 输出中显示所有符合白名单的文件，不仅限于有覆盖率信息的那些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;l0&gt;tag&lt;/l0&gt;: The node type must match the corresponding value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054627Z" creationid="Wynn" creationdate="20150330T054555Z">
        <seg>&lt;l0&gt;tag&lt;/l0&gt;：节点的类型必须与对应值相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;listeners&gt;
  &lt;listener class="MyListener" file="/optional/path/to/MyListener.php"&gt;
    &lt;arguments&gt;
      &lt;array&gt;
        &lt;element key="0"&gt;
          &lt;string&gt;Sebastian&lt;/string&gt;
        &lt;/element&gt;
      &lt;/array&gt;
      &lt;integer&gt;22&lt;/integer&gt;
      &lt;string&gt;April&lt;/string&gt;
      &lt;double&gt;19.78&lt;/double&gt;
      &lt;null/&gt;
      &lt;object class="stdClass"/&gt;
    &lt;/arguments&gt;
  &lt;/listener&gt;
&lt;/listeners&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075154Z" creationid="Wynn" creationdate="20150310T075154Z">
        <seg>&lt;listeners&gt;
  &lt;listener class="MyListener" file="/optional/path/to/MyListener.php"&gt;
    &lt;arguments&gt;
      &lt;array&gt;
        &lt;element key="0"&gt;
          &lt;string&gt;Sebastian&lt;/string&gt;
        &lt;/element&gt;
      &lt;/array&gt;
      &lt;integer&gt;22&lt;/integer&gt;
      &lt;string&gt;April&lt;/string&gt;
      &lt;double&gt;19.78&lt;/double&gt;
      &lt;null/&gt;
      &lt;object class="stdClass"/&gt;
    &lt;/arguments&gt;
  &lt;/listener&gt;
&lt;/listeners&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;logging&gt;
  &lt;log type="coverage-html" target="/tmp/report" charset="UTF-8"
       highlight="false" lowUpperBound="35" highLowerBound="70"/&gt;
  &lt;log type="coverage-clover" target="/tmp/coverage.xml"/&gt;
  &lt;log type="coverage-php" target="/tmp/coverage.serialized"/&gt;
  &lt;log type="coverage-text" target="php://stdout" showUncoveredFiles="false"/&gt;
  &lt;log type="json" target="/tmp/logfile.json"/&gt;
  &lt;log type="tap" target="/tmp/logfile.tap"/&gt;
  &lt;log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/&gt;
  &lt;log type="testdox-html" target="/tmp/testdox.html"/&gt;
  &lt;log type="testdox-text" target="/tmp/testdox.txt"/&gt;
&lt;/logging&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040153Z" creationid="Wynn" creationdate="20150330T040153Z">
        <seg>&lt;logging&gt;
  &lt;log type="coverage-html" target="/tmp/report" charset="UTF-8"
       highlight="false" lowUpperBound="35" highLowerBound="70"/&gt;
  &lt;log type="coverage-clover" target="/tmp/coverage.xml"/&gt;
  &lt;log type="coverage-php" target="/tmp/coverage.serialized"/&gt;
  &lt;log type="coverage-text" target="php://stdout" showUncoveredFiles="false"/&gt;
  &lt;log type="json" target="/tmp/logfile.json"/&gt;
  &lt;log type="tap" target="/tmp/logfile.tap"/&gt;
  &lt;log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/&gt;
  &lt;log type="testdox-html" target="/tmp/testdox.html"/&gt;
  &lt;log type="testdox-text" target="/tmp/testdox.txt"/&gt;
&lt;/logging&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;logging&gt;
  &lt;log type="coverage-html" target="/tmp/report" lowUpperBound="35"
       highLowerBound="70"/&gt;
  &lt;log type="coverage-clover" target="/tmp/coverage.xml"/&gt;
  &lt;log type="coverage-php" target="/tmp/coverage.serialized"/&gt;
  &lt;log type="coverage-text" target="php://stdout" showUncoveredFiles="false"/&gt;
  &lt;log type="json" target="/tmp/logfile.json"/&gt;
  &lt;log type="tap" target="/tmp/logfile.tap"/&gt;
  &lt;log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/&gt;
  &lt;log type="testdox-html" target="/tmp/testdox.html"/&gt;
  &lt;log type="testdox-text" target="/tmp/testdox.txt"/&gt;
&lt;/logging&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095222Z" creationid="Wynn" creationdate="20150309T095222Z">
        <seg>&lt;logging&gt;
  &lt;log type="coverage-html" target="/tmp/report" lowUpperBound="35"
       highLowerBound="70"/&gt;
  &lt;log type="coverage-clover" target="/tmp/coverage.xml"/&gt;
  &lt;log type="coverage-php" target="/tmp/coverage.serialized"/&gt;
  &lt;log type="coverage-text" target="php://stdout" showUncoveredFiles="false"/&gt;
  &lt;log type="json" target="/tmp/logfile.json"/&gt;
  &lt;log type="tap" target="/tmp/logfile.tap"/&gt;
  &lt;log type="junit" target="/tmp/logfile.xml" logIncompleteSkipped="false"/&gt;
  &lt;log type="testdox-html" target="/tmp/testdox.html"/&gt;
  &lt;log type="testdox-text" target="/tmp/testdox.txt"/&gt;
&lt;/logging&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt; &lt;p1&gt;http://blog.daveastels.com/files/BDD_Intro.pdf&lt;/p1&gt; &lt;/p0&gt; &lt;/b2&gt; &lt;b3&gt; &lt;a4&gt;Beck2002&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031955Z" creationid="Wynn" creationdate="20150330T031955Z">
        <seg>&lt;p0&gt; &lt;p1&gt;http://blog.daveastels.com/files/BDD_Intro.pdf&lt;/p1&gt; &lt;/p0&gt; &lt;/b2&gt; &lt;b3&gt; &lt;a4&gt;Beck2002&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;chmod +x phpunit.phar&lt;/u3&gt;
&lt;p4&gt;$&lt;/p4&gt; &lt;u5&gt;sudo mv phpunit.phar /usr/local/bin/phpunit&lt;/u5&gt;
&lt;p6&gt;$&lt;/p6&gt; &lt;u7&gt;phpunit --version&lt;/u7&gt;
&lt;c8&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095353Z" creationid="Wynn" creationdate="20150319T095353Z">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;chmod +x phpunit.phar&lt;/u3&gt;
&lt;p4&gt;$&lt;/p4&gt; &lt;u5&gt;sudo mv phpunit.phar /usr/local/bin/phpunit&lt;/u5&gt;
&lt;p6&gt;$&lt;/p6&gt; &lt;u7&gt;phpunit --version&lt;/u7&gt;
&lt;c8&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;chmod +x phpunit.phar&lt;/u3&gt;
&lt;p4&gt;$&lt;/p4&gt; &lt;u5&gt;sudo mv phpunit.phar /usr/local/bin/phpunit&lt;/u5&gt;
&lt;p6&gt;$&lt;/p6&gt; &lt;u7&gt;phpunit --version&lt;/u7&gt;
&lt;c8&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063145Z" creationid="Wynn" creationdate="20150330T063145Z">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;chmod +x phpunit.phar&lt;/u3&gt;
&lt;p4&gt;$&lt;/p4&gt; &lt;u5&gt;sudo mv phpunit.phar /usr/local/bin/phpunit&lt;/u5&gt;
&lt;p6&gt;$&lt;/p6&gt; &lt;u7&gt;phpunit --version&lt;/u7&gt;
&lt;c8&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;php phpunit.phar --version&lt;/u3&gt;
&lt;c4&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095400Z" creationid="Wynn" creationdate="20150319T095400Z">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;php phpunit.phar --version&lt;/u3&gt;
&lt;c4&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;php phpunit.phar --version&lt;/u3&gt;
&lt;c4&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063148Z" creationid="Wynn" creationdate="20150330T063148Z">
        <seg>&lt;p0&gt;$&lt;/p0&gt; &lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u1&gt;
&lt;p2&gt;$&lt;/p2&gt; &lt;u3&gt;php phpunit.phar --version&lt;/u3&gt;
&lt;c4&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;cd C:\bin&lt;/u1&gt;
&lt;p2&gt;C:\bin&gt;&lt;/p2&gt; &lt;u3&gt;echo @php "%~dp0phpunit.phar" %* &gt; phpunit.cmd&lt;/u3&gt;
&lt;p4&gt;C:\bin&gt;&lt;/p4&gt; &lt;u5&gt;exit&lt;/u5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095852Z" creationid="Wynn" creationdate="20150319T095852Z">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;cd C:\bin&lt;/u1&gt;
&lt;p2&gt;C:\bin&gt;&lt;/p2&gt; &lt;u3&gt;echo @php "%~dp0phpunit.phar" %* &gt; phpunit.cmd&lt;/u3&gt;
&lt;p4&gt;C:\bin&gt;&lt;/p4&gt; &lt;u5&gt;exit&lt;/u5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;phpunit --version&lt;/u1&gt;
&lt;c2&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095903Z" creationid="Wynn" creationdate="20150319T095903Z">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;phpunit --version&lt;/u1&gt;
&lt;c2&gt;PHPUnit x.y.z by Sebastian Bergmann and contributors.&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;phpunit --version&lt;/u1&gt;
&lt;c2&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063150Z" creationid="Wynn" creationdate="20150330T063150Z">
        <seg>&lt;p0&gt;C:\Users\username&gt;&lt;/p0&gt; &lt;u1&gt;phpunit --version&lt;/u1&gt;
&lt;c2&gt;PHPUnit x.y.z by Sebastian Bergmann.&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Blacklist&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091125Z" creationid="Wynn" creationdate="20150309T061925Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Blacklist （黑名单）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Branch Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091102Z" creationid="Wynn" creationdate="20150309T061910Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Branch Coverage （分支覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Class and Trait Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091040Z" creationid="Wynn" creationdate="20150309T061856Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Class and Trait Coverage （类与特质覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Function and Method Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091031Z" creationid="Wynn" creationdate="20150309T061707Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Function and Method Coverage （函数与方法覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Line Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091023Z" creationid="Wynn" creationdate="20150309T061452Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Line Coverage （行覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Opcode Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091051Z" creationid="Wynn" creationdate="20150309T061904Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Opcode Coverage （Opcode 覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Path Coverage&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091116Z" creationid="Wynn" creationdate="20150309T061919Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Path Coverage （路径覆盖率）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;p0&gt;Code Coverage&lt;/p0&gt;&lt;s1&gt;Whitelist&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091208Z" creationid="Wynn" creationdate="20150309T061937Z">
        <seg>&lt;p0&gt;Code Coverage （代码覆盖率）&lt;/p0&gt;&lt;s1&gt;Whitelist （白名单）&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;php&gt;
  &lt;includePath&gt;.&lt;/includePath&gt;
  &lt;ini name="foo" value="bar"/&gt;
  &lt;const name="foo" value="bar"/&gt;
  &lt;var name="foo" value="bar"/&gt;
  &lt;env name="foo" value="bar"/&gt;
  &lt;post name="foo" value="bar"/&gt;
  &lt;get name="foo" value="bar"/&gt;
  &lt;cookie name="foo" value="bar"/&gt;
  &lt;server name="foo" value="bar"/&gt;
  &lt;files name="foo" value="bar"/&gt;
  &lt;request name="foo" value="bar"/&gt;
&lt;/php&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075632Z" creationid="Wynn" creationdate="20150310T075632Z">
        <seg>&lt;php&gt;
  &lt;includePath&gt;.&lt;/includePath&gt;
  &lt;ini name="foo" value="bar"/&gt;
  &lt;const name="foo" value="bar"/&gt;
  &lt;var name="foo" value="bar"/&gt;
  &lt;env name="foo" value="bar"/&gt;
  &lt;post name="foo" value="bar"/&gt;
  &lt;get name="foo" value="bar"/&gt;
  &lt;cookie name="foo" value="bar"/&gt;
  &lt;server name="foo" value="bar"/&gt;
  &lt;files name="foo" value="bar"/&gt;
  &lt;request name="foo" value="bar"/&gt;
&lt;/php&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/3.7/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T033112Z" creationid="Wynn" creationdate="20150330T033112Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/3.7/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.0/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061334Z" creationid="Wynn" creationdate="20150330T061334Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.0/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.1/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062727Z" creationid="Wynn" creationdate="20150330T062727Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.1/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.2/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063117Z" creationid="Wynn" creationdate="20150330T063117Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.2/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.3/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063338Z" creationid="Wynn" creationdate="20150330T063338Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.3/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.4/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063509Z" creationid="Wynn" creationdate="20150330T063509Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.4/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         strict="false"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.5/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T083841Z" creationid="Wynn" creationdate="20150817T083841Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.5/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.5/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093409Z" creationid="Wynn" creationdate="20150309T093409Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.5/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.6/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084216Z" creationid="Wynn" creationdate="20150416T084216Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.6/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.7/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035931Z" creationid="Wynn" creationdate="20151222T035931Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.7/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.8/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T040955Z" creationid="Wynn" creationdate="20151222T040955Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.8/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.0/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041218Z" creationid="Wynn" creationdate="20151222T041218Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.0/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.1/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041325Z" creationid="Wynn" creationdate="20151222T041325Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.1/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.2/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041438Z" creationid="Wynn" creationdate="20151222T041438Z">
        <seg>&lt;phpunit
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/5.2/phpunit.xsd"
         backupGlobals="true"
         backupStaticAttributes="false"
         &lt;!--bootstrap="/path/to/bootstrap.php"--&gt;
         cacheTokens="false"
         colors="false"
         convertErrorsToExceptions="true"
         convertNoticesToExceptions="true"
         convertWarningsToExceptions="true"
         forceCoversAnnotation="false"
         mapTestClassNameToCoveredClassName="false"
         printerClass="PHPUnit_TextUI_ResultPrinter"
         &lt;!--printerFile="/path/to/ResultPrinter.php"--&gt;
         processIsolation="false"
         stopOnError="false"
         stopOnFailure="false"
         stopOnIncomplete="false"
         stopOnSkipped="false"
         stopOnRisky="false"
         testSuiteLoaderClass="PHPUnit_Runner_StandardTestSuiteLoader"
         &lt;!--testSuiteLoaderFile="/path/to/StandardTestSuiteLoader.php"--&gt;
         timeoutForSmallTests="1"
         timeoutForMediumTests="10"
         timeoutForLargeTests="60"
         verbose="false"&gt;
  &lt;!-- ... --&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit bootstrap="src/autoload.php"&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;directory&gt;tests&lt;/directory&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040217Z" creationid="Wynn" creationdate="20150320T040217Z">
        <seg>&lt;phpunit bootstrap="src/autoload.php"&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;directory&gt;tests&lt;/directory&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit bootstrap="src/autoload.php"&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;file&gt;tests/IntlFormatterTest.php&lt;/file&gt;
      &lt;file&gt;tests/MoneyTest.php&lt;/file&gt;
      &lt;file&gt;tests/CurrencyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040437Z" creationid="Wynn" creationdate="20150320T040437Z">
        <seg>&lt;phpunit bootstrap="src/autoload.php"&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;file&gt;tests/IntlFormatterTest.php&lt;/file&gt;
      &lt;file&gt;tests/MoneyTest.php&lt;/file&gt;
      &lt;file&gt;tests/CurrencyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;directory&gt;tests&lt;/directory&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042958Z" creationid="Wynn" creationdate="20150330T042958Z">
        <seg>&lt;phpunit&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;directory&gt;tests&lt;/directory&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;phpunit&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;file&gt;tests/IntlFormatterTest.php&lt;/file&gt;
      &lt;file&gt;tests/MoneyTest.php&lt;/file&gt;
      &lt;file&gt;tests/CurrencyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043000Z" creationid="Wynn" creationdate="20150330T043000Z">
        <seg>&lt;phpunit&gt;
  &lt;testsuites&gt;
    &lt;testsuite name="money"&gt;
      &lt;file&gt;tests/IntlFormatterTest.php&lt;/file&gt;
      &lt;file&gt;tests/MoneyTest.php&lt;/file&gt;
      &lt;file&gt;tests/CurrencyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;
&lt;/phpunit&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;selenium&gt;
  &lt;browser name="Firefox on Linux"
           browser="*firefox /usr/lib/firefox/firefox-bin"
           host="my.linux.box"
           port="4444"
           timeout="30000"/&gt;
&lt;/selenium&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075836Z" creationid="Wynn" creationdate="20150310T075836Z">
        <seg>&lt;selenium&gt;
  &lt;browser name="Firefox on Linux"
           browser="*firefox /usr/lib/firefox/firefox-bin"
           host="my.linux.box"
           port="4444"
           timeout="30000"/&gt;
&lt;/selenium&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;t0&gt;&lt;l1&gt;--configuration&lt;/l1&gt;&lt;/t0&gt; &lt;t2&gt;&lt;l3&gt;-c&lt;/l3&gt;&lt;/t2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100534Z" creationid="Wynn" creationdate="20150327T100534Z">
        <seg>&lt;t0&gt;&lt;l1&gt;--configuration&lt;/l1&gt;&lt;/t0&gt; &lt;t2&gt;&lt;l3&gt;-c&lt;/l3&gt;&lt;/t2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;testsuites&gt;
    &lt;testsuite name="My Test Suite"&gt;
      &lt;directory suffix="Test.php" phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/files&lt;/directory&gt;
      &lt;file phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/MyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093422Z" creationid="Wynn" creationdate="20150309T093422Z">
        <seg>&lt;testsuites&gt;
    &lt;testsuite name="My Test Suite"&gt;
      &lt;directory suffix="Test.php" phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/files&lt;/directory&gt;
      &lt;file phpVersion="5.3.0" phpVersionOperator="&gt;="&gt;/path/to/MyTest.php&lt;/file&gt;
    &lt;/testsuite&gt;
  &lt;/testsuites&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;testsuites&gt;
  &lt;testsuite name="My Test Suite"&gt;
    &lt;directory&gt;/path/to/*Test.php files&lt;/directory&gt;
    &lt;file&gt;/path/to/MyTest.php&lt;/file&gt;
    &lt;exclude&gt;/path/to/exclude&lt;/exclude&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093420Z" creationid="Wynn" creationdate="20150309T093420Z">
        <seg>&lt;testsuites&gt;
  &lt;testsuite name="My Test Suite"&gt;
    &lt;directory&gt;/path/to/*Test.php files&lt;/directory&gt;
    &lt;file&gt;/path/to/MyTest.php&lt;/file&gt;
    &lt;exclude&gt;/path/to/exclude&lt;/exclude&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;Doctrine 2&lt;/u0&gt; or &lt;u1&gt;eZ Components&lt;/u1&gt; have powerful tools that allow you to create the database schema from pre-defined datastructures. However, these have to be hooked into the PHPUnit extension to allow an automatic database re-creation before the complete test-suite is run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084813Z" creationid="Wynn" creationdate="20150817T084813Z">
        <seg>&lt;u0&gt;Doctrine 2&lt;/u0&gt; 或 &lt;u1&gt;eZ Components&lt;/u1&gt; 拥有强力的工具，可以按预定义的数据结构创建数据库，但是这些都必须和 PHPUnit 扩展模块对接之后才能自动在整个测试套件运行之前重新创建数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;Doctrine 2&lt;/u0&gt; or &lt;u1&gt;eZ Components&lt;/u1&gt; have powerful tools that allows you to create the database schema from pre-defined datastructures, however these have to be hooked into the PHPUnit extension to allow automatic database re-creation before the complete test-suite is run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042401Z" creationid="Wynn" creationdate="20150319T042401Z">
        <seg>&lt;u0&gt;Doctrine 2&lt;/u0&gt; 或 &lt;u1&gt;eZ Components&lt;/u1&gt; 拥有强力的工具，可以按预定义的数据结构创建数据库，但是这些都必须和 PHPUnit 扩展模块对接之后才能自动在整个测试套件运行之前重新创建数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;Extreme Programming&lt;/u0&gt; originally had the rule to test everything that could possibly break.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030731Z" creationid="Wynn" creationdate="20150330T030731Z">
        <seg>&lt;u0&gt;极限编程&lt;/u0&gt;原本就有测试所有可能出错的东西的规则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;It is hard to test code that uses singletons.&lt;/u0&gt; The same is true for code that uses global variables. Typically, the code you want to test is coupled strongly with a global variable and you cannot control its creation. An additional problem is the fact that one test's change to a global variable might break another test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082653Z" creationid="Wynn" creationdate="20150319T082653Z">
        <seg>&lt;u0&gt;使用单件(singleton)的代码很难测试。&lt;/u0&gt;使用全局变量的代码也一样。通常情况下，欲测代码和全局变量之间会强烈耦合，并且其创建无法控制。另外一个问题是，一个测试对全局变量的改变可能会破坏另外一个测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;Prophecy&lt;/u0&gt; is a "highly opinionated yet very powerful and flexible PHP object mocking framework. Though initially it was created to fulfil phpspec2 needs, it is flexible enough to be used inside any testing framework out there with minimal effort".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090850Z" creationid="Wynn" creationdate="20150327T090850Z">
        <seg>&lt;u0&gt;Prophecy&lt;/u0&gt; 是个“极为自我却又非常强大且灵活的 PHP 对象模仿框架。虽然一开始是为了满足 phpspec2 的需要而建立的，但它足够灵活，可以用最小代价用于任何测试框架内。”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;Selenium Server&lt;/u0&gt; is a test tool that allows you to write automated user-interface tests for web applications in any programming language against any HTTP website using any mainstream browser. It performs automated browser tasks by driving the browser's process through the operating system. Selenium tests run directly in a browser, just as real users do. These tests can be used for both &lt;e1&gt;acceptance testing&lt;/e1&gt; (by performing higher-level tests on the integrated system instead of just testing each unit of the system independently) and &lt;e2&gt;browser compatibility testing&lt;/e2&gt; (by testing the web application on different operating systems and browsers).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032223Z" creationid="Wynn" creationdate="20150327T032223Z">
        <seg>&lt;u0&gt;Selenium Server&lt;/u0&gt;是一个测试工具，它允许用任意主流浏览器为任意 HTTP 网站上的用任意编程语言开发的 web 应用程序编写自动用户界面测试。它通过操作系统来驱动浏览器进程来执行自动测试。Selenium 测试直接运行于某个浏览器中，就和真实用户一样。这些测试既可以用于 &lt;e1&gt;验收测试&lt;/e1&gt;（通过在集成好的系统中执行较高层面的测试而非仅对系统的各个单元分别单独测试。）也可以用于&lt;e2&gt;浏览器兼容性测试&lt;/e2&gt;（通过在不同的操作系统与浏览器上对 web 应用程序进行测试）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;The numeric comparator is no longer invoked when provided with two strings&lt;/u0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101320Z" creationid="Wynn" creationdate="20150327T101320Z">
        <seg>&lt;u0&gt;提供两个字符串（给assertEquals()）时不再调用数值比较&lt;/u0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;gpg --keyserver pgp.uni-mainz.de --recv-keys 0x4AA394086372C20A&lt;/u0&gt;
gpg: requesting key 6372C20A from hkp server pgp.uni-mainz.de
gpg: key 6372C20A: public key "Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100232Z" creationid="Wynn" creationdate="20150319T100232Z">
        <seg>&lt;u0&gt;gpg --keyserver pgp.uni-mainz.de --recv-keys 0x4AA394086372C20A&lt;/u0&gt;
gpg: requesting key 6372C20A from hkp server pgp.uni-mainz.de
gpg: key 6372C20A: public key "Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;gpg phpunit.phar.asc&lt;/u0&gt;
gpg: Signature made Sat 19 Jul 2014 01:28:02 PM CEST using RSA key ID 6372C20A
gpg: Can't check signature: public key not found</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100130Z" creationid="Wynn" creationdate="20150319T100130Z">
        <seg>&lt;u0&gt;gpg phpunit.phar.asc&lt;/u0&gt;
gpg: Signature made Sat 19 Jul 2014 01:28:02 PM CEST using RSA key ID 6372C20A
gpg: Can't check signature: public key not found</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;gpg phpunit.phar.asc&lt;/u0&gt;
gpg: Signature made Sat 19 Jul 2014 01:28:02 PM CEST using RSA key ID 6372C20A
gpg: Good signature from "Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@php.net&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@thephp.cc&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@phpunit.de&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian.bergmann@thephp.cc&gt;"
gpg:                 aka "[jpeg image of size 40635]"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: D840 6D0D 8294 7747 2937  7831 4AA3 9408 6372 C20A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100300Z" creationid="Wynn" creationdate="20150319T100300Z">
        <seg>&lt;u0&gt;gpg phpunit.phar.asc&lt;/u0&gt;
gpg: Signature made Sat 19 Jul 2014 01:28:02 PM CEST using RSA key ID 6372C20A
gpg: Good signature from "Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@php.net&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@thephp.cc&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian@phpunit.de&gt;"
gpg:                 aka "Sebastian Bergmann &lt;sebastian.bergmann@thephp.cc&gt;"
gpg:                 aka "[jpeg image of size 40635]"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: D840 6D0D 8294 7747 2937  7831 4AA3 9408 6372 C20A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap BowlingGame.php BowlingGameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

E

Time: 0 seconds, Memory: 3.50Mb

There was 1 error:

1) BowlingGameTest::testScoreForGutterGameIs0
RuntimeException: Not yet implemented.

/home/sb/BowlingGame.php:13
/home/sb/BowlingGameTest.php:14
/home/sb/BowlingGameTest.php:20

FAILURES!
Tests: 1, Assertions: 0, Errors: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043752Z" creationid="Wynn" creationdate="20150330T043752Z">
        <seg>&lt;u0&gt;phpunit --bootstrap BowlingGame.php BowlingGameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

E

Time: 0 seconds, Memory: 3.50Mb

There was 1 error:

1) BowlingGameTest::testScoreForGutterGameIs0
RuntimeException: Not yet implemented.

/home/sb/BowlingGame.php:13
/home/sb/BowlingGameTest.php:14
/home/sb/BowlingGameTest.php:20

FAILURES!
Tests: 1, Assertions: 0, Errors: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap Calculator.php --verbose CalculatorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

....

Time: 0 seconds, Memory: 3.50Mb

OK (4 tests, 4 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043439Z" creationid="Wynn" creationdate="20150330T043439Z">
        <seg>&lt;u0&gt;phpunit --bootstrap Calculator.php --verbose CalculatorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

....

Time: 0 seconds, Memory: 3.50Mb

OK (4 tests, 4 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap Calculator.php --verbose CalculatorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.50Mb

There was 1 incomplete test:

1) CalculatorTest::testAdd
This test has not been implemented yet.

/home/sb/CalculatorTest.php:38
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043328Z" creationid="Wynn" creationdate="20150330T043328Z">
        <seg>&lt;u0&gt;phpunit --bootstrap Calculator.php --verbose CalculatorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.50Mb

There was 1 incomplete test:

1) CalculatorTest::testAdd
This test has not been implemented yet.

/home/sb/CalculatorTest.php:38
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061918Z" creationid="Wynn" creationdate="20150330T061918Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062836Z" creationid="Wynn" creationdate="20150330T062836Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063213Z" creationid="Wynn" creationdate="20150330T063213Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063405Z" creationid="Wynn" creationdate="20150330T063405Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063540Z" creationid="Wynn" creationdate="20150330T063540Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063710Z" creationid="Wynn" creationdate="20150330T063710Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063815Z" creationid="Wynn" creationdate="20150330T063815Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035929Z" creationid="Wynn" creationdate="20150320T035929Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085615Z" creationid="Wynn" creationdate="20150416T085615Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080223Z" creationid="Wynn" creationdate="20150706T080223Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085019Z" creationid="Wynn" creationdate="20150817T085019Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082648Z" creationid="Wynn" creationdate="20151020T082648Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030515Z" creationid="Wynn" creationdate="20151214T030515Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

..

Time: 167 ms, Memory: 3.00Mb

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061911Z" creationid="Wynn" creationdate="20150330T061911Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062834Z" creationid="Wynn" creationdate="20150330T062834Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063213Z" creationid="Wynn" creationdate="20150330T063213Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063404Z" creationid="Wynn" creationdate="20150330T063404Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063537Z" creationid="Wynn" creationdate="20150330T063537Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063709Z" creationid="Wynn" creationdate="20150330T063709Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063814Z" creationid="Wynn" creationdate="20150330T063814Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035855Z" creationid="Wynn" creationdate="20150320T035855Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085613Z" creationid="Wynn" creationdate="20150416T085613Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080222Z" creationid="Wynn" creationdate="20150706T080222Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085018Z" creationid="Wynn" creationdate="20150817T085018Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082647Z" creationid="Wynn" creationdate="20151020T082647Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030513Z" creationid="Wynn" creationdate="20151214T030513Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests/CurrencyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

........

Time: 280 ms, Memory: 2.75Mb

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061907Z" creationid="Wynn" creationdate="20150330T061907Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062832Z" creationid="Wynn" creationdate="20150330T062832Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063211Z" creationid="Wynn" creationdate="20150330T063211Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063404Z" creationid="Wynn" creationdate="20150330T063404Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063534Z" creationid="Wynn" creationdate="20150330T063534Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063705Z" creationid="Wynn" creationdate="20150330T063705Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063813Z" creationid="Wynn" creationdate="20150330T063813Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035809Z" creationid="Wynn" creationdate="20150320T035809Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085612Z" creationid="Wynn" creationdate="20150416T085612Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080220Z" creationid="Wynn" creationdate="20150706T080220Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085000Z" creationid="Wynn" creationdate="20150817T085000Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082646Z" creationid="Wynn" creationdate="20151020T082646Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030511Z" creationid="Wynn" creationdate="20151214T030511Z">
        <seg>&lt;u0&gt;phpunit --bootstrap src/autoload.php tests&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann.

.................................

Time: 636 ms, Memory: 3.50Mb

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --coverage-html ./report BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds

OK (3 tests, 3 assertions)

Generating report, this may take a moment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032406Z" creationid="Wynn" creationdate="20150330T032406Z">
        <seg>&lt;u0&gt;phpunit --coverage-html ./report BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds

OK (3 tests, 3 assertions)

Generating report, this may take a moment.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

..

Time: 0 seconds

OK (2 test, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042723Z" creationid="Wynn" creationdate="20150330T042723Z">
        <seg>&lt;u0&gt;phpunit --filter testObjectCanBeConstructedForValidConstructorArgument tests&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

..

Time: 0 seconds

OK (2 test, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Serialize PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default to writing to the standard output.

  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.

  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  --strict                  Run tests in strict mode.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050613Z" creationid="Wynn" creationdate="20150330T050613Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Serialize PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default to writing to the standard output.

  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.

  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  --strict                  Run tests in strict mode.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062549Z" creationid="Wynn" creationdate="20150330T062549Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062947Z" creationid="Wynn" creationdate="20150330T062947Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestSuiteListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063231Z" creationid="Wynn" creationdate="20150330T063231Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063422Z" creationid="Wynn" creationdate="20150330T063422Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063558Z" creationid="Wynn" creationdate="20150330T063558Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --strict                  Run tests in strict mode (enables all of the above).

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T031743Z" creationid="Wynn" creationdate="20150924T031743Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084224Z" creationid="Wynn" creationdate="20150416T084224Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T031745Z" creationid="Wynn" creationdate="20150924T031745Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors                  Use colors in output.
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T031746Z" creationid="Wynn" creationdate="20150924T031746Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T035023Z" creationid="Wynn" creationdate="20150924T035023Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T035112Z" creationid="Wynn" creationdate="20150924T035112Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082653Z" creationid="Wynn" creationdate="20151020T082653Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030525Z" creationid="Wynn" creationdate="20151214T030525Z">
        <seg>&lt;u0&gt;phpunit --help&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] &lt;directory&gt;

Code Coverage Options:

  --coverage-clover &lt;file&gt;  Generate code coverage report in Clover XML format.
  --coverage-crap4j &lt;file&gt;  Generate code coverage report in Crap4J XML format.
  --coverage-html &lt;dir&gt;     Generate code coverage report in HTML format.
  --coverage-php &lt;file&gt;     Export PHP_CodeCoverage object to file.
  --coverage-text=&lt;file&gt;    Generate code coverage report in text format.
                            Default: Standard output.
  --coverage-xml &lt;dir&gt;      Generate code coverage report in PHPUnit XML format.

Logging Options:

  --log-junit &lt;file&gt;        Log test execution in JUnit XML format to file.
  --log-tap &lt;file&gt;          Log test execution in TAP format to file.
  --log-json &lt;file&gt;         Log test execution in JSON format.
  --testdox-html &lt;file&gt;     Write agile documentation in HTML format to file.
  --testdox-text &lt;file&gt;     Write agile documentation in Text format to file.

Test Selection Options:

  --filter &lt;pattern&gt;        Filter which tests to run.
  --testsuite &lt;pattern&gt;     Filter which testsuite to run.
  --group ...               Only runs tests from the specified group(s).
  --exclude-group ...       Exclude tests from the specified group(s).
  --list-groups             List available test groups.
  --test-suffix ...         Only search for test in files with specified
                            suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --report-useless-tests    Be strict about tests that do not test anything.
  --strict-coverage         Be strict about unintentionally covered code.
  --strict-global-state     Be strict about changes to global state
  --disallow-test-output    Be strict about output during tests.
  --enforce-time-limit      Enforce time limit based on test size.
  --disallow-todo-tests     Disallow @todo-annotated tests.

  --process-isolation       Run each test in a separate PHP process.
  --no-globals-backup       Do not backup and restore $GLOBALS for each test.
  --static-backup           Backup and restore static attributes for each test.

  --colors=&lt;flag&gt;           Use colors in output ("never", "auto" or "always").
  --columns &lt;n&gt;             Number of columns to use for progress output.
  --columns max             Use maximum number of columns for progress output.
  --stderr                  Write to STDERR instead of STDOUT.
  --stop-on-error           Stop execution upon first error.
  --stop-on-failure         Stop execution upon first error or failure.
  --stop-on-risky           Stop execution upon first risky test.
  --stop-on-skipped         Stop execution upon first skipped test.
  --stop-on-incomplete      Stop execution upon first incomplete test.
  -v|--verbose              Output more verbose information.
  --debug                   Display debugging information during test execution.

  --loader &lt;loader&gt;         TestSuiteLoader implementation to use.
  --repeat &lt;times&gt;          Runs the test(s) repeatedly.
  --tap                     Report test execution progress in TAP format.
  --testdox                 Report test execution progress in TestDox format.
  --printer &lt;printer&gt;       TestListener implementation to use.

Configuration Options:

  --bootstrap &lt;file&gt;        A "bootstrap" PHP file that is run before the tests.
  -c|--configuration &lt;file&gt; Read configuration from XML file.
  --no-configuration        Ignore default configuration file (phpunit.xml).
  --include-path &lt;path(s)&gt;  Prepend PHP's include_path with given path(s).
  -d key[=value]            Sets a php.ini value.

Miscellaneous Options:

  -h|--help                 Prints this usage information.
  --version                 Prints the version and exits.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --printer PHPUnit_Extensions_Story_ResultPrinter_Text BowlingGameSpec&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

BowlingGameSpec
 [x] Score for gutter game is 0

   Given New game 
    Then Score should be 0

 [x] Score for all ones is 20

   Given New game 
    When Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
    Then Score should be 20

 [x] Score for one spare and 3 is 16

   Given New game 
    When Player rolls 5
     and Player rolls 5
     and Player rolls 3
    Then Score should be 16

 [x] Score for one strike and 3 and 4 is 24

   Given New game 
    When Player rolls 10
     and Player rolls 3
     and Player rolls 4
    Then Score should be 24

 [x] Score for perfect game is 300

   Given New game 
    When Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
    Then Score should be 300

Scenarios: 5, Failed: 0, Skipped: 0, Incomplete: 0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031945Z" creationid="Wynn" creationdate="20150330T031945Z">
        <seg>&lt;u0&gt;phpunit --printer PHPUnit_Extensions_Story_ResultPrinter_Text BowlingGameSpec&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

BowlingGameSpec
 [x] Score for gutter game is 0

   Given New game 
    Then Score should be 0

 [x] Score for all ones is 20

   Given New game 
    When Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
     and Player rolls 1
    Then Score should be 20

 [x] Score for one spare and 3 is 16

   Given New game 
    When Player rolls 5
     and Player rolls 5
     and Player rolls 3
    Then Score should be 16

 [x] Score for one strike and 3 and 4 is 24

   Given New game 
    When Player rolls 10
     and Player rolls 3
     and Player rolls 4
    Then Score should be 24

 [x] Score for perfect game is 300

   Given New game 
    When Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
     and Player rolls 10
    Then Score should be 300

Scenarios: 5, Failed: 0, Skipped: 0, Incomplete: 0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043046Z" creationid="Wynn" creationdate="20150330T043046Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061920Z" creationid="Wynn" creationdate="20150330T061920Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062838Z" creationid="Wynn" creationdate="20150330T062838Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063214Z" creationid="Wynn" creationdate="20150330T063214Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063406Z" creationid="Wynn" creationdate="20150330T063406Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063540Z" creationid="Wynn" creationdate="20150330T063540Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063711Z" creationid="Wynn" creationdate="20150330T063711Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063817Z" creationid="Wynn" creationdate="20150330T063817Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024351Z" creationid="Wynn" creationdate="20150327T024351Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085618Z" creationid="Wynn" creationdate="20150416T085618Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080225Z" creationid="Wynn" creationdate="20150706T080225Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085022Z" creationid="Wynn" creationdate="20150817T085022Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082650Z" creationid="Wynn" creationdate="20151020T082650Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030516Z" creationid="Wynn" creationdate="20151214T030516Z">
        <seg>&lt;u0&gt;phpunit --testdox BankAccountTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

BankAccount
 [x] Balance is initially zero
 [x] Balance cannot become negative</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.75Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041242Z" creationid="Wynn" creationdate="20150330T041242Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.75Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.85Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061500Z" creationid="Wynn" creationdate="20150330T061500Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.85Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062734Z" creationid="Wynn" creationdate="20150330T062734Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063123Z" creationid="Wynn" creationdate="20150330T063123Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063342Z" creationid="Wynn" creationdate="20150330T063342Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063515Z" creationid="Wynn" creationdate="20150330T063515Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063649Z" creationid="Wynn" creationdate="20150330T063649Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063812Z" creationid="Wynn" creationdate="20150330T063812Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092223Z" creationid="Wynn" creationdate="20150319T092223Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085606Z" creationid="Wynn" creationdate="20150416T085606Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080144Z" creationid="Wynn" creationdate="20150706T080144Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084822Z" creationid="Wynn" creationdate="20150817T084822Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082643Z" creationid="Wynn" creationdate="20151020T082643Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030504Z" creationid="Wynn" creationdate="20151214T030504Z">
        <seg>&lt;u0&gt;phpunit --verbose DatabaseTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

S

Time: 0 seconds, Memory: 3.95Mb

There was 1 skipped test:

1) DatabaseTest::testConnection
The MySQLi extension is not available.

/home/sb/DatabaseTest.php:9
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 0, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051011Z" creationid="Wynn" creationdate="20150330T051011Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062611Z" creationid="Wynn" creationdate="20150330T062611Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062954Z" creationid="Wynn" creationdate="20150330T062954Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063238Z" creationid="Wynn" creationdate="20150330T063238Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063427Z" creationid="Wynn" creationdate="20150330T063427Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063603Z" creationid="Wynn" creationdate="20150330T063603Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063731Z" creationid="Wynn" creationdate="20150330T063731Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063827Z" creationid="Wynn" creationdate="20150330T063827Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102417Z" creationid="Wynn" creationdate="20150327T102417Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085643Z" creationid="Wynn" creationdate="20150416T085643Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083541Z" creationid="Wynn" creationdate="20150706T083541Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090957Z" creationid="Wynn" creationdate="20150817T090957Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082707Z" creationid="Wynn" creationdate="20151020T082707Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030532Z" creationid="Wynn" creationdate="20151214T030532Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyAndDataProviderComboTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 3.50Mb

There was 1 failure:

1) DependencyAndDataProviderComboTest::testConsumer with data set #1 ('provider2')
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
Array (
-    0 =&gt; 'provider1'
+    0 =&gt; 'provider2'
1 =&gt; 'first'
2 =&gt; 'second'
)

/home/sb/DependencyAndDataProviderComboTest.php:31

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050918Z" creationid="Wynn" creationdate="20150330T050918Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062606Z" creationid="Wynn" creationdate="20150330T062606Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062948Z" creationid="Wynn" creationdate="20150330T062948Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063233Z" creationid="Wynn" creationdate="20150330T063233Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063423Z" creationid="Wynn" creationdate="20150330T063423Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063600Z" creationid="Wynn" creationdate="20150330T063600Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063728Z" creationid="Wynn" creationdate="20150330T063728Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063823Z" creationid="Wynn" creationdate="20150330T063823Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101912Z" creationid="Wynn" creationdate="20150327T101912Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085637Z" creationid="Wynn" creationdate="20150416T085637Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083534Z" creationid="Wynn" creationdate="20150706T083534Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090035Z" creationid="Wynn" creationdate="20150817T090035Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082655Z" creationid="Wynn" creationdate="20151020T082655Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030526Z" creationid="Wynn" creationdate="20151214T030526Z">
        <seg>&lt;u0&gt;phpunit --verbose DependencyFailureTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FS

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) DependencyFailureTest::testOne
Failed asserting that false is true.

/home/sb/DependencyFailureTest.php:6

There was 1 skipped test:

1) DependencyFailureTest::testTwo
This test depends on "DependencyFailureTest::testOne" to pass.


FAILURES!
Tests: 1, Assertions: 1, Failures: 1, Skipped: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050951Z" creationid="Wynn" creationdate="20150330T050951Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062607Z" creationid="Wynn" creationdate="20150330T062607Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062950Z" creationid="Wynn" creationdate="20150330T062950Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063235Z" creationid="Wynn" creationdate="20150330T063235Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063425Z" creationid="Wynn" creationdate="20150330T063425Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063601Z" creationid="Wynn" creationdate="20150330T063601Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063729Z" creationid="Wynn" creationdate="20150330T063729Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063824Z" creationid="Wynn" creationdate="20150330T063824Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102012Z" creationid="Wynn" creationdate="20150327T102012Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085639Z" creationid="Wynn" creationdate="20150416T085639Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083536Z" creationid="Wynn" creationdate="20150706T083536Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090039Z" creationid="Wynn" creationdate="20150817T090039Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082701Z" creationid="Wynn" creationdate="20151020T082701Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030527Z" creationid="Wynn" creationdate="20151214T030527Z">
        <seg>&lt;u0&gt;phpunit --verbose MultipleDependenciesTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...

Time: 0 seconds, Memory: 3.25Mb

OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.75Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041237Z" creationid="Wynn" creationdate="20150330T041237Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.75Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.85Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061500Z" creationid="Wynn" creationdate="20150330T061500Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.85Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062733Z" creationid="Wynn" creationdate="20150330T062733Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063123Z" creationid="Wynn" creationdate="20150330T063123Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063341Z" creationid="Wynn" creationdate="20150330T063341Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063515Z" creationid="Wynn" creationdate="20150330T063515Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063648Z" creationid="Wynn" creationdate="20150330T063648Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063811Z" creationid="Wynn" creationdate="20150330T063811Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091732Z" creationid="Wynn" creationdate="20150319T091732Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085604Z" creationid="Wynn" creationdate="20150416T085604Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080142Z" creationid="Wynn" creationdate="20150706T080142Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084821Z" creationid="Wynn" creationdate="20150817T084821Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082642Z" creationid="Wynn" creationdate="20151020T082642Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030502Z" creationid="Wynn" creationdate="20151214T030502Z">
        <seg>&lt;u0&gt;phpunit --verbose SampleTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

I

Time: 0 seconds, Memory: 3.95Mb

There was 1 incomplete test:

1) SampleTest::testSomething
This test has not been implemented yet.

/home/sb/SampleTest.php:12
OK, but incomplete or skipped tests!
Tests: 1, Assertions: 1, Incomplete: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051258Z" creationid="Wynn" creationdate="20150330T051258Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062619Z" creationid="Wynn" creationdate="20150330T062619Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062958Z" creationid="Wynn" creationdate="20150330T062958Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063242Z" creationid="Wynn" creationdate="20150330T063242Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063430Z" creationid="Wynn" creationdate="20150330T063430Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063606Z" creationid="Wynn" creationdate="20150330T063606Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063734Z" creationid="Wynn" creationdate="20150330T063734Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040812Z" creationid="Wynn" creationdate="20150330T040812Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024144Z" creationid="Wynn" creationdate="20150330T024144Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085647Z" creationid="Wynn" creationdate="20150416T085647Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083546Z" creationid="Wynn" creationdate="20150706T083546Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091004Z" creationid="Wynn" creationdate="20150817T091004Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082712Z" creationid="Wynn" creationdate="20151020T082712Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030535Z" creationid="Wynn" creationdate="20151214T030535Z">
        <seg>&lt;u0&gt;phpunit -d error_reporting=2 ExpectedErrorTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061205Z" creationid="Wynn" creationdate="20150330T061205Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062624Z" creationid="Wynn" creationdate="20150330T062624Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063002Z" creationid="Wynn" creationdate="20150330T063002Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063246Z" creationid="Wynn" creationdate="20150330T063246Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063433Z" creationid="Wynn" creationdate="20150330T063433Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063609Z" creationid="Wynn" creationdate="20150330T063609Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063735Z" creationid="Wynn" creationdate="20150330T063735Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040850Z" creationid="Wynn" creationdate="20150330T040850Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024949Z" creationid="Wynn" creationdate="20150330T024949Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085657Z" creationid="Wynn" creationdate="20150416T085657Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083551Z" creationid="Wynn" creationdate="20150706T083551Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091008Z" creationid="Wynn" creationdate="20150817T091008Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082717Z" creationid="Wynn" creationdate="20151020T082717Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030538Z" creationid="Wynn" creationdate="20151214T030538Z">
        <seg>&lt;u0&gt;phpunit ArrayDiffTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 1
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )

/home/sb/ArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051328Z" creationid="Wynn" creationdate="20150330T051328Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061232Z" creationid="Wynn" creationdate="20150330T061232Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062629Z" creationid="Wynn" creationdate="20150330T062629Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063032Z" creationid="Wynn" creationdate="20150330T063032Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063254Z" creationid="Wynn" creationdate="20150330T063254Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063435Z" creationid="Wynn" creationdate="20150330T063435Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) Epilog\EpilogTest::testNoFollowOption
Failed asserting that an array has the subset Array &amp;0 (
    'config' =&gt; Array &amp;1 (
        0 =&gt; 'key-a'
        1 =&gt; 'key-b'
    )
).

/home/sb/ArraySubsetTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075501Z" creationid="Wynn" creationdate="20150706T075501Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) Epilog\EpilogTest::testNoFollowOption
Failed asserting that an array has the subset Array &amp;0 (
    'config' =&gt; Array &amp;1 (
        0 =&gt; 'key-a'
        1 =&gt; 'key-b'
    )
).

/home/sb/ArraySubsetTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063612Z" creationid="Wynn" creationdate="20150330T063612Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063738Z" creationid="Wynn" creationdate="20150330T063738Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092802Z" creationid="Wynn" creationdate="20150309T092802Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084228Z" creationid="Wynn" creationdate="20150416T084228Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075652Z" creationid="Wynn" creationdate="20150706T075652Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082448Z" creationid="Wynn" creationdate="20150817T082448Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082528Z" creationid="Wynn" creationdate="20151020T082528Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030307Z" creationid="Wynn" creationdate="20151214T030307Z">
        <seg>&lt;u0&gt;phpunit ArrayHasKeyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050604Z" creationid="Wynn" creationdate="20150330T050604Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062548Z" creationid="Wynn" creationdate="20150330T062548Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062944Z" creationid="Wynn" creationdate="20150330T062944Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063230Z" creationid="Wynn" creationdate="20150330T063230Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063421Z" creationid="Wynn" creationdate="20150330T063421Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063557Z" creationid="Wynn" creationdate="20150330T063557Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063725Z" creationid="Wynn" creationdate="20150330T063725Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063821Z" creationid="Wynn" creationdate="20150330T063821Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092702Z" creationid="Wynn" creationdate="20150327T092702Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085626Z" creationid="Wynn" creationdate="20150416T085626Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080231Z" creationid="Wynn" creationdate="20150706T080231Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085851Z" creationid="Wynn" creationdate="20150817T085851Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082652Z" creationid="Wynn" creationdate="20151020T082652Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030518Z" creationid="Wynn" creationdate="20151214T030518Z">
        <seg>&lt;u0&gt;phpunit ArrayTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061208Z" creationid="Wynn" creationdate="20150330T061208Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062626Z" creationid="Wynn" creationdate="20150330T062626Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063004Z" creationid="Wynn" creationdate="20150330T063004Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063250Z" creationid="Wynn" creationdate="20150330T063250Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063434Z" creationid="Wynn" creationdate="20150330T063434Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063611Z" creationid="Wynn" creationdate="20150330T063611Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063737Z" creationid="Wynn" creationdate="20150330T063737Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040908Z" creationid="Wynn" creationdate="20150330T040908Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025059Z" creationid="Wynn" creationdate="20150330T025059Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085700Z" creationid="Wynn" creationdate="20150416T085700Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083553Z" creationid="Wynn" creationdate="20150706T083553Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091009Z" creationid="Wynn" creationdate="20150817T091009Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082719Z" creationid="Wynn" creationdate="20151020T082719Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030540Z" creationid="Wynn" creationdate="20151214T030540Z">
        <seg>&lt;u0&gt;phpunit ArrayWeakComparisonTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) ArrayWeakComparisonTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&gt; 1
+    0 =&gt; '1'
     1 =&gt; 2
-    2 =&gt; 3
+    2 =&gt; 33
     3 =&gt; 4
     4 =&gt; 5
     5 =&gt; 6
 )


/home/sb/ArrayWeakComparisonTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.
Fatal error: Call to undefined method BankAccount::withdrawMoney()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050230Z" creationid="Wynn" creationdate="20150330T050230Z">
        <seg>&lt;u0&gt;phpunit BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.
Fatal error: Call to undefined method BankAccount::withdrawMoney()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds


OK (3 tests, 3 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050412Z" creationid="Wynn" creationdate="20150330T050412Z">
        <seg>&lt;u0&gt;phpunit BankAccountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...

Time: 0 seconds


OK (3 tests, 3 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051332Z" creationid="Wynn" creationdate="20150330T051332Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061233Z" creationid="Wynn" creationdate="20150330T061233Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062629Z" creationid="Wynn" creationdate="20150330T062629Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063033Z" creationid="Wynn" creationdate="20150330T063033Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063258Z" creationid="Wynn" creationdate="20150330T063258Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063436Z" creationid="Wynn" creationdate="20150330T063436Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063613Z" creationid="Wynn" creationdate="20150330T063613Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063739Z" creationid="Wynn" creationdate="20150330T063739Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092808Z" creationid="Wynn" creationdate="20150309T092808Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084239Z" creationid="Wynn" creationdate="20150416T084239Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075655Z" creationid="Wynn" creationdate="20150706T075655Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082458Z" creationid="Wynn" creationdate="20150817T082458Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082531Z" creationid="Wynn" creationdate="20151020T082531Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030309Z" creationid="Wynn" creationdate="20151214T030309Z">
        <seg>&lt;u0&gt;phpunit ClassHasAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053409Z" creationid="Wynn" creationdate="20150330T053409Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061234Z" creationid="Wynn" creationdate="20150330T061234Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062631Z" creationid="Wynn" creationdate="20150330T062631Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063034Z" creationid="Wynn" creationdate="20150330T063034Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063258Z" creationid="Wynn" creationdate="20150330T063258Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063437Z" creationid="Wynn" creationdate="20150330T063437Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063613Z" creationid="Wynn" creationdate="20150330T063613Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063739Z" creationid="Wynn" creationdate="20150330T063739Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092814Z" creationid="Wynn" creationdate="20150309T092814Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084241Z" creationid="Wynn" creationdate="20150416T084241Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075657Z" creationid="Wynn" creationdate="20150706T075657Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082500Z" creationid="Wynn" creationdate="20150817T082500Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082534Z" creationid="Wynn" creationdate="20151020T082534Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030310Z" creationid="Wynn" creationdate="20151214T030310Z">
        <seg>&lt;u0&gt;phpunit ClassHasStaticAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053420Z" creationid="Wynn" creationdate="20150330T053420Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061239Z" creationid="Wynn" creationdate="20150330T061239Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062637Z" creationid="Wynn" creationdate="20150330T062637Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063039Z" creationid="Wynn" creationdate="20150330T063039Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063302Z" creationid="Wynn" creationdate="20150330T063302Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063442Z" creationid="Wynn" creationdate="20150330T063442Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063618Z" creationid="Wynn" creationdate="20150330T063618Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063743Z" creationid="Wynn" creationdate="20150330T063743Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092927Z" creationid="Wynn" creationdate="20150309T092927Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084253Z" creationid="Wynn" creationdate="20150416T084253Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075716Z" creationid="Wynn" creationdate="20150706T075716Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082510Z" creationid="Wynn" creationdate="20150817T082510Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082548Z" creationid="Wynn" creationdate="20151020T082548Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030319Z" creationid="Wynn" creationdate="20151214T030319Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyInstancesOfTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=&gt; Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053418Z" creationid="Wynn" creationdate="20150330T053418Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061238Z" creationid="Wynn" creationdate="20150330T061238Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062635Z" creationid="Wynn" creationdate="20150330T062635Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063038Z" creationid="Wynn" creationdate="20150330T063038Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063302Z" creationid="Wynn" creationdate="20150330T063302Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063441Z" creationid="Wynn" creationdate="20150330T063441Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063617Z" creationid="Wynn" creationdate="20150330T063617Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063742Z" creationid="Wynn" creationdate="20150330T063742Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092919Z" creationid="Wynn" creationdate="20150309T092919Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084251Z" creationid="Wynn" creationdate="20150416T084251Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075714Z" creationid="Wynn" creationdate="20150706T075714Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082507Z" creationid="Wynn" creationdate="20150817T082507Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082547Z" creationid="Wynn" creationdate="20151020T082547Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030318Z" creationid="Wynn" creationdate="20151214T030318Z">
        <seg>&lt;u0&gt;phpunit ContainsOnlyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 =&gt; '1'
    1 =&gt; '2'
    2 =&gt; 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053415Z" creationid="Wynn" creationdate="20150330T053415Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053413Z" creationid="Wynn" creationdate="20150330T053413Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053417Z" creationid="Wynn" creationdate="20150330T053417Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061236Z" creationid="Wynn" creationdate="20150330T061236Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061235Z" creationid="Wynn" creationdate="20150330T061235Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061237Z" creationid="Wynn" creationdate="20150330T061237Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062633Z" creationid="Wynn" creationdate="20150330T062633Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062632Z" creationid="Wynn" creationdate="20150330T062632Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062634Z" creationid="Wynn" creationdate="20150330T062634Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063036Z" creationid="Wynn" creationdate="20150330T063036Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063035Z" creationid="Wynn" creationdate="20150330T063035Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063037Z" creationid="Wynn" creationdate="20150330T063037Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063300Z" creationid="Wynn" creationdate="20150330T063300Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063259Z" creationid="Wynn" creationdate="20150330T063259Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063301Z" creationid="Wynn" creationdate="20150330T063301Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063438Z" creationid="Wynn" creationdate="20150330T063438Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063437Z" creationid="Wynn" creationdate="20150330T063437Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063440Z" creationid="Wynn" creationdate="20150330T063440Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063614Z" creationid="Wynn" creationdate="20150330T063614Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063614Z" creationid="Wynn" creationdate="20150330T063614Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063615Z" creationid="Wynn" creationdate="20150330T063615Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063741Z" creationid="Wynn" creationdate="20150330T063741Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063740Z" creationid="Wynn" creationdate="20150330T063740Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063741Z" creationid="Wynn" creationdate="20150330T063741Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092842Z" creationid="Wynn" creationdate="20150309T092842Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092830Z" creationid="Wynn" creationdate="20150309T092830Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092904Z" creationid="Wynn" creationdate="20150309T092904Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084248Z" creationid="Wynn" creationdate="20150416T084248Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084247Z" creationid="Wynn" creationdate="20150416T084247Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084250Z" creationid="Wynn" creationdate="20150416T084250Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075706Z" creationid="Wynn" creationdate="20150706T075706Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075700Z" creationid="Wynn" creationdate="20150706T075700Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075710Z" creationid="Wynn" creationdate="20150706T075710Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082502Z" creationid="Wynn" creationdate="20150817T082502Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082500Z" creationid="Wynn" creationdate="20150817T082500Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082505Z" creationid="Wynn" creationdate="20150817T082505Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082542Z" creationid="Wynn" creationdate="20151020T082542Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082541Z" creationid="Wynn" creationdate="20151020T082541Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082544Z" creationid="Wynn" creationdate="20151020T082544Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030315Z" creationid="Wynn" creationdate="20151214T030315Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030313Z" creationid="Wynn" creationdate="20151214T030313Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030316Z" creationid="Wynn" creationdate="20151214T030316Z">
        <seg>&lt;u0&gt;phpunit ContainsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053421Z" creationid="Wynn" creationdate="20150330T053421Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061240Z" creationid="Wynn" creationdate="20150330T061240Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062637Z" creationid="Wynn" creationdate="20150330T062637Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063040Z" creationid="Wynn" creationdate="20150330T063040Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063303Z" creationid="Wynn" creationdate="20150330T063303Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063442Z" creationid="Wynn" creationdate="20150330T063442Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063618Z" creationid="Wynn" creationdate="20150330T063618Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063744Z" creationid="Wynn" creationdate="20150330T063744Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092936Z" creationid="Wynn" creationdate="20150309T092936Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084258Z" creationid="Wynn" creationdate="20150416T084258Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075719Z" creationid="Wynn" creationdate="20150706T075719Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082511Z" creationid="Wynn" creationdate="20150817T082511Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082549Z" creationid="Wynn" creationdate="20151020T082549Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030321Z" creationid="Wynn" creationdate="20151214T030321Z">
        <seg>&lt;u0&gt;phpunit CountTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051007Z" creationid="Wynn" creationdate="20150330T051007Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051001Z" creationid="Wynn" creationdate="20150330T051001Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062609Z" creationid="Wynn" creationdate="20150330T062609Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062608Z" creationid="Wynn" creationdate="20150330T062608Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062952Z" creationid="Wynn" creationdate="20150330T062952Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062951Z" creationid="Wynn" creationdate="20150330T062951Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063236Z" creationid="Wynn" creationdate="20150330T063236Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063236Z" creationid="Wynn" creationdate="20150330T063236Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063426Z" creationid="Wynn" creationdate="20150330T063426Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063425Z" creationid="Wynn" creationdate="20150330T063425Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063603Z" creationid="Wynn" creationdate="20150330T063603Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063602Z" creationid="Wynn" creationdate="20150330T063602Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063730Z" creationid="Wynn" creationdate="20150330T063730Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063730Z" creationid="Wynn" creationdate="20150330T063730Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091050Z" creationid="Wynn" creationdate="20150817T091050Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063826Z" creationid="Wynn" creationdate="20150330T063826Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063825Z" creationid="Wynn" creationdate="20150330T063825Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091119Z" creationid="Wynn" creationdate="20150817T091119Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102214Z" creationid="Wynn" creationdate="20150327T102214Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102154Z" creationid="Wynn" creationdate="20150327T102154Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091130Z" creationid="Wynn" creationdate="20150817T091130Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085641Z" creationid="Wynn" creationdate="20150416T085641Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085641Z" creationid="Wynn" creationdate="20150416T085641Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091147Z" creationid="Wynn" creationdate="20150817T091147Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083539Z" creationid="Wynn" creationdate="20150706T083539Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083538Z" creationid="Wynn" creationdate="20150706T083538Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090953Z" creationid="Wynn" creationdate="20150817T090953Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090954Z" creationid="Wynn" creationdate="20150817T090954Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090043Z" creationid="Wynn" creationdate="20150817T090043Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082704Z" creationid="Wynn" creationdate="20151020T082704Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082706Z" creationid="Wynn" creationdate="20151020T082706Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082703Z" creationid="Wynn" creationdate="20151020T082703Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030530Z" creationid="Wynn" creationdate="20151214T030530Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set "one plus one" (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030531Z" creationid="Wynn" creationdate="20151214T030531Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 ('1', '1', '3')
Failed asserting that 2 matches expected '3'.

/home/sb/DataTest.php:11

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030528Z" creationid="Wynn" creationdate="20151214T030528Z">
        <seg>&lt;u0&gt;phpunit DataTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

...F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) DataTest::testAdd with data set #3 (1, 1, 3)
Failed asserting that 2 matches expected 3.

/home/sb/DataTest.php:9

FAILURES!
Tests: 4, Assertions: 4, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053423Z" creationid="Wynn" creationdate="20150330T053423Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061242Z" creationid="Wynn" creationdate="20150330T061242Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062639Z" creationid="Wynn" creationdate="20150330T062639Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063041Z" creationid="Wynn" creationdate="20150330T063041Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063306Z" creationid="Wynn" creationdate="20150330T063306Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063443Z" creationid="Wynn" creationdate="20150330T063443Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063619Z" creationid="Wynn" creationdate="20150330T063619Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063744Z" creationid="Wynn" creationdate="20150330T063744Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092944Z" creationid="Wynn" creationdate="20150309T092944Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084300Z" creationid="Wynn" creationdate="20150416T084300Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075720Z" creationid="Wynn" creationdate="20150706T075720Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082511Z" creationid="Wynn" creationdate="20150817T082511Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082550Z" creationid="Wynn" creationdate="20151020T082550Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030322Z" creationid="Wynn" creationdate="20151214T030322Z">
        <seg>&lt;u0&gt;phpunit EmptyTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053428Z" creationid="Wynn" creationdate="20150330T053428Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061243Z" creationid="Wynn" creationdate="20150330T061243Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062641Z" creationid="Wynn" creationdate="20150330T062641Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063043Z" creationid="Wynn" creationdate="20150330T063043Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063307Z" creationid="Wynn" creationdate="20150330T063307Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063443Z" creationid="Wynn" creationdate="20150330T063443Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063620Z" creationid="Wynn" creationdate="20150330T063620Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063745Z" creationid="Wynn" creationdate="20150330T063745Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093003Z" creationid="Wynn" creationdate="20150309T093003Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084304Z" creationid="Wynn" creationdate="20150416T084304Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075725Z" creationid="Wynn" creationdate="20150706T075725Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082523Z" creationid="Wynn" creationdate="20150817T082523Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082554Z" creationid="Wynn" creationdate="20151020T082554Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030324Z" creationid="Wynn" creationdate="20151214T030324Z">
        <seg>&lt;u0&gt;phpunit EqualXMLStructureTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053502Z" creationid="Wynn" creationdate="20150330T053502Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053506Z" creationid="Wynn" creationdate="20150330T053506Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053509Z" creationid="Wynn" creationdate="20150330T053509Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053507Z" creationid="Wynn" creationdate="20150330T053507Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053430Z" creationid="Wynn" creationdate="20150330T053430Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061245Z" creationid="Wynn" creationdate="20150330T061245Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061248Z" creationid="Wynn" creationdate="20150330T061248Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061251Z" creationid="Wynn" creationdate="20150330T061251Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061250Z" creationid="Wynn" creationdate="20150330T061250Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061244Z" creationid="Wynn" creationdate="20150330T061244Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062643Z" creationid="Wynn" creationdate="20150330T062643Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062644Z" creationid="Wynn" creationdate="20150330T062644Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062646Z" creationid="Wynn" creationdate="20150330T062646Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062645Z" creationid="Wynn" creationdate="20150330T062645Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062642Z" creationid="Wynn" creationdate="20150330T062642Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063045Z" creationid="Wynn" creationdate="20150330T063045Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063046Z" creationid="Wynn" creationdate="20150330T063046Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063049Z" creationid="Wynn" creationdate="20150330T063049Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063047Z" creationid="Wynn" creationdate="20150330T063047Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063043Z" creationid="Wynn" creationdate="20150330T063043Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063309Z" creationid="Wynn" creationdate="20150330T063309Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063310Z" creationid="Wynn" creationdate="20150330T063310Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063311Z" creationid="Wynn" creationdate="20150330T063311Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063310Z" creationid="Wynn" creationdate="20150330T063310Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063308Z" creationid="Wynn" creationdate="20150330T063308Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063445Z" creationid="Wynn" creationdate="20150330T063445Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063446Z" creationid="Wynn" creationdate="20150330T063446Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063447Z" creationid="Wynn" creationdate="20150330T063447Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063446Z" creationid="Wynn" creationdate="20150330T063446Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063444Z" creationid="Wynn" creationdate="20150330T063444Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063621Z" creationid="Wynn" creationdate="20150330T063621Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063622Z" creationid="Wynn" creationdate="20150330T063622Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063623Z" creationid="Wynn" creationdate="20150330T063623Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063622Z" creationid="Wynn" creationdate="20150330T063622Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063620Z" creationid="Wynn" creationdate="20150330T063620Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063746Z" creationid="Wynn" creationdate="20150330T063746Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063747Z" creationid="Wynn" creationdate="20150330T063747Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063749Z" creationid="Wynn" creationdate="20150330T063749Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063748Z" creationid="Wynn" creationdate="20150330T063748Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063745Z" creationid="Wynn" creationdate="20150330T063745Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093025Z" creationid="Wynn" creationdate="20150309T093025Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093030Z" creationid="Wynn" creationdate="20150309T093030Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093056Z" creationid="Wynn" creationdate="20150309T093056Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093045Z" creationid="Wynn" creationdate="20150309T093045Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093016Z" creationid="Wynn" creationdate="20150309T093016Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085529Z" creationid="Wynn" creationdate="20150416T085529Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085532Z" creationid="Wynn" creationdate="20150416T085532Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085534Z" creationid="Wynn" creationdate="20150416T085534Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085534Z" creationid="Wynn" creationdate="20150416T085534Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T040953Z" creationid="Wynn" creationdate="20151222T040953Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075730Z" creationid="Wynn" creationdate="20150706T075730Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075731Z" creationid="Wynn" creationdate="20150706T075731Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075742Z" creationid="Wynn" creationdate="20150706T075742Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075740Z" creationid="Wynn" creationdate="20150706T075740Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041210Z" creationid="Wynn" creationdate="20151222T041210Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082529Z" creationid="Wynn" creationdate="20150817T082529Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082531Z" creationid="Wynn" creationdate="20150817T082531Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082538Z" creationid="Wynn" creationdate="20150817T082538Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082537Z" creationid="Wynn" creationdate="20150817T082537Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041323Z" creationid="Wynn" creationdate="20151222T041323Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082557Z" creationid="Wynn" creationdate="20151020T082557Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082558Z" creationid="Wynn" creationdate="20151020T082558Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082600Z" creationid="Wynn" creationdate="20151020T082600Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082558Z" creationid="Wynn" creationdate="20151020T082558Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041437Z" creationid="Wynn" creationdate="20151222T041437Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

4) EqualsTest::testFailure4
Failed asserting that 0 matches expected ''.

/home/sb/EqualsTest.php:21

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030333Z" creationid="Wynn" creationdate="20151214T030333Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030335Z" creationid="Wynn" creationdate="20151214T030335Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
-&lt;foo&gt;
-  &lt;bar/&gt;
-&lt;/foo&gt;
+&lt;bar&gt;
+  &lt;foo/&gt;
+&lt;/bar&gt;

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030338Z" creationid="Wynn" creationdate="20151214T030338Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 =&gt; 'a'
-    1 =&gt; 'b'
-    2 =&gt; 'c'
+    1 =&gt; 'c'
+    2 =&gt; 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030336Z" creationid="Wynn" creationdate="20151214T030336Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' =&gt; 'foo'
-    'bar' =&gt; 'bar'
+    'foo' =&gt; 'bar'
+    'baz' =&gt; 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030327Z" creationid="Wynn" creationdate="20151214T030327Z">
        <seg>&lt;u0&gt;phpunit EqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051301Z" creationid="Wynn" creationdate="20150330T051301Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062622Z" creationid="Wynn" creationdate="20150330T062622Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063000Z" creationid="Wynn" creationdate="20150330T063000Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063243Z" creationid="Wynn" creationdate="20150330T063243Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063431Z" creationid="Wynn" creationdate="20150330T063431Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063608Z" creationid="Wynn" creationdate="20150330T063608Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063734Z" creationid="Wynn" creationdate="20150330T063734Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040818Z" creationid="Wynn" creationdate="20150330T040818Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024338Z" creationid="Wynn" creationdate="20150330T024338Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085654Z" creationid="Wynn" creationdate="20150416T085654Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083548Z" creationid="Wynn" creationdate="20150706T083548Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091005Z" creationid="Wynn" creationdate="20150817T091005Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082713Z" creationid="Wynn" creationdate="20151020T082713Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030536Z" creationid="Wynn" creationdate="20151214T030536Z">
        <seg>&lt;u0&gt;phpunit ErrorSuppressionTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.

Time: 1 seconds, Memory: 5.25Mb

OK (1 test, 1 assertion)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051013Z" creationid="Wynn" creationdate="20150330T051013Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051152Z" creationid="Wynn" creationdate="20150330T051152Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051253Z" creationid="Wynn" creationdate="20150330T051253Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062612Z" creationid="Wynn" creationdate="20150330T062612Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062615Z" creationid="Wynn" creationdate="20150330T062615Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062616Z" creationid="Wynn" creationdate="20150330T062616Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062955Z" creationid="Wynn" creationdate="20150330T062955Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062956Z" creationid="Wynn" creationdate="20150330T062956Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062957Z" creationid="Wynn" creationdate="20150330T062957Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063239Z" creationid="Wynn" creationdate="20150330T063239Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063240Z" creationid="Wynn" creationdate="20150330T063240Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FF

Time: 0 seconds, Memory: 3.00Mb

There were 2 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


2) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 2, Assertions: 4, Failures: 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063241Z" creationid="Wynn" creationdate="20150330T063241Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.


3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063428Z" creationid="Wynn" creationdate="20150330T063428Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063428Z" creationid="Wynn" creationdate="20150330T063428Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063429Z" creationid="Wynn" creationdate="20150330T063429Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063604Z" creationid="Wynn" creationdate="20150330T063604Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063605Z" creationid="Wynn" creationdate="20150330T063605Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063606Z" creationid="Wynn" creationdate="20150330T063606Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063732Z" creationid="Wynn" creationdate="20150330T063732Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063732Z" creationid="Wynn" creationdate="20150330T063732Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063733Z" creationid="Wynn" creationdate="20150330T063733Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063828Z" creationid="Wynn" creationdate="20150330T063828Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063828Z" creationid="Wynn" creationdate="20150330T063828Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063829Z" creationid="Wynn" creationdate="20150330T063829Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102821Z" creationid="Wynn" creationdate="20150327T102821Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102953Z" creationid="Wynn" creationdate="20150327T102953Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103115Z" creationid="Wynn" creationdate="20150327T103115Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085643Z" creationid="Wynn" creationdate="20150416T085643Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085644Z" creationid="Wynn" creationdate="20150416T085644Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085646Z" creationid="Wynn" creationdate="20150416T085646Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083543Z" creationid="Wynn" creationdate="20150706T083543Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083544Z" creationid="Wynn" creationdate="20150706T083544Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083544Z" creationid="Wynn" creationdate="20150706T083544Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090958Z" creationid="Wynn" creationdate="20150817T090958Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090959Z" creationid="Wynn" creationdate="20150817T090959Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 3.00Mb

There were 3 failures:

1) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

2) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'Some Message' matches '#Right.*#'.

3) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 3, Assertions: 6, Failures: 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091001Z" creationid="Wynn" creationdate="20150817T091001Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 3.00Mb

There were 4 failures:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

2) ExceptionTest::testExceptionHasRightMessage
Failed asserting that exception message 'Some Message' contains 'Right Message'.

3) ExceptionTest::testExceptionMessageMatchesRegExp
Failed asserting that exception message 'The Wrong Message' contains '/Right.*/'.

4) ExceptionTest::testExceptionHasRightCode
Failed asserting that expected exception code 20 is equal to 10.


FAILURES!
Tests: 4, Assertions: 8, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T042507Z" creationid="Wynn" creationdate="20160113T042507Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041355Z" creationid="Wynn" creationdate="20160113T041310Z">
        <seg>&lt;u0&gt;phpunit ExceptionTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ExceptionTest::testException
Expected exception InvalidArgumentException

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053510Z" creationid="Wynn" creationdate="20150330T053510Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061252Z" creationid="Wynn" creationdate="20150330T061252Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062647Z" creationid="Wynn" creationdate="20150330T062647Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063050Z" creationid="Wynn" creationdate="20150330T063050Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063312Z" creationid="Wynn" creationdate="20150330T063312Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063447Z" creationid="Wynn" creationdate="20150330T063447Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063624Z" creationid="Wynn" creationdate="20150330T063624Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063749Z" creationid="Wynn" creationdate="20150330T063749Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093105Z" creationid="Wynn" creationdate="20150309T093105Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085535Z" creationid="Wynn" creationdate="20150416T085535Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075743Z" creationid="Wynn" creationdate="20150706T075743Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082540Z" creationid="Wynn" creationdate="20150817T082540Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082601Z" creationid="Wynn" creationdate="20151020T082601Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030339Z" creationid="Wynn" creationdate="20151214T030339Z">
        <seg>&lt;u0&gt;phpunit FalseTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053512Z" creationid="Wynn" creationdate="20150330T053512Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061253Z" creationid="Wynn" creationdate="20150330T061253Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062648Z" creationid="Wynn" creationdate="20150330T062648Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063051Z" creationid="Wynn" creationdate="20150330T063051Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063312Z" creationid="Wynn" creationdate="20150330T063312Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063448Z" creationid="Wynn" creationdate="20150330T063448Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063624Z" creationid="Wynn" creationdate="20150330T063624Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063750Z" creationid="Wynn" creationdate="20150330T063750Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093109Z" creationid="Wynn" creationdate="20150309T093109Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085536Z" creationid="Wynn" creationdate="20150416T085536Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075746Z" creationid="Wynn" creationdate="20150706T075746Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082542Z" creationid="Wynn" creationdate="20150817T082542Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082602Z" creationid="Wynn" creationdate="20151020T082602Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030341Z" creationid="Wynn" creationdate="20151214T030341Z">
        <seg>&lt;u0&gt;phpunit FileEqualsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053514Z" creationid="Wynn" creationdate="20150330T053514Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061254Z" creationid="Wynn" creationdate="20150330T061254Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062650Z" creationid="Wynn" creationdate="20150330T062650Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063051Z" creationid="Wynn" creationdate="20150330T063051Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063313Z" creationid="Wynn" creationdate="20150330T063313Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063449Z" creationid="Wynn" creationdate="20150330T063449Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063625Z" creationid="Wynn" creationdate="20150330T063625Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063751Z" creationid="Wynn" creationdate="20150330T063751Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093117Z" creationid="Wynn" creationdate="20150309T093117Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085537Z" creationid="Wynn" creationdate="20150416T085537Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075750Z" creationid="Wynn" creationdate="20150706T075750Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082544Z" creationid="Wynn" creationdate="20150817T082544Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082604Z" creationid="Wynn" creationdate="20151020T082604Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030342Z" creationid="Wynn" creationdate="20151214T030342Z">
        <seg>&lt;u0&gt;phpunit FileExistsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053518Z" creationid="Wynn" creationdate="20150330T053518Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061256Z" creationid="Wynn" creationdate="20150330T061256Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062651Z" creationid="Wynn" creationdate="20150330T062651Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063053Z" creationid="Wynn" creationdate="20150330T063053Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063314Z" creationid="Wynn" creationdate="20150330T063314Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063450Z" creationid="Wynn" creationdate="20150330T063450Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063626Z" creationid="Wynn" creationdate="20150330T063626Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063752Z" creationid="Wynn" creationdate="20150330T063752Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093125Z" creationid="Wynn" creationdate="20150309T093125Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085538Z" creationid="Wynn" creationdate="20150416T085538Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075752Z" creationid="Wynn" creationdate="20150706T075752Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082546Z" creationid="Wynn" creationdate="20150817T082546Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082606Z" creationid="Wynn" creationdate="20151020T082606Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030345Z" creationid="Wynn" creationdate="20151214T030345Z">
        <seg>&lt;u0&gt;phpunit GreaterThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053516Z" creationid="Wynn" creationdate="20150330T053516Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061255Z" creationid="Wynn" creationdate="20150330T061255Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062650Z" creationid="Wynn" creationdate="20150330T062650Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063052Z" creationid="Wynn" creationdate="20150330T063052Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063313Z" creationid="Wynn" creationdate="20150330T063313Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063449Z" creationid="Wynn" creationdate="20150330T063449Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063626Z" creationid="Wynn" creationdate="20150330T063626Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063751Z" creationid="Wynn" creationdate="20150330T063751Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093121Z" creationid="Wynn" creationdate="20150309T093121Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085538Z" creationid="Wynn" creationdate="20150416T085538Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075751Z" creationid="Wynn" creationdate="20150706T075751Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082545Z" creationid="Wynn" creationdate="20150817T082545Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082605Z" creationid="Wynn" creationdate="20151020T082605Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030343Z" creationid="Wynn" creationdate="20151214T030343Z">
        <seg>&lt;u0&gt;phpunit GreaterThanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080008Z" creationid="Wynn" creationdate="20150706T080008Z">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082547Z" creationid="Wynn" creationdate="20150817T082547Z">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082607Z" creationid="Wynn" creationdate="20151020T082607Z">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030347Z" creationid="Wynn" creationdate="20151214T030347Z">
        <seg>&lt;u0&gt;phpunit InfiniteTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InfiniteTest::testFailure
Failed asserting that 1 is infinite.

/home/sb/InfiniteTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053521Z" creationid="Wynn" creationdate="20150330T053521Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061256Z" creationid="Wynn" creationdate="20150330T061256Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062652Z" creationid="Wynn" creationdate="20150330T062652Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063054Z" creationid="Wynn" creationdate="20150330T063054Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063315Z" creationid="Wynn" creationdate="20150330T063315Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063450Z" creationid="Wynn" creationdate="20150330T063450Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063627Z" creationid="Wynn" creationdate="20150330T063627Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063752Z" creationid="Wynn" creationdate="20150330T063752Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093130Z" creationid="Wynn" creationdate="20150309T093130Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085539Z" creationid="Wynn" creationdate="20150416T085539Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080009Z" creationid="Wynn" creationdate="20150706T080009Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082549Z" creationid="Wynn" creationdate="20150817T082549Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082608Z" creationid="Wynn" creationdate="20151020T082608Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030347Z" creationid="Wynn" creationdate="20151214T030347Z">
        <seg>&lt;u0&gt;phpunit InstanceOfTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053522Z" creationid="Wynn" creationdate="20150330T053522Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061257Z" creationid="Wynn" creationdate="20150330T061257Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062653Z" creationid="Wynn" creationdate="20150330T062653Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063054Z" creationid="Wynn" creationdate="20150330T063054Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063316Z" creationid="Wynn" creationdate="20150330T063316Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063451Z" creationid="Wynn" creationdate="20150330T063451Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063628Z" creationid="Wynn" creationdate="20150330T063628Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063753Z" creationid="Wynn" creationdate="20150330T063753Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093134Z" creationid="Wynn" creationdate="20150309T093134Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085540Z" creationid="Wynn" creationdate="20150416T085540Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080010Z" creationid="Wynn" creationdate="20150706T080010Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082554Z" creationid="Wynn" creationdate="20150817T082554Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082611Z" creationid="Wynn" creationdate="20151020T082611Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030349Z" creationid="Wynn" creationdate="20151214T030349Z">
        <seg>&lt;u0&gt;phpunit InternalTypeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053524Z" creationid="Wynn" creationdate="20150330T053524Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061258Z" creationid="Wynn" creationdate="20150330T061258Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062654Z" creationid="Wynn" creationdate="20150330T062654Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063055Z" creationid="Wynn" creationdate="20150330T063055Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063316Z" creationid="Wynn" creationdate="20150330T063316Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063451Z" creationid="Wynn" creationdate="20150330T063451Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063628Z" creationid="Wynn" creationdate="20150330T063628Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063754Z" creationid="Wynn" creationdate="20150330T063754Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093137Z" creationid="Wynn" creationdate="20150309T093137Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085541Z" creationid="Wynn" creationdate="20150416T085541Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080011Z" creationid="Wynn" creationdate="20150706T080011Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082556Z" creationid="Wynn" creationdate="20150817T082556Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082611Z" creationid="Wynn" creationdate="20151020T082611Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030349Z" creationid="Wynn" creationdate="20151214T030349Z">
        <seg>&lt;u0&gt;phpunit JsonFileEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053526Z" creationid="Wynn" creationdate="20150330T053526Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061259Z" creationid="Wynn" creationdate="20150330T061259Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062655Z" creationid="Wynn" creationdate="20150330T062655Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063056Z" creationid="Wynn" creationdate="20150330T063056Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063317Z" creationid="Wynn" creationdate="20150330T063317Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063452Z" creationid="Wynn" creationdate="20150330T063452Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063629Z" creationid="Wynn" creationdate="20150330T063629Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063754Z" creationid="Wynn" creationdate="20150330T063754Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093142Z" creationid="Wynn" creationdate="20150309T093142Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085542Z" creationid="Wynn" creationdate="20150416T085542Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080011Z" creationid="Wynn" creationdate="20150706T080011Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082557Z" creationid="Wynn" creationdate="20150817T082557Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082612Z" creationid="Wynn" creationdate="20151020T082612Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030350Z" creationid="Wynn" creationdate="20151214T030350Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053527Z" creationid="Wynn" creationdate="20150330T053527Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061300Z" creationid="Wynn" creationdate="20150330T061300Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062657Z" creationid="Wynn" creationdate="20150330T062657Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063057Z" creationid="Wynn" creationdate="20150330T063057Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063318Z" creationid="Wynn" creationdate="20150330T063318Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063453Z" creationid="Wynn" creationdate="20150330T063453Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063630Z" creationid="Wynn" creationdate="20150330T063630Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063755Z" creationid="Wynn" creationdate="20150330T063755Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093145Z" creationid="Wynn" creationdate="20150309T093145Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085543Z" creationid="Wynn" creationdate="20150416T085543Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080012Z" creationid="Wynn" creationdate="20150706T080012Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082559Z" creationid="Wynn" creationdate="20150817T082559Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082613Z" creationid="Wynn" creationdate="20151020T082613Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030351Z" creationid="Wynn" creationdate="20151214T030351Z">
        <seg>&lt;u0&gt;phpunit JsonStringEqualsJsonStringTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' =&gt; 'Tux'
 +    'Mascott' =&gt; 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053530Z" creationid="Wynn" creationdate="20150330T053530Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061302Z" creationid="Wynn" creationdate="20150330T061302Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062658Z" creationid="Wynn" creationdate="20150330T062658Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063058Z" creationid="Wynn" creationdate="20150330T063058Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063319Z" creationid="Wynn" creationdate="20150330T063319Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063454Z" creationid="Wynn" creationdate="20150330T063454Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063631Z" creationid="Wynn" creationdate="20150330T063631Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063756Z" creationid="Wynn" creationdate="20150330T063756Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093153Z" creationid="Wynn" creationdate="20150309T093153Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085545Z" creationid="Wynn" creationdate="20150416T085545Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080014Z" creationid="Wynn" creationdate="20150706T080014Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082601Z" creationid="Wynn" creationdate="20150817T082601Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082614Z" creationid="Wynn" creationdate="20151020T082614Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030355Z" creationid="Wynn" creationdate="20151214T030355Z">
        <seg>&lt;u0&gt;phpunit LessThanOrEqualTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053529Z" creationid="Wynn" creationdate="20150330T053529Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061301Z" creationid="Wynn" creationdate="20150330T061301Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062658Z" creationid="Wynn" creationdate="20150330T062658Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063058Z" creationid="Wynn" creationdate="20150330T063058Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063319Z" creationid="Wynn" creationdate="20150330T063319Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063453Z" creationid="Wynn" creationdate="20150330T063453Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063630Z" creationid="Wynn" creationdate="20150330T063630Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063755Z" creationid="Wynn" creationdate="20150330T063755Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093150Z" creationid="Wynn" creationdate="20150309T093150Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085544Z" creationid="Wynn" creationdate="20150416T085544Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080013Z" creationid="Wynn" creationdate="20150706T080013Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082600Z" creationid="Wynn" creationdate="20150817T082600Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082613Z" creationid="Wynn" creationdate="20151020T082613Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030352Z" creationid="Wynn" creationdate="20151214T030352Z">
        <seg>&lt;u0&gt;phpunit LessThanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061207Z" creationid="Wynn" creationdate="20150330T061207Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 3.6.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062625Z" creationid="Wynn" creationdate="20150330T062625Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063003Z" creationid="Wynn" creationdate="20150330T063003Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063249Z" creationid="Wynn" creationdate="20150330T063249Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063433Z" creationid="Wynn" creationdate="20150330T063433Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063610Z" creationid="Wynn" creationdate="20150330T063610Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063736Z" creationid="Wynn" creationdate="20150330T063736Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040858Z" creationid="Wynn" creationdate="20150330T040858Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025022Z" creationid="Wynn" creationdate="20150330T025022Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085659Z" creationid="Wynn" creationdate="20150416T085659Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083552Z" creationid="Wynn" creationdate="20150706T083552Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091008Z" creationid="Wynn" creationdate="20150817T091008Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082717Z" creationid="Wynn" creationdate="20151020T082717Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030539Z" creationid="Wynn" creationdate="20151214T030539Z">
        <seg>&lt;u0&gt;phpunit LongArrayDiffTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LongArrayDiffTest::testEquality
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
     13 =&gt; 2
-    14 =&gt; 3
+    14 =&gt; 33
     15 =&gt; 4
     16 =&gt; 5
     17 =&gt; 6
 )


/home/sb/LongArrayDiffTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080050Z" creationid="Wynn" creationdate="20150706T080050Z">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082601Z" creationid="Wynn" creationdate="20150817T082601Z">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082614Z" creationid="Wynn" creationdate="20151020T082614Z">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030356Z" creationid="Wynn" creationdate="20151214T030356Z">
        <seg>&lt;u0&gt;phpunit NanTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NanTest::testFailure
Failed asserting that 1 is nan.

/home/sb/NanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053530Z" creationid="Wynn" creationdate="20150330T053530Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061303Z" creationid="Wynn" creationdate="20150330T061303Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062659Z" creationid="Wynn" creationdate="20150330T062659Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063059Z" creationid="Wynn" creationdate="20150330T063059Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063320Z" creationid="Wynn" creationdate="20150330T063320Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063454Z" creationid="Wynn" creationdate="20150330T063454Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063632Z" creationid="Wynn" creationdate="20150330T063632Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063757Z" creationid="Wynn" creationdate="20150330T063757Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093156Z" creationid="Wynn" creationdate="20150309T093156Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085546Z" creationid="Wynn" creationdate="20150416T085546Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080100Z" creationid="Wynn" creationdate="20150706T080100Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082601Z" creationid="Wynn" creationdate="20150817T082601Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082615Z" creationid="Wynn" creationdate="20151020T082615Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030357Z" creationid="Wynn" creationdate="20151214T030357Z">
        <seg>&lt;u0&gt;phpunit NotNullTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053531Z" creationid="Wynn" creationdate="20150330T053531Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061303Z" creationid="Wynn" creationdate="20150330T061303Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062700Z" creationid="Wynn" creationdate="20150330T062700Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063100Z" creationid="Wynn" creationdate="20150330T063100Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063321Z" creationid="Wynn" creationdate="20150330T063321Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063455Z" creationid="Wynn" creationdate="20150330T063455Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063632Z" creationid="Wynn" creationdate="20150330T063632Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063757Z" creationid="Wynn" creationdate="20150330T063757Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093158Z" creationid="Wynn" creationdate="20150309T093158Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085546Z" creationid="Wynn" creationdate="20150416T085546Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080123Z" creationid="Wynn" creationdate="20150706T080123Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082602Z" creationid="Wynn" creationdate="20150817T082602Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082615Z" creationid="Wynn" creationdate="20151020T082615Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030359Z" creationid="Wynn" creationdate="20151214T030359Z">
        <seg>&lt;u0&gt;phpunit ObjectHasAttributeTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051303Z" creationid="Wynn" creationdate="20150330T051303Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062623Z" creationid="Wynn" creationdate="20150330T062623Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063001Z" creationid="Wynn" creationdate="20150330T063001Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063245Z" creationid="Wynn" creationdate="20150330T063245Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063432Z" creationid="Wynn" creationdate="20150330T063432Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063608Z" creationid="Wynn" creationdate="20150330T063608Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063735Z" creationid="Wynn" creationdate="20150330T063735Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040830Z" creationid="Wynn" creationdate="20150330T040830Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024645Z" creationid="Wynn" creationdate="20150330T024645Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085656Z" creationid="Wynn" creationdate="20150416T085656Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083550Z" creationid="Wynn" creationdate="20150706T083550Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091007Z" creationid="Wynn" creationdate="20150817T091007Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082715Z" creationid="Wynn" creationdate="20151020T082715Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030537Z" creationid="Wynn" creationdate="20151214T030537Z">
        <seg>&lt;u0&gt;phpunit OutputTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) OutputTest::testExpectBarActualBaz
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'


FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053532Z" creationid="Wynn" creationdate="20150330T053532Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061305Z" creationid="Wynn" creationdate="20150330T061305Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062701Z" creationid="Wynn" creationdate="20150330T062701Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063100Z" creationid="Wynn" creationdate="20150330T063100Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063321Z" creationid="Wynn" creationdate="20150330T063321Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063456Z" creationid="Wynn" creationdate="20150330T063456Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063633Z" creationid="Wynn" creationdate="20150330T063633Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063758Z" creationid="Wynn" creationdate="20150330T063758Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093200Z" creationid="Wynn" creationdate="20150309T093200Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085547Z" creationid="Wynn" creationdate="20150416T085547Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080125Z" creationid="Wynn" creationdate="20150706T080125Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082602Z" creationid="Wynn" creationdate="20150817T082602Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082616Z" creationid="Wynn" creationdate="20151020T082616Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030359Z" creationid="Wynn" creationdate="20151214T030359Z">
        <seg>&lt;u0&gt;phpunit RegExpTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053536Z" creationid="Wynn" creationdate="20150330T053536Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053535Z" creationid="Wynn" creationdate="20150330T053535Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061309Z" creationid="Wynn" creationdate="20150330T061309Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061308Z" creationid="Wynn" creationdate="20150330T061308Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062705Z" creationid="Wynn" creationdate="20150330T062705Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062704Z" creationid="Wynn" creationdate="20150330T062704Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063104Z" creationid="Wynn" creationdate="20150330T063104Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063103Z" creationid="Wynn" creationdate="20150330T063103Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063325Z" creationid="Wynn" creationdate="20150330T063325Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063324Z" creationid="Wynn" creationdate="20150330T063324Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063458Z" creationid="Wynn" creationdate="20150330T063458Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063457Z" creationid="Wynn" creationdate="20150330T063457Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063635Z" creationid="Wynn" creationdate="20150330T063635Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063634Z" creationid="Wynn" creationdate="20150330T063634Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063802Z" creationid="Wynn" creationdate="20150330T063802Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063801Z" creationid="Wynn" creationdate="20150330T063801Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093221Z" creationid="Wynn" creationdate="20150309T093221Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093216Z" creationid="Wynn" creationdate="20150309T093216Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085551Z" creationid="Wynn" creationdate="20150416T085551Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085550Z" creationid="Wynn" creationdate="20150416T085550Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080127Z" creationid="Wynn" creationdate="20150706T080127Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080127Z" creationid="Wynn" creationdate="20150706T080127Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082610Z" creationid="Wynn" creationdate="20150817T082610Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082609Z" creationid="Wynn" creationdate="20150817T082609Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082618Z" creationid="Wynn" creationdate="20151020T082618Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082618Z" creationid="Wynn" creationdate="20151020T082618Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030403Z" creationid="Wynn" creationdate="20151214T030403Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030403Z" creationid="Wynn" creationdate="20151214T030403Z">
        <seg>&lt;u0&gt;phpunit SameTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053944Z" creationid="Wynn" creationdate="20150330T053944Z">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061310Z" creationid="Wynn" creationdate="20150330T061310Z">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062706Z" creationid="Wynn" creationdate="20150330T062706Z">
        <seg>&lt;u0&gt;phpunit SelectCountTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectCountTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectCountTest.php:12

2) SelectCountTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:17

3) SelectCountTest::testExactCountFailure
Failed asserting that 3 matches expected 5.

/home/sb/SelectCountTest.php:22

4) SelectCountTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectCountTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054150Z" creationid="Wynn" creationdate="20150330T054150Z">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061311Z" creationid="Wynn" creationdate="20150330T061311Z">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062707Z" creationid="Wynn" creationdate="20150330T062707Z">
        <seg>&lt;u0&gt;phpunit SelectEqualsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectEqualsTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectEqualsTest.php:12

2) SelectEqualsTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:17

3) SelectEqualsTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectEqualsTest.php:22

4) SelectEqualsTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectEqualsTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054248Z" creationid="Wynn" creationdate="20150330T054248Z">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061312Z" creationid="Wynn" creationdate="20150330T061312Z">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062707Z" creationid="Wynn" creationdate="20150330T062707Z">
        <seg>&lt;u0&gt;phpunit SelectRegExpTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

FFFF

Time: 0 seconds, Memory: 5.50Mb

There were 4 failures:

1) SelectRegExpTest::testAbsenceFailure
Failed asserting that true is false.

/home/sb/SelectRegExpTest.php:12

2) SelectRegExpTest::testPresenceFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:17

3) SelectRegExpTest::testExactCountFailure
Failed asserting that 2 matches expected 5.

/home/sb/SelectRegExpTest.php:22

4) SelectRegExpTest::testRangeFailure
Failed asserting that false is true.

/home/sb/SelectRegExpTest.php:27

FAILURES!
Tests: 4, Assertions: 4, Failures: 4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054249Z" creationid="Wynn" creationdate="20150330T054249Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061313Z" creationid="Wynn" creationdate="20150330T061313Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062708Z" creationid="Wynn" creationdate="20150330T062708Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063104Z" creationid="Wynn" creationdate="20150330T063104Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063325Z" creationid="Wynn" creationdate="20150330T063325Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063458Z" creationid="Wynn" creationdate="20150330T063458Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063636Z" creationid="Wynn" creationdate="20150330T063636Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063803Z" creationid="Wynn" creationdate="20150330T063803Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093226Z" creationid="Wynn" creationdate="20150309T093226Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085552Z" creationid="Wynn" creationdate="20150416T085552Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080129Z" creationid="Wynn" creationdate="20150706T080129Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082615Z" creationid="Wynn" creationdate="20150817T082615Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082619Z" creationid="Wynn" creationdate="20151020T082619Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030404Z" creationid="Wynn" creationdate="20151214T030404Z">
        <seg>&lt;u0&gt;phpunit StringEndsWithTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054250Z" creationid="Wynn" creationdate="20150330T054250Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061313Z" creationid="Wynn" creationdate="20150330T061313Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062709Z" creationid="Wynn" creationdate="20150330T062709Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063106Z" creationid="Wynn" creationdate="20150330T063106Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063326Z" creationid="Wynn" creationdate="20150330T063326Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063459Z" creationid="Wynn" creationdate="20150330T063459Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063636Z" creationid="Wynn" creationdate="20150330T063636Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063803Z" creationid="Wynn" creationdate="20150330T063803Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093230Z" creationid="Wynn" creationdate="20150309T093230Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085553Z" creationid="Wynn" creationdate="20150416T085553Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080130Z" creationid="Wynn" creationdate="20150706T080130Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082616Z" creationid="Wynn" creationdate="20150817T082616Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082620Z" creationid="Wynn" creationdate="20151020T082620Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030405Z" creationid="Wynn" creationdate="20151214T030405Z">
        <seg>&lt;u0&gt;phpunit StringEqualsFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053534Z" creationid="Wynn" creationdate="20150330T053534Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061307Z" creationid="Wynn" creationdate="20150330T061307Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062703Z" creationid="Wynn" creationdate="20150330T062703Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063102Z" creationid="Wynn" creationdate="20150330T063102Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063323Z" creationid="Wynn" creationdate="20150330T063323Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063457Z" creationid="Wynn" creationdate="20150330T063457Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063634Z" creationid="Wynn" creationdate="20150330T063634Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063759Z" creationid="Wynn" creationdate="20150330T063759Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093209Z" creationid="Wynn" creationdate="20150309T093209Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085549Z" creationid="Wynn" creationdate="20150416T085549Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080126Z" creationid="Wynn" creationdate="20150706T080126Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082604Z" creationid="Wynn" creationdate="20150817T082604Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082617Z" creationid="Wynn" creationdate="20151020T082617Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030402Z" creationid="Wynn" creationdate="20151214T030402Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053533Z" creationid="Wynn" creationdate="20150330T053533Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061306Z" creationid="Wynn" creationdate="20150330T061306Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062702Z" creationid="Wynn" creationdate="20150330T062702Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063101Z" creationid="Wynn" creationdate="20150330T063101Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063322Z" creationid="Wynn" creationdate="20150330T063322Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063456Z" creationid="Wynn" creationdate="20150330T063456Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063633Z" creationid="Wynn" creationdate="20150330T063633Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063759Z" creationid="Wynn" creationdate="20150330T063759Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093202Z" creationid="Wynn" creationdate="20150309T093202Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085548Z" creationid="Wynn" creationdate="20150416T085548Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080125Z" creationid="Wynn" creationdate="20150706T080125Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082603Z" creationid="Wynn" creationdate="20150817T082603Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082616Z" creationid="Wynn" creationdate="20151020T082616Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030401Z" creationid="Wynn" creationdate="20151214T030401Z">
        <seg>&lt;u0&gt;phpunit StringMatchesFormatTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054252Z" creationid="Wynn" creationdate="20150330T054252Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061314Z" creationid="Wynn" creationdate="20150330T061314Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062709Z" creationid="Wynn" creationdate="20150330T062709Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063106Z" creationid="Wynn" creationdate="20150330T063106Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063327Z" creationid="Wynn" creationdate="20150330T063327Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063500Z" creationid="Wynn" creationdate="20150330T063500Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063637Z" creationid="Wynn" creationdate="20150330T063637Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063804Z" creationid="Wynn" creationdate="20150330T063804Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093235Z" creationid="Wynn" creationdate="20150309T093235Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085554Z" creationid="Wynn" creationdate="20150416T085554Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080132Z" creationid="Wynn" creationdate="20150706T080132Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082617Z" creationid="Wynn" creationdate="20150817T082617Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082620Z" creationid="Wynn" creationdate="20151020T082620Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030406Z" creationid="Wynn" creationdate="20151214T030406Z">
        <seg>&lt;u0&gt;phpunit StringStartsWithTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040327Z" creationid="Wynn" creationdate="20150330T040327Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061457Z" creationid="Wynn" creationdate="20150330T061457Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062732Z" creationid="Wynn" creationdate="20150330T062732Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063121Z" creationid="Wynn" creationdate="20150330T063121Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063340Z" creationid="Wynn" creationdate="20150330T063340Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063511Z" creationid="Wynn" creationdate="20150330T063511Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063646Z" creationid="Wynn" creationdate="20150330T063646Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063809Z" creationid="Wynn" creationdate="20150330T063809Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081304Z" creationid="Wynn" creationdate="20150319T081304Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085601Z" creationid="Wynn" creationdate="20150416T085601Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080140Z" creationid="Wynn" creationdate="20150706T080140Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084820Z" creationid="Wynn" creationdate="20150817T084820Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082641Z" creationid="Wynn" creationdate="20151020T082641Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030500Z" creationid="Wynn" creationdate="20151214T030500Z">
        <seg>&lt;u0&gt;phpunit TemplateMethodsTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

TemplateMethodsTest::setUpBeforeClass
TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testOne
TemplateMethodsTest::assertPostConditions
TemplateMethodsTest::tearDown
.TemplateMethodsTest::setUp
TemplateMethodsTest::assertPreConditions
TemplateMethodsTest::testTwo
TemplateMethodsTest::tearDown
TemplateMethodsTest::onNotSuccessfulTest
FTemplateMethodsTest::tearDownAfterClass


Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) TemplateMethodsTest::testTwo
Failed asserting that &lt;boolean:false&gt; is true.
/home/sb/TemplateMethodsTest.php:30

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T055043Z" creationid="Wynn" creationdate="20150330T055043Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061315Z" creationid="Wynn" creationdate="20150330T061315Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062710Z" creationid="Wynn" creationdate="20150330T062710Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063107Z" creationid="Wynn" creationdate="20150330T063107Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063328Z" creationid="Wynn" creationdate="20150330T063328Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063500Z" creationid="Wynn" creationdate="20150330T063500Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063637Z" creationid="Wynn" creationdate="20150330T063637Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063805Z" creationid="Wynn" creationdate="20150330T063805Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093323Z" creationid="Wynn" creationdate="20150309T093323Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085555Z" creationid="Wynn" creationdate="20150416T085555Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080134Z" creationid="Wynn" creationdate="20150706T080134Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082617Z" creationid="Wynn" creationdate="20150817T082617Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082621Z" creationid="Wynn" creationdate="20151020T082621Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030408Z" creationid="Wynn" creationdate="20151214T030408Z">
        <seg>&lt;u0&gt;phpunit TrueTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.6.10 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043052Z" creationid="Wynn" creationdate="20150330T043052Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.6.10 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043102Z" creationid="Wynn" creationdate="20150330T043102Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043058Z" creationid="Wynn" creationdate="20150330T043058Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061921Z" creationid="Wynn" creationdate="20150330T061921Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061925Z" creationid="Wynn" creationdate="20150330T061925Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061923Z" creationid="Wynn" creationdate="20150330T061923Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062839Z" creationid="Wynn" creationdate="20150330T062839Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062841Z" creationid="Wynn" creationdate="20150330T062841Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062840Z" creationid="Wynn" creationdate="20150330T062840Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063216Z" creationid="Wynn" creationdate="20150330T063216Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063217Z" creationid="Wynn" creationdate="20150330T063217Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063217Z" creationid="Wynn" creationdate="20150330T063217Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063407Z" creationid="Wynn" creationdate="20150330T063407Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063408Z" creationid="Wynn" creationdate="20150330T063408Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063408Z" creationid="Wynn" creationdate="20150330T063408Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063541Z" creationid="Wynn" creationdate="20150330T063541Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063542Z" creationid="Wynn" creationdate="20150330T063542Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063542Z" creationid="Wynn" creationdate="20150330T063542Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063711Z" creationid="Wynn" creationdate="20150330T063711Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063713Z" creationid="Wynn" creationdate="20150330T063713Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063712Z" creationid="Wynn" creationdate="20150330T063712Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063818Z" creationid="Wynn" creationdate="20150330T063818Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063819Z" creationid="Wynn" creationdate="20150330T063819Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063819Z" creationid="Wynn" creationdate="20150330T063819Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063008Z" creationid="Wynn" creationdate="20150327T063008Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064008Z" creationid="Wynn" creationdate="20150327T064008Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063431Z" creationid="Wynn" creationdate="20150327T063431Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085621Z" creationid="Wynn" creationdate="20150416T085621Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085624Z" creationid="Wynn" creationdate="20150416T085624Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085623Z" creationid="Wynn" creationdate="20150416T085623Z">
        <seg>&lt;u0&gt;phpunit WebTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".


FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T055047Z" creationid="Wynn" creationdate="20150330T055047Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061316Z" creationid="Wynn" creationdate="20150330T061316Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062711Z" creationid="Wynn" creationdate="20150330T062711Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063108Z" creationid="Wynn" creationdate="20150330T063108Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063329Z" creationid="Wynn" creationdate="20150330T063329Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063501Z" creationid="Wynn" creationdate="20150330T063501Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063638Z" creationid="Wynn" creationdate="20150330T063638Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063805Z" creationid="Wynn" creationdate="20150330T063805Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093326Z" creationid="Wynn" creationdate="20150309T093326Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085556Z" creationid="Wynn" creationdate="20150416T085556Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080134Z" creationid="Wynn" creationdate="20150706T080134Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082618Z" creationid="Wynn" creationdate="20150817T082618Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082622Z" creationid="Wynn" creationdate="20151020T082622Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030409Z" creationid="Wynn" creationdate="20151214T030409Z">
        <seg>&lt;u0&gt;phpunit XmlFileEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061203Z" creationid="Wynn" creationdate="20150330T061203Z">
        <seg> ， &lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061317Z" creationid="Wynn" creationdate="20150330T061317Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062712Z" creationid="Wynn" creationdate="20150330T062712Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063108Z" creationid="Wynn" creationdate="20150330T063108Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063329Z" creationid="Wynn" creationdate="20150330T063329Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063502Z" creationid="Wynn" creationdate="20150330T063502Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063639Z" creationid="Wynn" creationdate="20150330T063639Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063806Z" creationid="Wynn" creationdate="20150330T063806Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093330Z" creationid="Wynn" creationdate="20150309T093330Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085557Z" creationid="Wynn" creationdate="20150416T085557Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080135Z" creationid="Wynn" creationdate="20150706T080135Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082619Z" creationid="Wynn" creationdate="20150817T082619Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082623Z" creationid="Wynn" creationdate="20151020T082623Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030410Z" creationid="Wynn" creationdate="20151214T030410Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlFileTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061204Z" creationid="Wynn" creationdate="20150330T061204Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061318Z" creationid="Wynn" creationdate="20150330T061318Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.0.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062713Z" creationid="Wynn" creationdate="20150330T062713Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.1.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063109Z" creationid="Wynn" creationdate="20150330T063109Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.2.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063331Z" creationid="Wynn" creationdate="20150330T063331Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.3.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063503Z" creationid="Wynn" creationdate="20150330T063503Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063639Z" creationid="Wynn" creationdate="20150330T063639Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063807Z" creationid="Wynn" creationdate="20150330T063807Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093333Z" creationid="Wynn" creationdate="20150309T093333Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085558Z" creationid="Wynn" creationdate="20150416T085558Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080135Z" creationid="Wynn" creationdate="20150706T080135Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082619Z" creationid="Wynn" creationdate="20150817T082619Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082624Z" creationid="Wynn" creationdate="20151020T082624Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030411Z" creationid="Wynn" creationdate="20151214T030411Z">
        <seg>&lt;u0&gt;phpunit XmlStringEqualsXmlStringTest&lt;/u0&gt;
PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 &lt;?xml version="1.0"?&gt;
 &lt;foo&gt;
-  &lt;bar/&gt;
+  &lt;baz/&gt;
 &lt;/foo&gt;

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit tests/CurrencyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

........

Time: 0 seconds

OK (8 tests, 8 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042719Z" creationid="Wynn" creationdate="20150330T042719Z">
        <seg>&lt;u0&gt;phpunit tests/CurrencyTest&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

........

Time: 0 seconds

OK (8 tests, 8 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit tests&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.................................

Time: 0 seconds

OK (33 tests, 52 assertions)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042715Z" creationid="Wynn" creationdate="20150330T042715Z">
        <seg>&lt;u0&gt;phpunit tests&lt;/u0&gt;
PHPUnit 3.7.0 by Sebastian Bergmann.

.................................

Time: 0 seconds

OK (33 tests, 52 assertions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit-skelgen --class BowlingGameTest&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "BowlingGame" to "./BowlingGame.php".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043721Z" creationid="Wynn" creationdate="20150330T043721Z">
        <seg>&lt;u0&gt;phpunit-skelgen --class BowlingGameTest&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "BowlingGame" to "./BowlingGame.php".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit-skelgen --test -- "project\Calculator" Calculator.php&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "project\CalculatorTest" to "/home/sb/CalculatorTest.php".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043233Z" creationid="Wynn" creationdate="20150330T043233Z">
        <seg>&lt;u0&gt;phpunit-skelgen --test -- "project\Calculator" Calculator.php&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "project\CalculatorTest" to "/home/sb/CalculatorTest.php".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;phpunit-skelgen --test Calculator&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "CalculatorTest" to "/home/sb/CalculatorTest.php".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043209Z" creationid="Wynn" creationdate="20150330T043209Z">
        <seg>&lt;u0&gt;phpunit-skelgen --test Calculator&lt;/u0&gt;
PHPUnit Skeleton Generator 1.0.0 by Sebastian Bergmann.

Wrote skeleton for "CalculatorTest" to "/home/sb/CalculatorTest.php".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;user@desktop&gt; phpunit --configuration developer-a.xml MyTests/&lt;/u0&gt;
&lt;u1&gt;user@desktop&gt; phpunit --configuration developer-b.xml MyTests/&lt;/u1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T101033Z" creationid="Wynn" creationdate="20150316T101033Z">
        <seg>&lt;u0&gt;user@desktop&gt; phpunit --configuration developer-a.xml MyTests/&lt;/u0&gt;
&lt;u1&gt;user@desktop&gt; phpunit --configuration developer-b.xml MyTests/&lt;/u1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;vfsStream&lt;/u0&gt; is a &lt;u1&gt;stream wrapper&lt;/u1&gt; for a &lt;u2&gt;virtual filesystem&lt;/u2&gt; that may be helpful in unit tests to mock the real filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150824T091239Z" creationid="Wynn" creationdate="20150327T091512Z">
        <seg>&lt;u0&gt;vfsStream&lt;/u0&gt; 是对&lt;u2&gt;虚拟文件系统&lt;/u2&gt; 的 &lt;u1&gt;流包覆器(stream wrapper)&lt;/u1&gt;，可以用于模仿真实文件系统，在单元测试中可能会有所助益。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;chmod +x phpunit.phar&lt;/u1&gt;
&lt;u2&gt;mv phpunit.phar /usr/local/bin/phpunit&lt;/u2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041626Z" creationid="Wynn" creationdate="20150330T041626Z">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;chmod +x phpunit.phar&lt;/u1&gt;
&lt;u2&gt;mv phpunit.phar /usr/local/bin/phpunit&lt;/u2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;php phpunit.phar&lt;/u1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041707Z" creationid="Wynn" creationdate="20150330T041707Z">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;php phpunit.phar&lt;/u1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar.asc&lt;/u1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100100Z" creationid="Wynn" creationdate="20150319T100100Z">
        <seg>&lt;u0&gt;wget https://phar.phpunit.de/phpunit.phar&lt;/u0&gt;
&lt;u1&gt;wget https://phar.phpunit.de/phpunit.phar.asc&lt;/u1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; /tmp/logfile.txt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095323Z" creationid="Wynn" creationdate="20150309T095323Z">
        <seg>&gt; /tmp/logfile.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@after</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092049Z" creationid="Wynn" creationdate="20150309T092049Z">
        <seg>@after</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@afterClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092205Z" creationid="Wynn" creationdate="20150309T092205Z">
        <seg>@afterClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043341Z" creationid="Wynn" creationdate="20150330T043341Z">
        <seg>@assert</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) != X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043529Z" creationid="Wynn" creationdate="20150330T043529Z">
        <seg>@assert (...) != X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) !== X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>@assert (...) !== X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) &lt; X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043532Z" creationid="Wynn" creationdate="20150330T043532Z">
        <seg>@assert (...) &lt; X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) &lt;= X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043533Z" creationid="Wynn" creationdate="20150330T043533Z">
        <seg>@assert (...) &lt;= X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) == X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043529Z" creationid="Wynn" creationdate="20150330T043529Z">
        <seg>@assert (...) == X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) === X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>@assert (...) === X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) &gt; X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>@assert (...) &gt; X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) &gt;= X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043531Z" creationid="Wynn" creationdate="20150330T043531Z">
        <seg>@assert (...) &gt;= X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@assert (...) throws X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043533Z" creationid="Wynn" creationdate="20150330T043533Z">
        <seg>@assert (...) throws X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@author</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092042Z" creationid="Wynn" creationdate="20150309T092042Z">
        <seg>@author</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@backupGlobals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092213Z" creationid="Wynn" creationdate="20150309T092213Z">
        <seg>@backupGlobals</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@backupStaticAttributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092241Z" creationid="Wynn" creationdate="20150309T092241Z">
        <seg>@backupStaticAttributes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@before</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092244Z" creationid="Wynn" creationdate="20150309T092244Z">
        <seg>@before</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@beforeClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092305Z" creationid="Wynn" creationdate="20150309T092305Z">
        <seg>@beforeClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@codeCoverageIgnore</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092523Z" creationid="Wynn" creationdate="20150309T092523Z">
        <seg>@codeCoverageIgnore</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@codeCoverageIgnore*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092415Z" creationid="Wynn" creationdate="20150309T092415Z">
        <seg>@codeCoverageIgnore*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@codeCoverageIgnoreEnd</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092525Z" creationid="Wynn" creationdate="20150309T092525Z">
        <seg>@codeCoverageIgnoreEnd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@codeCoverageIgnoreStart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092524Z" creationid="Wynn" creationdate="20150309T092524Z">
        <seg>@codeCoverageIgnoreStart</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092527Z" creationid="Wynn" creationdate="20150309T092527Z">
        <seg>@covers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ::functionName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092543Z" creationid="Wynn" creationdate="20150309T092543Z">
        <seg>@covers ::functionName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092534Z" creationid="Wynn" creationdate="20150309T092534Z">
        <seg>@covers ClassName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;!private&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092540Z" creationid="Wynn" creationdate="20150309T092540Z">
        <seg>@covers ClassName::&lt;!private&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;!protected&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092540Z" creationid="Wynn" creationdate="20150309T092540Z">
        <seg>@covers ClassName::&lt;!protected&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;!public&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092539Z" creationid="Wynn" creationdate="20150309T092539Z">
        <seg>@covers ClassName::&lt;!public&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;private&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092538Z" creationid="Wynn" creationdate="20150309T092538Z">
        <seg>@covers ClassName::&lt;private&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;protected&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092537Z" creationid="Wynn" creationdate="20150309T092537Z">
        <seg>@covers ClassName::&lt;protected&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::&lt;public&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092536Z" creationid="Wynn" creationdate="20150309T092536Z">
        <seg>@covers ClassName::&lt;public&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName::methodName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092533Z" creationid="Wynn" creationdate="20150309T092533Z">
        <seg>@covers ClassName::methodName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@covers ClassName&lt;extended&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092535Z" creationid="Wynn" creationdate="20150309T092535Z">
        <seg>@covers ClassName&lt;extended&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@coversDefaultClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092546Z" creationid="Wynn" creationdate="20150309T092546Z">
        <seg>@coversDefaultClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@coversNothing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092557Z" creationid="Wynn" creationdate="20150309T092557Z">
        <seg>@coversNothing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@dataProvider</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092558Z" creationid="Wynn" creationdate="20150309T092558Z">
        <seg>@dataProvider</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@depends</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092600Z" creationid="Wynn" creationdate="20150309T092600Z">
        <seg>@depends</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@expectedException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092602Z" creationid="Wynn" creationdate="20150309T092602Z">
        <seg>@expectedException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@expectedException X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043534Z" creationid="Wynn" creationdate="20150330T043534Z">
        <seg>@expectedException X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@expectedExceptionCode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092604Z" creationid="Wynn" creationdate="20150309T092604Z">
        <seg>@expectedExceptionCode</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@expectedExceptionMessage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092620Z" creationid="Wynn" creationdate="20150309T092620Z">
        <seg>@expectedExceptionMessage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@expectedExceptionMessageRegExp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092632Z" creationid="Wynn" creationdate="20150309T092632Z">
        <seg>@expectedExceptionMessageRegExp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092635Z" creationid="Wynn" creationdate="20150309T092635Z">
        <seg>@group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@large</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092638Z" creationid="Wynn" creationdate="20150309T092638Z">
        <seg>@large</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@medium</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092653Z" creationid="Wynn" creationdate="20150309T092653Z">
        <seg>@medium</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@preserveGlobalState</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092731Z" creationid="Wynn" creationdate="20150309T092731Z">
        <seg>@preserveGlobalState</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092734Z" creationid="Wynn" creationdate="20150309T092734Z">
        <seg>@requires</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires OS Linux</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092527Z" creationid="Wynn" creationdate="20150319T092527Z">
        <seg>@requires OS Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires OS WIN32|WINNT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092527Z" creationid="Wynn" creationdate="20150319T092527Z">
        <seg>@requires OS WIN32|WINNT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHP 5.3.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092453Z" creationid="Wynn" creationdate="20150319T092453Z">
        <seg>@requires PHP 5.3.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHP 5.4-dev</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092458Z" creationid="Wynn" creationdate="20150319T092458Z">
        <seg>@requires PHP 5.4-dev</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 3.6.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092500Z" creationid="Wynn" creationdate="20150319T092500Z">
        <seg>@requires PHPUnit 3.6.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 3.7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041243Z" creationid="Wynn" creationdate="20150330T041243Z">
        <seg>@requires PHPUnit 3.7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061502Z" creationid="Wynn" creationdate="20150330T061502Z">
        <seg>@requires PHPUnit 4.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062737Z" creationid="Wynn" creationdate="20150330T062737Z">
        <seg>@requires PHPUnit 4.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063125Z" creationid="Wynn" creationdate="20150330T063125Z">
        <seg>@requires PHPUnit 4.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063343Z" creationid="Wynn" creationdate="20150330T063343Z">
        <seg>@requires PHPUnit 4.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063516Z" creationid="Wynn" creationdate="20150330T063516Z">
        <seg>@requires PHPUnit 4.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063650Z" creationid="Wynn" creationdate="20150330T063650Z">
        <seg>@requires PHPUnit 4.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires PHPUnit 4.6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092501Z" creationid="Wynn" creationdate="20150319T092501Z">
        <seg>@requires PHPUnit 4.6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires extension curl</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092707Z" creationid="Wynn" creationdate="20150319T092707Z">
        <seg>@requires extension curl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires extension mysqli</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092707Z" creationid="Wynn" creationdate="20150319T092707Z">
        <seg>@requires extension mysqli</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires extension redis 2.2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041559Z" creationid="Wynn" creationdate="20151222T041559Z">
        <seg>@requires extension redis 2.2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires function ReflectionMethod::setAccessible</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092624Z" creationid="Wynn" creationdate="20150319T092624Z">
        <seg>@requires function ReflectionMethod::setAccessible</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@requires function imap_open</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092622Z" creationid="Wynn" creationdate="20150319T092622Z">
        <seg>@requires function imap_open</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@runInSeparateProcess</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092739Z" creationid="Wynn" creationdate="20150309T092739Z">
        <seg>@runInSeparateProcess</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@runTestsInSeparateProcesses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092736Z" creationid="Wynn" creationdate="20150309T092736Z">
        <seg>@runTestsInSeparateProcesses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@small</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092741Z" creationid="Wynn" creationdate="20150309T092741Z">
        <seg>@small</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092747Z" creationid="Wynn" creationdate="20150309T092747Z">
        <seg>@test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@testdox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092752Z" creationid="Wynn" creationdate="20150309T092752Z">
        <seg>@testdox</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@ticket</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092755Z" creationid="Wynn" creationdate="20150309T092755Z">
        <seg>@ticket</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@uses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092756Z" creationid="Wynn" creationdate="20150309T092756Z">
        <seg>@uses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A "bootstrap" PHP file that is run before the tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100514Z" creationid="Wynn" creationdate="20150327T100514Z">
        <seg>在测试前先运行一个 "bootstrap" PHP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A New Look at Test-Driven Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031953Z" creationid="Wynn" creationdate="20150330T031953Z">
        <seg>A New Look at Test-Driven Development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A PHP DataSet has obvious advantages over all the other file-based datasets:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074602Z" creationid="Wynn" creationdate="20150317T074514Z">
        <seg>PHP 版本的 DataSet 相比于所有其他基于文件的 DataSet 相比有很明显的优点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A central concept of PHPUnit's Database Extension are DataSets and DataTables. You should try to understand this simple concept to master database testing with PHPUnit. The DataSet and DataTable are an abstraction layer around your database tables, rows and columns. A simple API hides the underlying database contents in an object structure, which can also be implemented by other non-database sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070344Z" creationid="Wynn" creationdate="20150317T065859Z">
        <seg>PHPUnit 的数据库扩展模块的核心概念是 DataSet（数据集）和 DataTable（数据表）。为了掌握如何使用 PHPUnit 进行测试，需要试着去了解这些简单的概念。DataSet（数据集）和 DataTable（数据表）是围绕着数据库表、行、列的抽象层。通过一套简单的API，底层数据库内容被隐藏在对象结构之下，同时，这个对象结构也可以用其他非数据库数据源来实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class that interacts with the filesystem</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091715Z" creationid="Wynn" creationdate="20150327T091715Z">
        <seg>一个与文件系统交互的类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A complete list of possibilities and examples can be found at</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073652Z" creationid="Wynn" creationdate="20150302T073652Z">
        <seg>完整的可能用法以及例子见</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A consumer is a test method that depends on one or more producers and their return values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101706Z" creationid="Wynn" creationdate="20150327T101706Z">
        <seg>消费者(consumer)，是依赖于一个或多个生产者及其返回值的测试方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A data provider method must be &lt;l0&gt;public&lt;/l0&gt; and either return an array of arrays or an object that implements the &lt;l1&gt;Iterator&lt;/l1&gt; interface and yields an array for each iteration step. For each array that is part of the collection the test method will be called with the contents of the array as its arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102136Z" creationid="Wynn" creationdate="20150327T102136Z">
        <seg>数据供给器方法必须声明为 &lt;l0&gt;public&lt;/l0&gt;，其返回值要么是一个数组，其每个元素也是数组；要么是一个实现了 &lt;l1&gt;Iterator&lt;/l1&gt; 接口的对象，在对它进行迭代时每步产生一个数组。每个数组都是测试数据集的一部分，将以它的内容作为参数来调用测试方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A data-driven test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075640Z" creationid="Wynn" creationdate="20150319T075640Z">
        <seg>一个数据驱动的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A doc comment in PHP must start with &lt;l0&gt;/**&lt;/l0&gt; and end with &lt;l1&gt;*/&lt;/l1&gt;. Annotations in any other style of comment will be ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T055832Z" creationid="Wynn" creationdate="20150228T055832Z">
        <seg>PHP中的文档注释块必须以 &lt;l0&gt;/**&lt;/l0&gt; 开头，以 &lt;l1&gt;*/&lt;/l1&gt; 结尾。任何其他形式的注释中出现的标注都将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A drawback of this approach is that we have no control over the order in which the tests are run. This can lead to problems with regard to test dependencies, see &lt;x0/&gt;. In the next section you will see how you can make the test execution order explicit by using the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035949Z" creationid="Wynn" creationdate="20150320T035949Z">
        <seg>这种方法的缺点是无法控制测试的运行顺序。这可能导致测试的依赖关系方面的问题，参见 &lt;x0/&gt;。在下一节中，可以看到如何用 XML 配置文件来明确指定测试的执行顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A fixture describes the initial state your application and database are in when you execute a test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T070359Z" creationid="Wynn" creationdate="20150313T070248Z">
        <seg>基境(fixture)是对开始执行某个测试时应用程序和数据库所处初始状态的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A framework such as PHPUnit has to resolve a set of constraints, some of which seem always to conflict with each other. Simultaneously, tests should be:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041021Z" creationid="Wynn" creationdate="20150330T041021Z">
        <seg>象 PHPUnit 这样的框架必须处理一系列的约束条件，其中有中有一些看上去是互相矛盾的。测试应当同时做到以下几点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A global variable &lt;l0&gt;$foo = 'bar';&lt;/l0&gt; is stored as &lt;l1&gt;$GLOBALS['foo'] = 'bar';&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082821Z" creationid="Wynn" creationdate="20150319T082821Z">
        <seg>全局变量 &lt;l0&gt;$foo = 'bar';&lt;/l0&gt; 实际上是存储为 &lt;l1&gt;$GLOBALS['foo'] = 'bar';&lt;/l1&gt; 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A good example of a fixture that makes sense to share across several tests is a database connection: you log into the database once and reuse the database connection instead of creating a new connection for each test. This makes your tests run faster.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082032Z" creationid="Wynn" creationdate="20150319T082032Z">
        <seg>一个有实际意义的多测试间共享基境的例子是数据库连接：只登录数据库一次，然后重用此连接，而不是每个测试都建立一个新的数据库连接。这样能加快测试的运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A producer is a test method that yields its unit under test as return value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101702Z" creationid="Wynn" creationdate="20150327T101702Z">
        <seg>生产者(producer)，是能生成被测单元并将其作为返回值的测试方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A really simple way to check whether we are getting the results we expect is to print the result of &lt;l0&gt;count()&lt;/l0&gt; before and after adding the element (see &lt;x1/&gt;). If we get &lt;l2&gt;0&lt;/l2&gt; and then &lt;l3&gt;1&lt;/l3&gt;, &lt;l4&gt;array&lt;/l4&gt; and &lt;l5&gt;count()&lt;/l5&gt; behave as expected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030103Z" creationid="Wynn" creationdate="20150330T030103Z">
        <seg>要检查我们是否得到了预期的结果，简单的办法是在添加元素前后分别输出 &lt;l0&gt;count()&lt;/l0&gt; 的结果（见&lt;x1/&gt;）。若前后分别得到 &lt;&lt;l2&gt;0&lt;/l2&gt; 和 &lt;l3&gt;1&lt;/l3&gt;，则 &lt;l4&gt;array&lt;/l4&gt; 和 &lt;l5&gt;count()&lt;/l5&gt; 的行为符合预期。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A regexp matching &lt;u0&gt;PHP_OS&lt;/u0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092525Z" creationid="Wynn" creationdate="20150319T092525Z">
        <seg>用来对 &lt;u0&gt;PHP_OS&lt;/u0&gt; 进行匹配的正则表达式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple test listener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070134Z" creationid="Wynn" creationdate="20150319T070134Z">
        <seg>简单的测试监听器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simpler alternative to setting up a callback method may be to specify a list of desired return values. You can do this with the &lt;l0&gt;onConsecutiveCalls()&lt;/l0&gt; method. See &lt;x1/&gt; for an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084139Z" creationid="Wynn" creationdate="20150327T084139Z">
        <seg>相比于建立回调方法，有一个更简单的选择是直接给出期望返回值的列表。可以用 &lt;l0&gt;onConsecutiveCalls()&lt;/l0&gt; 方法来做到这个。范例参见 &lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A spare is when the player knocks down all 10 pins in two tries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031451Z" creationid="Wynn" creationdate="20150330T031451Z">
        <seg>补中是指运动员用两次击球将10个球瓶全部击倒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A strike is when the player knocks down all 10 pins on the first try.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031500Z" creationid="Wynn" creationdate="20150330T031500Z">
        <seg>全中指运动员在第一次击球尝试时就将10个球瓶全部击倒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A table is also represented by the following interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075901Z" creationid="Wynn" creationdate="20150317T075850Z">
        <seg>数据表则由以下接口表示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test annotated with &lt;l0&gt;@large&lt;/l0&gt; will fail if it takes longer than 60 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031830Z" creationid="Wynn" creationdate="20150327T031830Z">
        <seg>带有 &lt;l0&gt;@large&lt;/l0&gt; 标注的测试如果执行时间超过60秒将视为失败。此超时限制可以通过XML配置文件中的 &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test annotated with &lt;l0&gt;@medium&lt;/l0&gt; will fail if it takes longer than 10 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031858Z" creationid="Wynn" creationdate="20150327T031835Z">
        <seg>带有 &lt;l0&gt;@medium&lt;/l0&gt; 标注的测试如果执行时间超过10秒将视为失败。此超时限制可以通过XML配置文件中的 &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test can be tagged as belonging to one or more groups using the &lt;l0&gt;@group&lt;/l0&gt; annotation like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072704Z" creationid="Wynn" creationdate="20150302T072704Z">
        <seg>测试可以用 &lt;l0&gt;@group&lt;/l0&gt; 标注来标记为属于一个或多个组，就像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test marked as &lt;l0&gt;@large&lt;/l0&gt; will fail if it takes longer than 60 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050731Z" creationid="Wynn" creationdate="20150330T050731Z">
        <seg>标记为 &lt;l0&gt;@large&lt;/l0&gt; 的测试如果执行时间超过60秒将视为失败。此超时限制可以通过XML配置文件中的 &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test marked as &lt;l0&gt;@medium&lt;/l0&gt; will fail if it takes longer than 10 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050742Z" creationid="Wynn" creationdate="20150330T050742Z">
        <seg>标记为 &lt;l0&gt;@medium&lt;/l0&gt; 的测试如果执行时间超过10秒将视为失败。此超时限制可以通过XML配置文件中的 &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test may have more than one &lt;l0&gt;@depends&lt;/l0&gt; annotation. PHPUnit does not change the order in which tests are executed, you have to ensure that the dependencies of a test can actually be met before the test is run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101939Z" creationid="Wynn" creationdate="20150327T101939Z">
        <seg>测试可以使用多个 &lt;l0&gt;@depends&lt;/l0&gt; 标注。PHPUnit 不会更改测试的运行顺序，因此你需要自行保证某个测试所依赖的所有测试均出现于这个测试之前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test method can accept arbitrary arguments. These arguments are to be provided by a data provider method (&lt;l0&gt;additionProvider()&lt;/l0&gt; in &lt;x1/&gt;). The data provider method to be used is specified using the &lt;l2&gt;@dataProvider&lt;/l2&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102113Z" creationid="Wynn" creationdate="20150327T102113Z">
        <seg>测试方法可以接受任意参数。这些参数由数据供给器方法（在 &lt;x1/&gt;中，是 &lt;l0&gt;additionProvider()&lt;/l0&gt; 方法）提供。用 &lt;l2&gt;@dataProvider&lt;/l2&gt; 标注来指定使用哪个数据供给器方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test method can accept arbitrary arguments. These arguments are to be provided by a data provider method (&lt;l0&gt;provider()&lt;/l0&gt; in &lt;x1/&gt;). The data provider method to be used is specified using the &lt;l2&gt;@dataProvider&lt;/l2&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T092047Z" creationid="Wynn" creationdate="20150228T092047Z">
        <seg> 测试方法可以接受任意参数。这些参数可以由数据供给器方法（&lt;x1/&gt;中的 &lt;l0&gt;provider()&lt;/l0&gt;）提供。所要使用的数据供给器方法用 &lt;l2&gt;@dataProvider&lt;/l2&gt; 标注来指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test not marked as &lt;l0&gt;@medium&lt;/l0&gt; or &lt;l1&gt;@large&lt;/l1&gt; will fail if it takes longer than 1 second to execute. This timeout is configurable via the &lt;l2&gt;timeoutForSmallTests&lt;/l2&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050908Z" creationid="Wynn" creationdate="20150330T050908Z">
        <seg>未标记为 &lt;l0&gt;@medium&lt;/l0&gt; 或 &lt;l1&gt;@large&lt;/l1&gt; 的测试如果其执行时间超过1秒将视为失败。这个超时限制可以通过 XML 配置文件的 &lt;l2&gt;timeoutForSmallTests&lt;/l2&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that does not perform an assertion will be marked as risky when this check is enabled. Expectations on mock objects or annotations such as &lt;c0&gt;@expectedException&lt;/c0&gt; count as an assertion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031329Z" creationid="Wynn" creationdate="20150327T031329Z">
        <seg>在启用本项检查后，如果某个测试未进行任何断言，它将被标记为有风险。仿件对象中的预期和诸如 &lt;c0&gt;@expectedException&lt;/c0&gt; 这样的标注同样视为断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that emits output will fail in strict mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024931Z" creationid="Wynn" creationdate="20150330T024931Z">
        <seg>在严格模式下，本身产生输出的测试将会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that emits output, for instance by invoking &lt;c0&gt;print&lt;/c0&gt; in either the test code or the tested code, will be marked as risky when this check is enabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031723Z" creationid="Wynn" creationdate="20150327T031723Z">
        <seg>在启用本项检查后，如果某个测试产生了输出，例如，在测试代码或被测代码中调用了 &lt;c0&gt;print&lt;/c0&gt;，它将被标记为有风险。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that has been skipped is denoted by an &lt;l0&gt;S&lt;/l0&gt; in the output of the PHPUnit command-line test runner, as shown in the following example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092220Z" creationid="Wynn" creationdate="20150319T092220Z">
        <seg> 在 PHPUnit 命令行测试执行器的输出中，被跳过的测试记为 &lt;l0&gt;S&lt;/l0&gt;，如下例所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that has more than one &lt;l0&gt;@depends&lt;/l0&gt; annotation will get a fixture from the first producer as the first argument, a fixture from the second producer as the second argument, and so on. See</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101953Z" creationid="Wynn" creationdate="20150327T101953Z">
        <seg>拥有多个 &lt;l0&gt;@depends&lt;/l0&gt; 标注的测试，其第一个参数是第一个生产者提供的基境，第二个参数是第二个生产者提供的基境，以此类推。参见</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that is annotated with &lt;c0&gt;@covers&lt;/c0&gt; and executes code that is not listed using a &lt;c1&gt;@covers&lt;/c1&gt; or &lt;c2&gt;@uses&lt;/c2&gt; annotation will be marked as risky when this check is enabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031538Z" creationid="Wynn" creationdate="20150327T031435Z">
        <seg>在启用本项检查后，如果某个带有 &lt;c0&gt;@covers&lt;/c0&gt; 标注的测试执行了未在 &lt;c1&gt;@covers&lt;/c1&gt; 或 &lt;c2&gt;@uses&lt;/c2&gt; 标注中列出的代码，它将被标记为有风险。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that is not annotated with &lt;l0&gt;@medium&lt;/l0&gt; or &lt;l1&gt;@large&lt;/l1&gt; will be treated as if it were annotated with &lt;l2&gt;@small&lt;/l2&gt;. A small test will fail if it takes longer than 1 second to execute. This timeout is configurable via the &lt;l3&gt;timeoutForSmallTests&lt;/l3&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031946Z" creationid="Wynn" creationdate="20150327T031837Z">
        <seg>没有 &lt;l0&gt;@medium&lt;/l0&gt; 或 &lt;l1&gt;@large&lt;/l1&gt; 标注的测试都将视同为带有 &lt;l2&gt;@small&lt;/l2&gt;标注，这类测试如果执行时间超过1秒将视为失败。此超时限制可以通过XML配置文件中的 &lt;l3&gt;timeoutForSmallTests&lt;/l3&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A test that specifies that no method should be covered</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T071413Z" creationid="Wynn" creationdate="20150309T071413Z">
        <seg>指明测试不欲覆盖任何方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A time limit can be enforced for the execution of a test if the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and the &lt;l1&gt;pcntl&lt;/l1&gt; extension is available. The enforcing of this time limit can be enabled by using the &lt;l2&gt;--enforce-time-limit&lt;/l2&gt; option on the commandline or by setting &lt;l3&gt;beStrictAboutTestSize="true"&lt;/l3&gt; in PHPUnit's XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031807Z" creationid="Wynn" creationdate="20150327T031807Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 包并且 &lt;l1&gt;pcntl&lt;/l1&gt; 扩展可用，那么可以对测试的执行时长进行限制。此时间限制可以用命令行选项 &lt;l2&gt;--enforce-time-limit&lt;/l2&gt; 或在 PHPUnit 的 XML 配置文件中设置 &lt;l3&gt;beStrictAboutTestSize="true"&lt;/l3&gt; 来启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A utility class for invoking callables with a timeout. This package is required to enforce test timeouts in strict mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100647Z" creationid="Wynn" creationdate="20150319T100647Z">
        <seg> 一个工具类，可以用带有超时限制的方式调用可调用内容。当需要在严格模式下保证测试的超时限制时，这个组件包是必须的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A workflow for database assertions in your tests then consists of three simple steps:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070309Z" creationid="Wynn" creationdate="20150317T070309Z">
        <seg>在测试中，数据库断言的工作流由以下三个简单的步骤组成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API for Incomplete Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091909Z" creationid="Wynn" creationdate="20150319T091835Z">
        <seg>用于未完成的测试的 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API for Skipping Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092250Z" creationid="Wynn" creationdate="20150319T092250Z">
        <seg>用于跳过测试的 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing the Test Connection you can automatically create a DataSet that consists of all the tables with their content in the database specified as second parameter to the Connections Factory method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074945Z" creationid="Wynn" creationdate="20150317T074945Z">
        <seg>通过访问测试所使用的数据库连接，可以自动创建包含数据库所有表以及其内容的 DataSet。所使用的数据库由数据库连接工厂方法的第二个参数指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a table just by name is an implicit way to define the data-table with the following query:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074830Z" creationid="Wynn" creationdate="20150317T074830Z">
        <seg>单纯以名称来添加表是一种隐式地用以下查询来定义 DataTable 的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Addison-Wesley</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093339Z" creationid="Wynn" creationdate="20150309T093339Z">
        <seg>Addison-Wesley</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional options that are not available as command-line options are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T081327Z" creationid="Wynn" creationdate="20150309T081327Z">
        <seg>其他那些不能用命令行选项来配置的选项有：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally you have to realize that the database is essentially a global input variable to your code. Two tests in your test suite could run against the same database, possibly reusing data multiple times. Failures in one test can easily affect the result of the following tests making your testing experience very difficult. The previously mentioned cleanup step is of major importance to solve the &lt;q0&gt;database is a global input&lt;/q0&gt; problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T064544Z" creationid="Wynn" creationdate="20150313T063001Z">
        <seg>另外，必须认识到，对于代码而言，本质上来说数据库是全局输入变量。测试套件中的两个不同的测试可能是运行在同一个数据库上的，并且可能把数据重用好多次。一个测试中出现的失败很容易影响到后继测试的结果，从而让整个测试过程变得非常艰难。前面提到的清理步骤对于解决&lt;q0&gt;数据库是全局输入&lt;/q0&gt;的问题是非常重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, you can use &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; and &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; in combination with &lt;l2&gt;@expectedException&lt;/l2&gt; to test the exception message and exception code as shown in &lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051138Z" creationid="Wynn" creationdate="20150330T051138Z">
        <seg>另外，你可以将 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; 和 &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; 与 &lt;l2&gt;@expectedException&lt;/l2&gt; 联合使用，来对异常的讯息与代号进行测试，如&lt;x3/&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, you can use &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;, &lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; and &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt; in combination with &lt;l3&gt;@expectedException&lt;/l3&gt; to test the exception message and exception code as shown in &lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102858Z" creationid="Wynn" creationdate="20150327T102858Z">
        <seg>另外，你可以将 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;、&lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; 和 &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt; 与 &lt;l3&gt;@expectedException&lt;/l3&gt; 联合使用，来对异常的讯息与代号进行测试，如&lt;x4/&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adrian Kuhn et. al.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101633Z" creationid="Wynn" creationdate="20150327T101633Z">
        <seg>Adrian Kuhn et. al.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the database is reset and loaded with its initial state the actual test is executed by PHPUnit. This part of the test code does not require awareness of the Database Extension at all, you can go on and test whatever you like with your code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071444Z" creationid="Wynn" creationdate="20150313T071444Z">
        <seg>在所有数据库都完成重置并加载好初始状态后，PHPUnit 才会执行实际的测试。这个部分的测试代码完全不需要数据库扩展模块的参与，可以随意测试任何想要测试的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Agile Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040735Z" creationid="Wynn" creationdate="20150320T040735Z">
        <seg>敏捷文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Agile Documentation can be used to document the assumptions you make about the external packages that you use in your project. When you use an external package, you are exposed to the risks that the package will not behave as you expect, and that future versions of the package will change in subtle ways that will break your code, without you knowing it. You can address these risks by writing a test every time you make an assumption. If your test succeeds, your assumption is valid. If you document all your assumptions with tests, future releases of the external package will be no cause for concern: if the tests succeed, your system should continue working.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024458Z" creationid="Wynn" creationdate="20150327T024458Z">
        <seg>敏捷文档可以用于将对项目所使用的外部包所做出的假设文档化。使用外部包，你就暴露于这个包的行为与你所预期的不同的风险中，并且包的未来版本可能在你所不知道的情况下有微妙的改变并破坏你的代码。每次做出假设时就编写一个对应的测试可以处理这些风险。如果测试成功，那么假设就有效。如果所有的假设都通过测试来文档化，外部包在未来发布新版本就不会引起忧虑：如果测试成功，那么系统就应当能继续正常运作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All data providers are executed before both the call to the &lt;l0&gt;setUpBeforeClass&lt;/l0&gt; static method and the first call to the &lt;l1&gt;setUp&lt;/l1&gt; method. Because of that you can't access any variables you create there from within a data provider. This is required in order for PHPUnit to be able to compute the total number of tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102752Z" creationid="Wynn" creationdate="20150327T102752Z">
        <seg>所有的数据供给器方法的执行都是在对 &lt;l0&gt;setUpBeforeClass&lt;/l0&gt; 静态方法的调用和第一次对 &lt;l1&gt;setUp&lt;/l1&gt; 方法的调用之前完成的。因此，无法在数据供给器中使用创建于这两个方法内的变量。这是必须的，这样 PHPUnit 才能计算测试的总数量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All official releases of code distributed by the PHPUnit Project are signed by the release manager for the release. PGP signatures and SHA1 hashes are available for verification on &lt;u0&gt;phar.phpunit.de&lt;/u0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100031Z" creationid="Wynn" creationdate="20150319T100031Z">
        <seg> 由 PHPUnit 项目分发的所有官方代码发行包都由发行包管理器进行签名。在 &lt;u0&gt;phar.phpunit.de&lt;/u0&gt; 上有 PGP 签名和 SHA1 散列值可用于校验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All unit tests run correctly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092501Z" creationid="Wynn" creationdate="20150327T092501Z">
        <seg>所有单元测试均正确运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternative approach to testing exceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103335Z" creationid="Wynn" creationdate="20150327T103335Z">
        <seg>另一种对异常进行测试的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, the Mock Builder API can be used to configure the generated test double class. &lt;x0/&gt; shows an example. Here's a list of the methods that can be used with the Mock Builder's fluent interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045007Z" creationid="Wynn" creationdate="20150330T045007Z">
        <seg>另外，仿件生成器(Mock Builder) API 也可以用来对生成的测试替身类进行配置。&lt;x0/&gt;展示了一个例子。下面列出了可以在仿件生成器的流畅式接口中使用的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, the agile documentation can be generated in HTML or plain text format and written to a file using the &lt;l0&gt;--testdox-html&lt;/l0&gt; and &lt;l1&gt;--testdox-text&lt;/l1&gt; arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024409Z" creationid="Wynn" creationdate="20150327T024409Z">
        <seg>另外，敏捷文档也可以以 HTML 或纯文本格式生成，并写入文件中，用 &lt;l0&gt;--testdox-html&lt;/l0&gt; 和 &lt;l1&gt;--testdox-text&lt;/l1&gt; 参数即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use &lt;l0&gt;setExpectedException()&lt;/l0&gt; or &lt;l1&gt;setExpectedExceptionRegExp()&lt;/l1&gt; to set the expected exception as shown in &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103102Z" creationid="Wynn" creationdate="20150327T103102Z">
        <seg>此外，还可以用 &lt;l0&gt;setExpectedException()&lt;/l0&gt; 或 &lt;l1&gt;setExpectedExceptionRegExp()&lt;/l1&gt; 方法来设定所预期的异常，如&lt;x2/&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use YAML dataset for the guestbook example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074242Z" creationid="Wynn" creationdate="20150317T074242Z">
        <seg>也可以用 YAML DataSet 来写这个留言本的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;l0&gt;@expectedException&lt;/l0&gt;, &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt;, &lt;l2&gt;@expectedExceptionMessage&lt;/l2&gt;, and &lt;l3&gt;@expectedExceptionMessageRegExp&lt;/l3&gt; annotations to set up expectations for exceptions raised by the code under test. &lt;x4/&gt; shows an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T042447Z" creationid="Wynn" creationdate="20160113T042447Z">
        <seg>此外，还可以用 &lt;l0&gt;@expectedException&lt;/l0&gt;、&lt;l1&gt;@expectedExceptionCode&lt;/l1&gt;、&lt;l2&gt;@expectedExceptionMessage&lt;/l2&gt; 和 &lt;l3&gt;@expectedExceptionMessageRegExp&lt;/l3&gt; 标注来建立对被测代码所抛异常的预期。&lt;x4/&gt; 展示了一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;l0&gt;@test&lt;/l0&gt; annotation in a method's docblock to mark it as a test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101536Z" creationid="Wynn" creationdate="20150327T101536Z">
        <seg>也可以在方法的文档注释块(docblock)中使用 &lt;l0&gt;@test&lt;/l0&gt; 标注将其标记为测试方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;l0&gt;setExpectedException()&lt;/l0&gt; method to set the expected exception as shown in &lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051246Z" creationid="Wynn" creationdate="20150330T051246Z">
        <seg>此外，还可以用 &lt;l0&gt;setExpectedException()&lt;/l0&gt; 方法来设定所预期的异常，如&lt;x1/&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the static assertion methods provided by the &lt;l0&gt;PHPUnit_Framework_Assert&lt;/l0&gt; class to write the contract conditions as design-by-contract style assertions into your code, as shown in &lt;x1/&gt;. When one of these assertions fails, an &lt;l2&gt;PHPUnit_Framework_AssertionFailedError&lt;/l2&gt; exception will be raised. With this approach, you write less code for the contract condition checks and the tests become more readable. However, you add a runtime dependency on PHPUnit to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050516Z" creationid="Wynn" creationdate="20150330T050516Z">
        <seg>另外，也可以用 &lt;l0&gt;PHPUnit_Framework_Assert&lt;/l0&gt; 类所提供的静态断言方法来将契约条件以契约式设计的样式写入代码之中，如&lt;x1/&gt;中所示。如果这些断言之一失败，将会抛出 &lt;l2&gt;PHPUnit_Framework_AssertionFailedError&lt;/l2&gt; 异常。通过这种方法，为检测契约条件所编写的代码就会更少，测试的可读性也会变得更好。不过这样就往项目中加入了对 PHPUnit 的运行时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can write the stub yourself and improve your design along the way. Widely used resources are accessed through a single façade, so you can easily replace the resource with the stub. For example, instead of having direct database calls scattered throughout the code, you have a single &lt;l0&gt;Database&lt;/l0&gt; object, an implementor of the &lt;l1&gt;IDatabase&lt;/l1&gt; interface. Then, you can create a stub implementation of &lt;l2&gt;IDatabase&lt;/l2&gt; and use it for your tests. You can even create an option for running the tests with the stub database or the real database, so you can use your tests for both local testing during development and integration testing with the real database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084402Z" creationid="Wynn" creationdate="20150327T084402Z">
        <seg>另外，也可以自行编写桩件，并在此过程中改善设计。在系统中被广泛使用的资源是通过单个外观(facade)来访问的，因此很容易就能用桩件替换掉资源。例如，将散落在代码各处的对数据库的直接调用替换为单个 &lt;l0&gt;Database&lt;/l0&gt; 对象，这个对象实现了 &lt;l1&gt;IDatabase&lt;/l1&gt; 接口。接下来，就可以创建实现了 &lt;l2&gt;IDatabase&lt;/l2&gt; 的桩件并在测试中使用之。甚至可以创建一个选项来控制是用桩件还是用真实数据库来运行测试，这样测试就既能在开发过程中用作本地测试，又能在实际数据库环境中进行集成测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Am I required to use PDO in my application for the Database Extension to work?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042429Z" creationid="Wynn" creationdate="20150319T042429Z">
        <seg>为了让数据库扩展模块正常工作，需要在应用程序中使用 PDO 吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An annotation is a special form of syntactic metadata that can be added to the source code of some programming languages. While PHP has no dedicated language feature for annotating source code, the usage of tags such as &lt;l0&gt;@annotation arguments&lt;/l0&gt; in documentation block has been established in the PHP community to annotate source code. In PHP documentation blocks are reflective: they can be accessed through the Reflection API's &lt;l1&gt;getDocComment()&lt;/l1&gt; method on the function, class, method, and attribute level. Applications such as PHPUnit use this information at runtime to configure their behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T055719Z" creationid="Wynn" creationdate="20150228T055719Z">
        <seg>所谓标注，是指某些编程语言中允许加在源代码中的一种特殊格式的语法元数据。PHP 并没有专门的语言特性来支持对源代码进行标注，然而 PHP 社区早已经形成惯例，通过在文档注释块中使用诸如 &lt;l0&gt;@annotation arguments&lt;/l0&gt; 这样的标签来为源代码加上标注。在 PHP 中，文档注释块是可反射的：可以对函数、方法、类以及属性调用相应级别的反射 API &lt;l1&gt;getDocComment()&lt;/l1&gt; 方法来获取相应的文档注释块。诸如 PHPUnit 这样的应用程序在运行时用这些信息来配置其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array of column-names of the table, ordered by their appearance in the result-set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080055Z" creationid="Wynn" creationdate="20150317T080055Z">
        <seg>表的列名数组，按照列在结果集中出现的顺序排列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array of the primary-key columns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080103Z" creationid="Wynn" creationdate="20150317T080103Z">
        <seg>构成主键的列的数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of what code coverage statistics can mean is that if there is a method with 100 lines of code, and only 75 of these lines are actually executed when tests are being run, then the method is considered to have a code coverage of 75 percent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032246Z" creationid="Wynn" creationdate="20150330T032246Z">
        <seg>关于代码覆盖率统计是什么意思，举个例子，假如有个方法有100行代码，而在测试运行过程中实际上只执行了其中的75行，那么这个方法就有75%的代码覆盖率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An incomplete test is denoted by an &lt;l0&gt;I&lt;/l0&gt; in the output of the PHPUnit command-line test runner, as shown in the following example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091848Z" creationid="Wynn" creationdate="20150319T091727Z">
        <seg>在 PHPUnit 命令行测试执行器的输出中，未完成的测试记为 &lt;l0&gt;I&lt;/l0&gt;，如下例所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T080403Z" creationid="Wynn" creationdate="20150228T042652Z">
        <seg>Annotation （标注）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T042631Z" creationid="Wynn" creationdate="20150228T042631Z">
        <seg>标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations for specifying which methods are covered by a test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080607Z" creationid="Wynn" creationdate="20150228T080607Z">
        <seg>用于指明测试覆盖哪些方法的标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092443Z" creationid="Wynn" creationdate="20150319T092443Z">
        <seg>其他范例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another file-based dataset is based on CSV files. Each table of the dataset is represented as a single CSV file. For our guestbook example we would define a guestbook-table.csv file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074423Z" creationid="Wynn" creationdate="20150317T074423Z">
        <seg>另外一种基于文件的 DataSet 是基于 CSV 文件的。数据集中的每个表用一个单独的 CSV 文件表示。对于留言本的例子，可以这样定义 guestbook-table.csv 文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any PHP version identifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092453Z" creationid="Wynn" creationdate="20150319T092453Z">
        <seg>任何 PHP 版本标识符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any PHPUnit version identifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092500Z" creationid="Wynn" creationdate="20150319T092500Z">
        <seg>任何 PHPUnit 版本标识符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any attacker can create a public key and upload it to the public key servers. They can then create a malicious release signed by this fake key. Then, if you tried to verify the signature of this corrupt release, it would succeed because the key was not the "real" key. Therefore, you need to validate the authenticity of this key. Validating the authenticity of a public key, however, is outside the scope of this documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100342Z" creationid="Wynn" creationdate="20150319T100342Z">
        <seg>任何攻击者都能创建公钥并将其上传到公钥服务器。他们可以建立一个带恶意的发行包，并用这个假密钥进行签名。这样，如果尝试对这个损坏了的发行包进行签名校验，由于密钥是“真”密钥，校验将成功完成。因此，需要对这个密钥的真实性进行校验。如何对公钥的真实性进行校验已经超出了本文档的范畴。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any defined &lt;l0&gt;&lt;table&gt;&lt;/l0&gt; has a name and requires a definition of all the columns with their names. It can contain zero or any positive number of nested &lt;l1&gt;&lt;row&gt;&lt;/l1&gt; elements. Defining no &lt;l2&gt;&lt;row&gt;&lt;/l2&gt; element means the table is empty. The &lt;l3&gt;&lt;value&gt;&lt;/l3&gt; and &lt;l4&gt;&lt;null /&gt;&lt;/l4&gt; tags have to be specified in the order of the previously given &lt;l5&gt;&lt;column&gt;&lt;/l5&gt; elements. The &lt;l6&gt;&lt;null /&gt;&lt;/l6&gt; tag obviously means that the value is NULL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072952Z" creationid="Wynn" creationdate="20150317T072952Z">
        <seg>所定义的每个 &lt;l0&gt;&lt;table&gt;&lt;/l0&gt; 都有一个名称，并且必须有对所有列及其名称的定义。其下可以包含零个或任意正整数个 &lt;l1&gt;&lt;row&gt;&lt;/l1&gt; 元素。没有定义 &lt;l2&gt;&lt;row&gt;&lt;/l2&gt; 意味着这是个空表。&lt;l3&gt;&lt;value&gt;&lt;/l3&gt; 和 &lt;l4&gt;&lt;null /&gt;&lt;/l4&gt; 标签必须按照之前给定 &lt;l5&gt;&lt;column&gt;&lt;/l5&gt; 元素的顺序来指定。&lt;l6&gt;&lt;null /&gt;&lt;/l6&gt; 标签显然意味着这个值为 NULL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any extension name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092705Z" creationid="Wynn" creationdate="20150319T092705Z">
        <seg>任何扩展的名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any extension name along with an optional version identifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041549Z" creationid="Wynn" creationdate="20151222T041549Z">
        <seg>任何扩展模块名，可以附带有版本标识符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any valid parameter to &lt;u0&gt;function_exists&lt;/u0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092648Z" creationid="Wynn" creationdate="20150319T092622Z">
        <seg>任何对 &lt;u0&gt;function_exists&lt;/u0&gt; 而言有效的参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Append &lt;u0&gt;;C:\bin&lt;/u0&gt; to your &lt;v1&gt;PATH&lt;/v1&gt; environment variable (&lt;u2&gt;related help&lt;/u2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095527Z" creationid="Wynn" creationdate="20150319T095527Z">
        <seg>将 &lt;u0&gt;;C:\bin&lt;/u0&gt; 附加到 &lt;v1&gt;PATH&lt;/v1&gt; 环境变量中（&lt;u2&gt;相关帮助&lt;/u2&gt;）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Array DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T070524Z" creationid="Wynn" creationdate="20150317T074500Z">
        <seg>Array DataSe （数组数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an alternative to prefixing your test method names with &lt;l0&gt;test&lt;/l0&gt;, you can use the &lt;l1&gt;@test&lt;/l1&gt; annotation in a method's DocBlock to mark it as a test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T055636Z" creationid="Wynn" creationdate="20150303T055636Z">
        <seg>除了用 &lt;l0&gt;test&lt;/l0&gt; 作为测试方法名称的前缀外，还可以在方法的文档注释块中用 &lt;l1&gt;@test&lt;/l1&gt; 标注来将其标记为测试方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with any external resource, there might be intermittent problems with the filesystem. This makes tests interacting with it flaky.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092052Z" creationid="Wynn" creationdate="20150327T092024Z">
        <seg>和任何其他外部资源一样，文件系统可能会间歇性的出现一些问题，这使得和它交互的测试变得不可靠。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assert that both dataset representations equal each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070412Z" creationid="Wynn" creationdate="20150317T070412Z">
        <seg> 断言这两个数据集陈述是彼此相等的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Asserting the Result of a Query</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042207Z" creationid="Wynn" creationdate="20150319T042207Z">
        <seg>对查询的结果作出断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Asserting the Row-Count of a Table</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090511Z" creationid="Wynn" creationdate="20150318T090511Z">
        <seg>对表中数据行的数量作出断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Asserting the State of Multiple Tables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042224Z" creationid="Wynn" creationdate="20150319T042224Z">
        <seg>对多个表的状态作出断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Asserting the State of a Table</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T023703Z" creationid="Wynn" creationdate="20150319T023703Z">
        <seg>对表的状态作出断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assertion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064400Z" creationid="Wynn" creationdate="20150327T064400Z">
        <seg>断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assertions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T061101Z" creationid="Wynn" creationdate="20150303T061101Z">
        <seg>断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assertions are not the only use-case for the DataSet and DataTable in PHPUnit's Database Extension. As shown in the previous section they also describe the initial contents of a database. You are forced to define a fixture dataset by the Database TestCase, which is then used to:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070540Z" creationid="Wynn" creationdate="20150317T070540Z">
        <seg>在 PHPUnit 的数据库扩展中，断言并非唯一使用 DataSet 和 DataTable 的情形。就像上一节中所展示的那样，它们也用于描述数据库的初始内容。数据库 TestCase 类强制要求定义一个基境数据集，随后用它来：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Astels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093337Z" creationid="Wynn" creationdate="20150309T093337Z">
        <seg>Astels</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Astels2003</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093336Z" creationid="Wynn" creationdate="20150309T093336Z">
        <seg>Astels2003</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Astels2006</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031952Z" creationid="Wynn" creationdate="20150330T031952Z">
        <seg>Astels2006</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At this point, the signature is good, but we don't trust this key. A good signature means that the file has not been tampered. However, due to the nature of public key cryptography, you need to additionally verify that key &lt;l0&gt;6372C20A&lt;/l0&gt; was created by the real Sebastian Bergmann.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100332Z" creationid="Wynn" creationdate="20150319T100332Z">
        <seg>此时，签名已经没问题了，但是这个公钥还不能信任。签名没问题意味着文件未被篡改。可是由于公钥加密系统的性质，还需要再校验密钥 &lt;l0&gt;6372C20A&lt;/l0&gt; 确实是由真正的 Sebastian Bergmann 创建的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Authoring testcases is a good impetus for developers to discover edge cases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092601Z" creationid="Wynn" creationdate="20150327T092601Z">
        <seg>编写测试用例对开发者而言是一种很好的发现边缘情况的原动力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automated Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T023509Z" creationid="Wynn" creationdate="20150327T023509Z">
        <seg>Automated Documentation （自动文档）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automated Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030229Z" creationid="Wynn" creationdate="20150330T030229Z">
        <seg>Automated Test （自动测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automating Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025631Z" creationid="Wynn" creationdate="20150330T025631Z">
        <seg>自动化测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Available Implementations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070643Z" creationid="Wynn" creationdate="20150317T070621Z">
        <seg>可用的各种实现</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Backup and restore static attributes of user-defined classes. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095747Z" creationid="Wynn" creationdate="20150327T095747Z">
        <seg>备份并还原用户定义的类中的静态属性。更多细节请参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BankAccount Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050022Z" creationid="Wynn" creationdate="20150330T050022Z">
        <seg>银行账户(BankAccount)的例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be strict about global state manipulation. See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T084207Z" creationid="Wynn" creationdate="20150416T084207Z">
        <seg>更严格对待全局状态篡改。详情参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be strict about output during tests. See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095534Z" creationid="Wynn" creationdate="20150327T095534Z">
        <seg>更严格对待测试执行期间产生的输出。详情参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be strict about tests that do not test anything. See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095356Z" creationid="Wynn" creationdate="20150327T093924Z">
        <seg>更严格对待事实上不测试任何内容的测试。详情参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be strict about unintentionally covered code. See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095426Z" creationid="Wynn" creationdate="20150327T095426Z">
        <seg>更严格对待意外的代码覆盖。详情参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because many database APIs such as PDO, MySQLi or OCI8 are cumbersome to use and verbose in writing doing these steps manually is an absolute nightmare.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082108Z" creationid="Wynn" creationdate="20150310T082108Z">
        <seg>许多数据库 API，比如 PDO、MySQLi 或者 OCI8，都十分繁琐且书写起来十分冗长，因此，手工进行这些步骤绝对是噩梦。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because we are interested in verifying that a method is called, and which arguments it is called with, we introduce the &lt;l0&gt;expects()&lt;/l0&gt; and &lt;l1&gt;with()&lt;/l1&gt; methods to specify how this interaction should look.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085118Z" creationid="Wynn" creationdate="20150327T085118Z">
        <seg>由于关注的是检验某个方法是否被调用，以及调用时具体所使用的参数，因此引入 &lt;l0&gt;expects()&lt;/l0&gt; 与 &lt;l1&gt;with()&lt;/l1&gt; 方法来指明此交互应该是什么样的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beck</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093339Z" creationid="Wynn" creationdate="20150309T093339Z">
        <seg>Beck</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beck2002</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>Beck2002</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Behaviour-Driven Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030701Z" creationid="Wynn" creationdate="20150330T030656Z">
        <seg>行为驱动开发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is the output of running the generated test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043334Z" creationid="Wynn" creationdate="20150330T043334Z">
        <seg>下面是运行生成出来的测试用例类得到的结果：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is the output of running the test against the generated class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043743Z" creationid="Wynn" creationdate="20150330T043743Z">
        <seg>下面是针对所生成的类运行测试的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Benjamin Smedberg</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092546Z" creationid="Wynn" creationdate="20150327T092546Z">
        <seg>Benjamin Smedberg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bergmann</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093344Z" creationid="Wynn" creationdate="20150309T093344Z">
        <seg>Bergmann</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Besides global variables, static attributes of classes are also part of the global state.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T084926Z" creationid="Wynn" creationdate="20150319T084926Z">
        <seg>除了全局变量，类的静态属性也是一种全局状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beware of Foreign Keys</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075501Z" creationid="Wynn" creationdate="20150317T075501Z">
        <seg>当心外键</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bibliography</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T060635Z" creationid="Wynn" creationdate="20150303T060635Z">
        <seg>参考书目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Blacklist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093716Z" creationid="Wynn" creationdate="20150309T093716Z">
        <seg>Blacklist （黑名单）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BowlingGame Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031256Z" creationid="Wynn" creationdate="20150330T031242Z">
        <seg>保龄球游戏(BowlingGame)的例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Branch Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T062751Z" creationid="Wynn" creationdate="20150309T062751Z">
        <seg>分支覆盖率(Branch Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But the tools still force developers to think in terms of tests and assertions instead of specifications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030759Z" creationid="Wynn" creationdate="20150330T030759Z">
        <seg>但是工具依然强迫开发者从测试与断言这方面去考虑，而不是从规格方面去考虑。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, PHPUnit converts PHP errors, warnings, and notices that are triggered during the execution of a test to an exception. Using these exceptions, you can, for instance, expect a test to trigger a PHP error as shown in &lt;x0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024108Z" creationid="Wynn" creationdate="20150330T024108Z">
        <seg>默认情况下，PHPUnit 将测试在执行中触发的 PHP 错误、警告、通知都转换为异常。利用这些异常，就可以，比如说，预期测试将触发 PHP 错误，如&lt;x0/&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, PHPUnit runs your tests in a way where changes to global and super-global variables (&lt;l0&gt;$GLOBALS&lt;/l0&gt;, &lt;l1&gt;$_ENV&lt;/l1&gt;, &lt;l2&gt;$_POST&lt;/l2&gt;, &lt;l3&gt;$_GET&lt;/l3&gt;, &lt;l4&gt;$_COOKIE&lt;/l4&gt;, &lt;l5&gt;$_SERVER&lt;/l5&gt;, &lt;l6&gt;$_FILES&lt;/l6&gt;, &lt;l7&gt;$_REQUEST&lt;/l7&gt;) do not affect other tests. Optionally, this isolation can be extended to static attributes of classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085541Z" creationid="Wynn" creationdate="20150319T085541Z">
        <seg>默认情况下，PHPUnit 用一种更改全局变量与超全局变量(&lt;l0&gt;$GLOBALS&lt;/l0&gt;、&lt;l1&gt;$_ENV&lt;/l1&gt;、&lt;l2&gt;$_POST&lt;/l2&gt;、&lt;l3&gt;$_GET&lt;/l3&gt;、&lt;l4&gt;$_COOKIE&lt;/l4&gt;、&lt;l5&gt;$_SERVER&lt;/l5&gt;、&lt;l6&gt;$_FILES&lt;/l6&gt;、&lt;l7&gt;$_REQUEST&lt;/l7&gt;)不会影响到其他测试的方式来运行所有测试。同时，还可以选择将这种隔离扩展到类的静态属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, PHPUnit will install an error handler that converts the following errors to exceptions:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T081602Z" creationid="Wynn" creationdate="20150309T081602Z">
        <seg>默认情况下，PHPUnit 将会安插一个错误处理函数来将以下错误转换为异常：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, a &lt;e0&gt;blacklist&lt;/e0&gt; is used to exclude files from the code coverage report. This blacklist is pre-filled with the source files of PHPUnit and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T065737Z" creationid="Wynn" creationdate="20150309T065737Z">
        <seg>默认情况下，在生成代码覆盖率报告时会应用一个特定的&lt;e0&gt;黑名单&lt;/e0&gt;来排除某些文件。这个黑名单中包含了 PHPUnit 本身及其所依赖的所有组件的相应源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all methods of the given class are replaced with a test double that just returns &lt;l0&gt;NULL&lt;/l0&gt; unless a return value is configured using &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt;, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044841Z" creationid="Wynn" creationdate="20150330T044841Z">
        <seg>默认情况下，给定类的所有方法都会替换为只会返回 &lt;l0&gt;NULL&lt;/l0&gt; 的测试替身，除非用 &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt; 之类的方法配置了测试替身的返回值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all methods of the original class are replaced with a dummy implementation that just returns &lt;l0&gt;NULL&lt;/l0&gt; (without calling the original method). Using the &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt; method, for instance, you can configure these dummy implementations to return a value when called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043837Z" creationid="Wynn" creationdate="20150330T043837Z">
        <seg>在默认情况下，原始类的所有方法都会被替换为只会返回 &lt;l0&gt;NULL&lt;/l0&gt; 伪实现（其中不会调用原版方法）。使用诸如 &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt; 之类的方法可以对这些山寨实现在被调用时应当返回什么值做出配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all methods of the original class are replaced with a dummy implementation that just returns &lt;l0&gt;null&lt;/l0&gt; (without calling the original method). Using the &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt; method, for instance, you can configure these dummy implementations to return a value when called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074448Z" creationid="Wynn" creationdate="20150327T074448Z">
        <seg>在默认情况下，原版类的所有方法都会被替换为只会返回 &lt;l0&gt;null&lt;/l0&gt; 的伪实现（其中不会调用原版方法）。使用诸如 &lt;l1&gt;will($this-&gt;returnValue())&lt;/l1&gt; 之类的方法可以对这些伪实现在被调用时应当返回什么值做出配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all source files that contain at least one line of code that has been executed (and only these files) are included in the code coverage report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T064421Z" creationid="Wynn" creationdate="20150309T064421Z">
        <seg>默认情况下，代码覆盖率报告中包含（且只包括）所有内含至少一行已执行代码的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all sourcecode files that contain at least one line of code that has been executed (and only these files) are included in the report. The sourcecode files that are included in the report can be filtered by using a blacklist or a whitelist approach.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032733Z" creationid="Wynn" creationdate="20150330T032733Z">
        <seg>默认情况下，报告中包括（且只包括）所有包含至少一行已被执行的代码的源代码文件。可以通过黑名单或者白名单来对报告中包含哪些源代码文件进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all tests are considered to be small if they are not marked as &lt;l0&gt;@medium&lt;/l0&gt; or &lt;l1&gt;@large&lt;/l1&gt;. Please note, however, that &lt;l2&gt;--group&lt;/l2&gt; and the related options will only consider a test to be in the &lt;l3&gt;small&lt;/l3&gt; group if it is explicitly marked with the appropriate annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T055547Z" creationid="Wynn" creationdate="20150303T055547Z">
        <seg>默认情况下，所有未标记为 &lt;l0&gt;@medium&lt;/l0&gt; 或 &lt;l1&gt;@large&lt;/l1&gt; 的测试都视为小型(small)测试。请注意，虽然如此，&lt;l2&gt;--group&lt;/l2&gt; 和有关的选项都只会将用恰当的标注显式标记好的测试视为在 &lt;l3&gt;small&lt;/l3&gt; 组中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By using stubs (see the chapter on "Mock Objects", earlier in this book), you can further decouple yourself from the supplier: The job of the supplier is to make the tests run with the real implementation of the package. Your job is to make the tests run for your own code. Until such time as you have the real implementation of the supplied package, you use stub objects. Following this approach, the two teams can develop independently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024842Z" creationid="Wynn" creationdate="20150327T024842Z">
        <seg>通过使用桩件（参见本书前面关于“仿件对象”的那一章），你可以更好的与供应商解耦：供应商的工作就是让测试能够运行于包的实际实现上；你的工作则是让测试能够运行于你自己的代码上。在你拿到包的实际实现前，使用桩件对象。通过这种方式，两个团队可以互相独立的进行开发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By writing the contract conditions into the tests, we have used Design-by-Contract to program the &lt;l0&gt;BankAccount&lt;/l0&gt; class. We then wrote, following the Test-First Programming approach, the code needed to make the tests pass. However, we forgot to write tests that call &lt;l1&gt;setBalance()&lt;/l1&gt;, &lt;l2&gt;depositMoney()&lt;/l2&gt;, and &lt;l3&gt;withdrawMoney()&lt;/l3&gt; with legal values that do not violate the contract conditions. We need a means to test our tests or at least to measure their quality. Such a means is the analysis of code-coverage information that we will discuss next.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050600Z" creationid="Wynn" creationdate="20150330T050600Z">
        <seg>通过将契约条件写入测试，我们使用契约式设计编制了 &lt;l0&gt;BankAccount&lt;/l0&gt; 类。随后我们遵照测试优先编程方法编写了让测试能通过的代码。然而，我们忘了编写以不会违背契约条件的合法值调用 &lt;l1&gt;setBalance()&lt;/l1&gt;、&lt;l2&gt;depositMoney()&lt;/l2&gt; 和 &lt;l3&gt;withdrawMoney()&lt;/l3&gt; 的测试。我们需要一种手段来测试我们的测试，或者至少是衡量它们的质量。这种方法就是代码覆盖率信息分析，接下来我们将要对它进行讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CSV DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074346Z" creationid="Wynn" creationdate="20150317T074346Z">
        <seg>CSV DataSet （CSV 数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Capturing a screenshot when a test fails</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064000Z" creationid="Wynn" creationdate="20150327T064000Z">
        <seg>当测试失败时截屏</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change Risk Anti-Patterns (CRAP) Index</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T063539Z" creationid="Wynn" creationdate="20150309T063448Z">
        <seg>变更风险反模式(CRAP)指数(Change Risk Anti-Patterns (CRAP) Index)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class and Trait Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T062252Z" creationid="Wynn" creationdate="20150309T062252Z">
        <seg>类与特质覆盖率(Class and Trait Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cleanup the database for each new test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082047Z" creationid="Wynn" creationdate="20150310T082047Z">
        <seg>每个新测试都要清理数据库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Clicking on the line number of a covered line will open a panel (see &lt;x0/&gt;) that shows the test cases that cover this line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032457Z" creationid="Wynn" creationdate="20150330T032457Z">
        <seg>点击已覆盖的代码行的行号将会打开一个面板（参见&lt;x0/&gt;），显示出所有覆盖了本行的测试用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T090405Z" creationid="Wynn" creationdate="20150228T080308Z">
        <seg>Code Coverage （代码覆盖率）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage (TEXT)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035350Z" creationid="Wynn" creationdate="20150320T035350Z">
        <seg>代码覆盖率 (TEXT)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage (XML)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101539Z" creationid="Wynn" creationdate="20150319T101539Z">
        <seg>代码覆盖率 (XML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage Analysis</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035935Z" creationid="Wynn" creationdate="20150309T035935Z">
        <seg>代码覆盖率分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage for &lt;l0&gt;setBalance()&lt;/l0&gt; with additional test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032709Z" creationid="Wynn" creationdate="20150330T032709Z">
        <seg>加上附加方法之后 &lt;l0&gt;setBalance()&lt;/l0&gt; 的代码覆盖情况&lt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage for setBalance()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032417Z" creationid="Wynn" creationdate="20150330T032417Z">
        <seg>setBalance() 的代码覆盖情况</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage output on the command-line with colors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042649Z" creationid="Wynn" creationdate="20150330T042649Z">
        <seg>彩色的命令行代码覆盖率输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code Coverage will only be recorded for tests that use the &lt;l0&gt;@covers&lt;/l0&gt; annotation documented in &lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T082230Z" creationid="Wynn" creationdate="20150309T082230Z">
        <seg>只记录使用了 &lt;l0&gt;@covers&lt;/l0&gt; 标注（文档参见&lt;x1/&gt;）的测试的代码覆盖率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code needed for the testBalanceIsInitiallyZero() test to pass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050220Z" creationid="Wynn" creationdate="20150330T050220Z">
        <seg>让 testBalanceIsInitiallyZero() 测试能够通过的代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Combination of @depends and @dataProvider in same test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102405Z" creationid="Wynn" creationdate="20150327T102405Z">
        <seg>在同一个测试中组合使用 @depends 和 @dataProvider</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command-Line Options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093012Z" creationid="Wynn" creationdate="20150327T093012Z">
        <seg>命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comparing expected and actual values to test array operations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030141Z" creationid="Wynn" creationdate="20150330T030141Z">
        <seg>通过比较预期值与实际值来测试数组操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Composable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041114Z" creationid="Wynn" creationdate="20150330T041114Z">
        <seg>可组合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Composer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100347Z" creationid="Wynn" creationdate="20150319T100347Z">
        <seg>Composer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Composing a Test Suite Using XML Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040000Z" creationid="Wynn" creationdate="20150320T040000Z">
        <seg>用 XML 配置来编排测试套件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Composing a Test Suite Using the Filesystem</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035656Z" creationid="Wynn" creationdate="20150320T035656Z">
        <seg>用文件系统来编排测试套件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Composite DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075323Z" creationid="Wynn" creationdate="20150317T075323Z">
        <seg>Composite DataSet （组合数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100522Z" creationid="Wynn" creationdate="20150327T100522Z">
        <seg>Configuration （配置）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration of a PHPUnit Database TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094433Z" creationid="Wynn" creationdate="20150316T094433Z">
        <seg>PHPUnit 数据库测试用例的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring Browsers for Selenium RC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075758Z" creationid="Wynn" creationdate="20150310T075758Z">
        <seg>为 Selenium RC 配置浏览器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constant</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075418Z" creationid="Wynn" creationdate="20150310T075418Z">
        <seg>Constant （常量）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083120Z" creationid="Wynn" creationdate="20150306T083120Z">
        <seg>约束条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that accepts any input value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083155Z" creationid="Wynn" creationdate="20150306T083155Z">
        <seg>此约束接受任意输入值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that applies another constraint to an attribute of a class or an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083149Z" creationid="Wynn" creationdate="20150306T083149Z">
        <seg>此约束将另外一个约束应用于某个类或对象的某个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that one value is identical to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083538Z" creationid="Wynn" creationdate="20150306T083538Z">
        <seg>此约束断言所评定的值与另外一个值全等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the &lt;l0&gt;array&lt;/l0&gt; or object that implements the &lt;l1&gt;Iterator&lt;/l1&gt; interface it is evaluated for contains a given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083240Z" creationid="Wynn" creationdate="20150306T083240Z">
        <seg>此约束断言所评定的 &lt;l0&gt;array&lt;/l0&gt; 或实现了 &lt;l1&gt;Iterator&lt;/l1&gt; 接口的对象包含有给定值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the &lt;l0&gt;array&lt;/l0&gt; or object that implements the &lt;l1&gt;Iterator&lt;/l1&gt; interface it is evaluated for contains only instances of a given classname.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083350Z" creationid="Wynn" creationdate="20150306T083350Z">
        <seg>此约束断言所评定的 &lt;l0&gt;array&lt;/l0&gt; 或实现了 &lt;l1&gt;Iterator&lt;/l1&gt; 接口的对象仅包含给定类名的类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the &lt;l0&gt;array&lt;/l0&gt; or object that implements the &lt;l1&gt;Iterator&lt;/l1&gt; interface it is evaluated for contains only values of a given type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083322Z" creationid="Wynn" creationdate="20150306T083322Z">
        <seg>此约束断言所评定的 &lt;l0&gt;array&lt;/l0&gt; 或实现了 &lt;l1&gt;Iterator&lt;/l1&gt; 接口的对象仅包含给定类型的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the array it is evaluated for has a given key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083205Z" creationid="Wynn" creationdate="20150306T083205Z">
        <seg>此约束断言所评定的数组拥有指定键名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the class it is evaluated for has a given attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083518Z" creationid="Wynn" creationdate="20150306T083518Z">
        <seg>此约束断言所评定的类具有给定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the class it is evaluated for has a given static attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083526Z" creationid="Wynn" creationdate="20150306T083526Z">
        <seg>此约束断言所评定的类具有给定静态属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the object it is evaluated for has a given attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083533Z" creationid="Wynn" creationdate="20150306T083533Z">
        <seg>此约束断言所评定的对象具有给定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the object it is evaluated for is an instance of a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083553Z" creationid="Wynn" creationdate="20150306T083553Z">
        <seg>此约束断言所评定的对象是给定类的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the string it is evaluated for contains a given string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034108Z" creationid="Wynn" creationdate="20150309T034108Z">
        <seg>此约束断言所评定的字符串包含指定字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the string it is evaluated for ends with a given suffix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034113Z" creationid="Wynn" creationdate="20150309T034113Z">
        <seg>此约束断言所评定的字符串以给定后缀结尾。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the string it is evaluated for matches a regular expression.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034101Z" creationid="Wynn" creationdate="20150309T034101Z">
        <seg>此约束断言所评定的字符串匹配于正则表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the string it is evaluated for starts with a given prefix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034124Z" creationid="Wynn" creationdate="20150309T034124Z">
        <seg>此约束断言所评定的字符串以给定前缀开头。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated for is greater than a given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083507Z" creationid="Wynn" creationdate="20150306T083507Z">
        <seg>此约束断言所评定的值大于给定值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated for is greater than or equal to a given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083512Z" creationid="Wynn" creationdate="20150306T083512Z">
        <seg>此约束断言所评定的值大于或等于给定值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated for is of a specified type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094426Z" creationid="Wynn" creationdate="20150306T094426Z">
        <seg>此约束断言所评定的值是指定类型的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated for is smaller than a given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094439Z" creationid="Wynn" creationdate="20150306T094439Z">
        <seg>此约束断言所评定的值小于给定值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated for is smaller than or equal to a given value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094507Z" creationid="Wynn" creationdate="20150306T094507Z">
        <seg>此约束断言所评定的值小于或等于给定值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated is &lt;l0&gt;FALSE&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083547Z" creationid="Wynn" creationdate="20150306T083547Z">
        <seg>此约束断言所评定的值为 &lt;l0&gt;FALSE&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated is &lt;l0&gt;NULL&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094347Z" creationid="Wynn" creationdate="20150306T094347Z">
        <seg>此约束断言所评定的值为 &lt;l0&gt;NULL&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that asserts that the value it is evaluated is &lt;l0&gt;TRUE&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094412Z" creationid="Wynn" creationdate="20150306T094412Z">
        <seg>此约束断言所评定的值为 &lt;l0&gt;TRUE&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that checks if a value is equal to an attribute of a class or of an object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083424Z" creationid="Wynn" creationdate="20150306T083424Z">
        <seg>此约束检验一个值是否等于某个类或对象的某个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that checks if one value is equal to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083410Z" creationid="Wynn" creationdate="20150306T083410Z">
        <seg>此约束检验一个值是否等于另外一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraint that checks if the file(name) that it is evaluated for exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083454Z" creationid="Wynn" creationdate="20150306T083454Z">
        <seg>此约束检验所评定的文件名对应的文件是否存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Constraints</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083110Z" creationid="Wynn" creationdate="20150306T083110Z">
        <seg>约束条件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy &lt;f0&gt;PHPUnit/Extensions/SeleniumCommon/phpunit_coverage.php&lt;/f0&gt; into your webserver's document root directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064213Z" creationid="Wynn" creationdate="20150327T064213Z">
        <seg>将 &lt;f0&gt;PHPUnit/Extensions/SeleniumCommon/phpunit_coverage.php&lt;/f0&gt; 复制到 web 服务器文档根目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a directory for PHP binaries; e.g., &lt;f0&gt;C:\bin&lt;/f0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095442Z" creationid="Wynn" creationdate="20150319T095442Z">
        <seg>为 PHP 的二进制可执行文件建立一个目录，例如 &lt;f0&gt;C:\bin&lt;/f0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a mock object with cloning parameters enabled</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090114Z" creationid="Wynn" creationdate="20150327T090114Z">
        <seg>创建仿件对象时启用参数克隆</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a wrapping batch script (results in &lt;f0&gt;C:\bin\phpunit.cmd&lt;/f0&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095639Z" creationid="Wynn" creationdate="20150319T095639Z">
        <seg>建立外包覆批处理脚本（最后得到 &lt;f0&gt;C:\bin\phpunit.cmd&lt;/f0&gt;）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cross-Team Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024511Z" creationid="Wynn" creationdate="20150327T024511Z">
        <seg>跨团队测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Current working directory will be restored after each test case</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042132Z" creationid="Wynn" creationdate="20150330T042132Z">
        <seg>当前工作目录将会在每个测试用例之后还原</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dan North</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045828Z" creationid="Wynn" creationdate="20150330T045828Z">
        <seg>Dan North</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Data Providers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102017Z" creationid="Wynn" creationdate="20150327T102017Z">
        <seg>数据供给器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Data-Driven Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T074224Z" creationid="Wynn" creationdate="20150319T074224Z">
        <seg>Data-Driven Tests （数据驱动测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DataSet Filter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075351Z" creationid="Wynn" creationdate="20150317T075154Z">
        <seg>DataSet Filter （数据集筛选器）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Database (DB) Dataset</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074926Z" creationid="Wynn" creationdate="20150317T074926Z">
        <seg>Database (DB) Dataset （数据库数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Database Assertions API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090437Z" creationid="Wynn" creationdate="20150318T090437Z">
        <seg>数据库断言 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Database Testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075921Z" creationid="Wynn" creationdate="20150310T075921Z">
        <seg>数据库测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dave Astels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030801Z" creationid="Wynn" creationdate="20150330T030801Z">
        <seg>Dave Astels</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>David</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093337Z" creationid="Wynn" creationdate="20150309T093337Z">
        <seg>David</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DbUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100728Z" creationid="Wynn" creationdate="20150319T100728Z">
        <seg>DbUnit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DbUnit currently supports MySQL, PostgreSQL, Oracle and SQLite. Through &lt;u0&gt;Zend Framework&lt;/u0&gt; or &lt;u1&gt;Doctrine 2&lt;/u1&gt; integrations it has access to other database systems such as IBM DB2 or Microsoft SQL Server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081726Z" creationid="Wynn" creationdate="20150310T081726Z">
        <seg>DbUnit 目前支持 MySQL、PostgreSQL、Oracle 和 SQLite。通过集成 &lt;u0&gt;Zend Framework&lt;/u0&gt; 或 &lt;u1&gt;Doctrine 2&lt;/u1&gt;，也可以访问其他数据库系统，比如 IBM DB2 或者 Microsoft SQL Server。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DbUnit helps to simplify all these problems with database testing in an elegant way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T063057Z" creationid="Wynn" creationdate="20150313T063057Z">
        <seg>DbUnit 以一种优雅的方式来帮助简化数据库测试中的所有这些问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DbUnit port for PHP/PHPUnit to support database interaction testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100734Z" creationid="Wynn" creationdate="20150319T100734Z">
        <seg>移植到 PHP/PHPUnit 上的 DbUnit 用于提供对数据库交互测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default value of &lt;l0&gt;cacheTokens&lt;/l0&gt; changed to &lt;l1&gt;false&lt;/l1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042400Z" creationid="Wynn" creationdate="20150330T042400Z">
        <seg>&lt;l0&gt;cacheTokens&lt;/l0&gt; 的默认值改为 &lt;l1&gt;false&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defect Localization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101837Z" creationid="Wynn" creationdate="20150327T101837Z">
        <seg>Defect Localization （缺陷定位）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the number of columns to use for progress output. If &lt;l0&gt;max&lt;/l0&gt; is defined as value, the number of columns will be maximum of the current terminal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T035020Z" creationid="Wynn" creationdate="20150924T035020Z">
        <seg>定义输出所使用的列数。如果将其值定义为 &lt;l0&gt;max&lt;/l0&gt;，则使用当前终端所支持的最大列数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delete all the rows from the tables specified in the dataset.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070620Z" creationid="Wynn" creationdate="20150317T070620Z">
        <seg>根据此数据集所指定的所有表名，将数据库中对应表内的行全部删除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depended-On Component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074341Z" creationid="Wynn" creationdate="20150327T074341Z">
        <seg>Depended-On Component （依赖组件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depending on the implementation different approaches are taken to add table instances to a dataset. For example, tables are added internally during construction from the source file in all file-based datasets such as &lt;l0&gt;YamlDataSet&lt;/l0&gt;, &lt;l1&gt;XmlDataSet&lt;/l1&gt; or &lt;l2&gt;FlatXmlDataSet&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075831Z" creationid="Wynn" creationdate="20150317T075831Z">
        <seg>根据具体实现的不同，要采取不同的方法来将表实例添加到数据集中。例如，在所有基于文件的数据集中，表都是在构造过程中直接从源文件生成并加入数据集中，比如 &lt;l0&gt;YamlDataSet&lt;/l0&gt;、&lt;l1&gt;XmlDataSet&lt;/l1&gt; 和 &lt;l2&gt;FlatXmlDataSet&lt;/l2&gt;均是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080735Z" creationid="Wynn" creationdate="20150228T080729Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design-by-Contract</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045710Z" creationid="Wynn" creationdate="20150330T045710Z">
        <seg>Design-by-Contract （契约式设计）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Difficulties in Database Testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081738Z" creationid="Wynn" creationdate="20150310T081738Z">
        <seg>数据库测试的难点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not backup and restore $GLOBALS. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095723Z" creationid="Wynn" creationdate="20150327T095710Z">
        <seg>不要备份并还原 $GLOBALS。更多细节请参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not do this. Instead, you should use either the XML or the YAML DataSets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042603Z" creationid="Wynn" creationdate="20150319T042603Z">
        <seg>别这么干。应当改用 XML 或者 YAML 数据集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Documenting Assumptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024503Z" creationid="Wynn" creationdate="20150327T024427Z">
        <seg>Documenting Assumptions （将假设文档化）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does not execute tests which have the &lt;l0&gt;@todo&lt;/l0&gt; annotation in its docblock.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095548Z" creationid="Wynn" creationdate="20150327T095548Z">
        <seg>不执行文档注释块中含有 &lt;l0&gt;@todo&lt;/l0&gt; 标注的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Domain-Driven Design</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030902Z" creationid="Wynn" creationdate="20150330T030902Z">
        <seg>Domain-Driven Design （领域驱动设计）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download &lt;u0/&gt; and save the file as &lt;f1&gt;C:\bin\phpunit.phar&lt;/f1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095553Z" creationid="Wynn" creationdate="20150319T095553Z">
        <seg>下载 &lt;u0/&gt; 并将文件保存到 &lt;f1&gt;C:\bin\phpunit.phar&lt;/f1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download a distribution archive of &lt;u0&gt;Selenium Server&lt;/u0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032506Z" creationid="Wynn" creationdate="20150327T032506Z">
        <seg>下载 &lt;u0&gt;Selenium Server&lt;/u0&gt; 的分发档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During Debugging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092516Z" creationid="Wynn" creationdate="20150327T092516Z">
        <seg>在调试过程中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092427Z" creationid="Wynn" creationdate="20150327T092252Z">
        <seg>在开发过程中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During Fixture SetUp PHPUnit's Database Extension inserts the rows into the database in the order they are specified in your fixture. If your database schema uses foreign keys this means you have to specify the tables in an order that does not cause foreign key constraints to fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075509Z" creationid="Wynn" creationdate="20150317T075509Z">
        <seg>在建立基境的过程中， PHPUnit 的数据库扩展模块按照基境中所指定的顺序将数据行插入到数据库内。假如数据库中使用了外键，这就意味着必须指定好表的顺序，以避免外键约束失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092750Z" creationid="Wynn" creationdate="20150327T092750Z">
        <seg>E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_DEPRECATED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093415Z" creationid="Wynn" creationdate="20150309T093415Z">
        <seg>E_DEPRECATED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_NOTICE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093413Z" creationid="Wynn" creationdate="20150309T093413Z">
        <seg>E_NOTICE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_RECOVERABLE_ERROR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093414Z" creationid="Wynn" creationdate="20150309T093414Z">
        <seg>E_RECOVERABLE_ERROR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_STRICT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093414Z" creationid="Wynn" creationdate="20150309T093414Z">
        <seg>E_STRICT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_USER_DEPRECATED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093416Z" creationid="Wynn" creationdate="20150309T093416Z">
        <seg>E_USER_DEPRECATED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_USER_ERROR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093413Z" creationid="Wynn" creationdate="20150309T093413Z">
        <seg>E_USER_ERROR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_USER_NOTICE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093414Z" creationid="Wynn" creationdate="20150309T093414Z">
        <seg>E_USER_NOTICE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_USER_WARNING</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093413Z" creationid="Wynn" creationdate="20150309T093413Z">
        <seg>E_USER_WARNING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>E_WARNING</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093413Z" creationid="Wynn" creationdate="20150309T093413Z">
        <seg>E_WARNING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each method in the original class is checked for &lt;l0&gt;@assert&lt;/l0&gt; annotations. These are transformed into test code such as</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043431Z" creationid="Wynn" creationdate="20150330T043431Z">
        <seg>生成器会检查原始类中的每个方法查找 &lt;l0&gt;@assert&lt;/l0&gt; 标注。这些标注将会转换为测试代码，诸如</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041045Z" creationid="Wynn" creationdate="20150330T041045Z">
        <seg>执行方便。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy to learn to write versus easy to write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041125Z" creationid="Wynn" creationdate="20150330T041125Z">
        <seg>易于学习编写 VS 易于编写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy to learn to write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041024Z" creationid="Wynn" creationdate="20150330T041024Z">
        <seg>易于学习编写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041037Z" creationid="Wynn" creationdate="20150330T041037Z">
        <seg>易于阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Easy to write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041030Z" creationid="Wynn" creationdate="20150330T041030Z">
        <seg>易于编写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edge Cases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T071432Z" creationid="Wynn" creationdate="20150309T071432Z">
        <seg>边缘情况</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edge case in the diff generation when using weak comparison</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025049Z" creationid="Wynn" creationdate="20150330T025037Z">
        <seg>当使用弱比较时在生成的差异结果中出现的边缘情况</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edge cases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025030Z" creationid="Wynn" creationdate="20150330T025030Z">
        <seg>边缘情况</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 3.7. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032016Z" creationid="Wynn" creationdate="20150330T032016Z">
        <seg>此版本对应于 PHPUnit 3.7。 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.0. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061326Z" creationid="Wynn" creationdate="20150330T061326Z">
        <seg>此版本对应于 PHPUnit 4.0. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.1. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062725Z" creationid="Wynn" creationdate="20150330T062725Z">
        <seg>此版本对应于 PHPUnit 4.1. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.2. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063117Z" creationid="Wynn" creationdate="20150330T063117Z">
        <seg>此版本对应于 PHPUnit 4.2. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.3. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063337Z" creationid="Wynn" creationdate="20150330T063337Z">
        <seg>此版本对应于 PHPUnit 4.3. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.4. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063508Z" creationid="Wynn" creationdate="20150330T063508Z">
        <seg>此版本对应于 PHPUnit 4.4. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.5. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063644Z" creationid="Wynn" creationdate="20150330T063644Z">
        <seg>此版本对应于 PHPUnit 4.5. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.6. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035739Z" creationid="Wynn" creationdate="20150309T035739Z">
        <seg>此版本对应于 PHPUnit 4.6. 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.7. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091118Z" creationid="Wynn" creationdate="20150817T091118Z">
        <seg>此版本对应于 PHPUnit 4.7。最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 4.8. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091127Z" creationid="Wynn" creationdate="20150817T091127Z">
        <seg>此版本对应于 PHPUnit 4.8。最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 5.0. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T091144Z" creationid="Wynn" creationdate="20150817T091144Z">
        <seg>此版本对应于 PHPUnit 5.0。最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 5.1. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T082655Z" creationid="Wynn" creationdate="20150817T082655Z">
        <seg>此版本对应于 PHPUnit 5.1。 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 5.2. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082638Z" creationid="Wynn" creationdate="20151020T082638Z">
        <seg>此版本对应于 PHPUnit 5.2。最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edition for PHPUnit 5.3. Updated on &lt;cp0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030442Z" creationid="Wynn" creationdate="20151214T030442Z">
        <seg>此版本对应于 PHPUnit 5.3。 最后更新于 &lt;cp0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enforce time limit based on test size. See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095608Z" creationid="Wynn" creationdate="20150327T095608Z">
        <seg>根据测试规模对其加上执行时长限制。详情参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Erich Gamma</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092234Z" creationid="Wynn" creationdate="20150327T092234Z">
        <seg>Erich Gamma</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092840Z" creationid="Wynn" creationdate="20150327T092840Z">
        <seg>Error （错误）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error Handler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024031Z" creationid="Wynn" creationdate="20150330T024031Z">
        <seg>Error Handler （错误处理）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024939Z" creationid="Wynn" creationdate="20150330T024939Z">
        <seg>错误相关信息的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error output generated when an array comparison fails</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024948Z" creationid="Wynn" creationdate="20150330T024948Z">
        <seg>数组比较失败时生成的错误相关信息输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error output when an array comparison of an long array fails</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025016Z" creationid="Wynn" creationdate="20150330T025016Z">
        <seg>长数组比较失败时生成的错误相关信息输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even good programmers make mistakes. The difference between a good programmer and a bad programmer is that the good programmer uses tests to detect mistakes as soon as possible. The sooner you test for a mistake the greater your chance of finding it and the less it will cost to find and fix. This explains why leaving testing until just before releasing software is so problematic. Most errors do not get caught at all, and the cost of fixing the ones you do catch is so high that you have to perform triage with the errors because you just cannot afford to fix them all.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025637Z" creationid="Wynn" creationdate="20150330T025637Z">
        <seg>再好的程序员也会犯错。好程序员不同于差程序员之处在于他们通过测试来尽早发现错误。测试进行的越早，发现错误的机会就越大，发现和修正的代价就越小。因此临近软件发布才进行测试是很有问题的做法。大多数错误都未能发现，而已发现的那些错误，修正它们的代价实在太大，于是根本不可能把它们全部修复，只能挑着处理其中的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example showing all template methods available</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081246Z" creationid="Wynn" creationdate="20150319T081235Z">
        <seg>展示所有可用模板方法的例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092439Z" creationid="Wynn" creationdate="20150319T092439Z">
        <seg>范例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except the &lt;l0&gt;getTableMetaData()&lt;/l0&gt; method it is pretty self-explainatory. The used methods are all required for the different assertions of the Database Extension that are explained in the next chapter. The &lt;l1&gt;getTableMetaData()&lt;/l1&gt; method has to return an implementation of the &lt;l2&gt;PHPUnit_Extensions_Database_DataSet_ITableMetaData&lt;/l2&gt; interface, which describes the structure of the table. It holds information on:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080036Z" creationid="Wynn" creationdate="20150317T080036Z">
        <seg>除了 &lt;l0&gt;getTableMetaData()&lt;/l0&gt; 方法之外，这个接口是一目了然的。数据库扩展模块中的各种断言（将于下一章中介绍）用到了所有这些方法，因此它们全部都是必需的。&lt;l1&gt;getTableMetaData()&lt;/l1&gt; 方法需要返回一个实现了 &lt;l2&gt;PHPUnit_Extensions_Database_DataSet_ITableMetaData&lt;/l2&gt; 接口的描述表结构的对象。这个对象包含如下信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exception</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T055407Z" creationid="Wynn" creationdate="20160113T041039Z">
        <seg>Exception（异常）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exclude tests from the specified group(s). A test can be tagged as belonging to a group using the &lt;l0&gt;@group&lt;/l0&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093850Z" creationid="Wynn" creationdate="20150327T093850Z">
        <seg>排除来自指定分组（可以多个）的测试。可以用 &lt;l0&gt;@group&lt;/l0&gt; 标注为测试标记其所属的分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exercise System Under Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065815Z" creationid="Wynn" creationdate="20150313T065815Z">
        <seg>执行被测系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expecting a PHP error using @expectedException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024133Z" creationid="Wynn" creationdate="20150330T024133Z">
        <seg>用 @expectedException 来预期 PHP 错误</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Expecting an exception to be raised by the tested code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103106Z" creationid="Wynn" creationdate="20150327T103106Z">
        <seg>预期被测代码将引发异常</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exploiting the dependencies between tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101900Z" creationid="Wynn" creationdate="20150327T101900Z">
        <seg>利用测试之间的依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extending PHPUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042613Z" creationid="Wynn" creationdate="20150319T042613Z">
        <seg>扩展 PHPUnit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extreme Programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T023517Z" creationid="Wynn" creationdate="20150327T023517Z">
        <seg>Extreme Programming （极限编程）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092743Z" creationid="Wynn" creationdate="20150327T092743Z">
        <seg>F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Failure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092845Z" creationid="Wynn" creationdate="20150327T092845Z">
        <seg>Failure （失败）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File-Based DataSets and DataTables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070724Z" creationid="Wynn" creationdate="20150317T070724Z">
        <seg>基于文件的 DataSet 和 DataTable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filter and Composition DataSets and DataTables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070745Z" creationid="Wynn" creationdate="20150317T070745Z">
        <seg>筛选与组合 DataSet 和 DataTable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filter pattern examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093714Z" creationid="Wynn" creationdate="20150327T093714Z">
        <seg>过滤器模式例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filter shortcuts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093735Z" creationid="Wynn" creationdate="20150327T093735Z">
        <seg>过滤器的快捷方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Find the smallest-scale demonstration of the defect in the code. For example, if a number appears incorrectly in an output, find the object that is computing that number.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092533Z" creationid="Wynn" creationdate="20150327T092533Z">
        <seg>在代码中寻找此缺陷的最小规模表达。例如，如果在输出中有一个数字看起来不对，那么就寻找算出此数字的那个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finding the smallest reliable reproduction of the defect gives you the opportunity to really examine the cause of the defect. The test you write will improve the chances that when you fix the defect, you really fix it, because the new test reduces the likelihood of undoing the fix with future code changes. All the tests you wrote before reduce the likelihood of inadvertently causing a different problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092545Z" creationid="Wynn" creationdate="20150327T092545Z">
        <seg>寻找缺陷的最小可靠重现使你有机会去真正检查缺陷的原因。当修复了缺陷之后，所编写的测试则有助于提高缺陷真正被修复的几率，因为新加入的测试降低了未来修改代码时又破坏此修复的可能性。而之前所编写的所有测试则降低了在不经意间导致其他问题的可能性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, install the Selenium Server:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032450Z" creationid="Wynn" creationdate="20150327T032450Z">
        <seg>首先，安装 Selenium Server：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fix the defect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092541Z" creationid="Wynn" creationdate="20150327T092541Z">
        <seg>修复缺陷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fixture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075722Z" creationid="Wynn" creationdate="20150319T075722Z">
        <seg>Fixture （基境）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fixtures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075714Z" creationid="Wynn" creationdate="20150319T075714Z">
        <seg>基境(fixture)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Flat XML DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070918Z" creationid="Wynn" creationdate="20150317T070918Z">
        <seg>Flat XML DataSet （平直 XML 数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fluent Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074803Z" creationid="Wynn" creationdate="20150327T074803Z">
        <seg>Fluent Interface （流畅式接口）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Following the convention that the tests for a class &lt;l0&gt;Unit&lt;/l0&gt; are written in a class named &lt;l1&gt;UnitTest&lt;/l1&gt;, the test case class' source is searched for variables that reference objects of the &lt;l2&gt;Unit&lt;/l2&gt; class and analyzing what methods are called on these objects. For example, take a look at &lt;x3/&gt; which has been generated based on the analysis of &lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043702Z" creationid="Wynn" creationdate="20150330T043702Z">
        <seg>按照惯例，针对 &lt;l0&gt;Unit&lt;/l0&gt; 类的测试应当写在名为 &lt;l1&gt;UnitTest&lt;/l1&gt; 的类中。PHPUnit 将会测试用例类的源代码，寻找引用了 &lt;l2&gt;Unit&lt;/l2&gt; 类的对象的变量，并分析在这些对象上调用了什么方法。例如，&lt;x3/&gt; 是基于对 &lt;x4/&gt; 的分析而生成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Cygwin and/or MingW32 (e.g., TortoiseGit) shell environments, you may skip step 5. above, simply save the file as &lt;f0&gt;phpunit&lt;/f0&gt; (without &lt;f1&gt;.phar&lt;/f1&gt; extension), and make it executable via &lt;u2&gt;chmod 775 phpunit&lt;/u2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100000Z" creationid="Wynn" creationdate="20150319T100000Z">
        <seg>对于 Cygwin 或 MingW32 (例如 TortoiseGit) shell 环境，可以跳过第五步。 取而代之的是，把文件保存为 &lt;f0&gt;phpunit&lt;/f0&gt; （没有 &lt;f1&gt;.phar&lt;/f1&gt; 扩展名），然后用 &lt;u2&gt;chmod 775 phpunit&lt;/u2&gt; 将其设为可执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a system-wide installation via Composer, you can run:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100513Z" creationid="Wynn" creationdate="20150319T100513Z">
        <seg>要通过 Composer 完成系统级的安装，可以运行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a testing tool the Database Extension surely provides some assertions that you can use to verify the current state of the database, tables and the row-count of tables. This section describes this functionality in detail:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084545Z" creationid="Wynn" creationdate="20150817T084545Z">
        <seg>作为测试工具，数据库扩展模块理所当然会提供一些断言，可以用来验证数据库的当前状态、表的当前状态、表中数据行的数量。本节将详细描述这部分功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For code coverage support, &lt;u0&gt;Xdebug&lt;/u0&gt; 2.1.3 is required; using the latest version of Xdebug is highly recommended. The &lt;u1&gt;tokenizer&lt;/u1&gt; extension is also required for the code coverage functionality to work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041443Z" creationid="Wynn" creationdate="20150330T041443Z">
        <seg>如果需要支持代码覆盖率分析，需要 &lt;u0&gt;Xdebug&lt;/u0&gt; 2.1.3，强烈推荐使用最新版本的 Xdebug。另外，代码覆盖率分析功能还需要有&lt;u1&gt;tokenizer&lt;/u1&gt; 扩展才能工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For code coverage support, &lt;u0&gt;Xdebug&lt;/u0&gt; 2.1.3 is required; using the latest version of Xdebug is highly recommended. The &lt;u1&gt;tokenizer&lt;/u1&gt; extension is also required for the code coverage functionality to work. The &lt;u2&gt;xmlwriter&lt;/u2&gt; extension is required to log code coverage information as XML.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061648Z" creationid="Wynn" creationdate="20150330T061648Z">
        <seg>如果需要支持代码覆盖率分析，需要 &lt;u0&gt;Xdebug&lt;/u0&gt; 2.1.3，强烈推荐使用最新版本的 Xdebug。另外，代码覆盖率分析功能还需要有&lt;u1&gt;tokenizer&lt;/u1&gt; 扩展才能工作。如果要将代码覆盖率信息以 XML 格式记录下来，需要有 &lt;u2&gt;xmlwriter&lt;/u2&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For database assertions you do not only need the file-based datasets but also a Query/SQL based Dataset that contains the actual contents of the database. This is where the Query DataSet shines:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074748Z" creationid="Wynn" creationdate="20150317T074748Z">
        <seg>对于数据库断言，不仅需要有基于文件的 DataSet，同时也需要有一种内含数据库实际内容的基于查询/SQL 的 DataSet。Query DataSet 在此闪亮登场：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each method in the original class, there will be an incomplete test case (see &lt;x0/&gt;) in the generated test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043225Z" creationid="Wynn" creationdate="20150330T043225Z">
        <seg>原始类中的每一个方法在生成的测试用例类中都会有一个对应的标为不完整的测试用例（参见&lt;x0/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each test run, the PHPUnit command-line tool prints one character to indicate progress:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092735Z" creationid="Wynn" creationdate="20150327T092735Z">
        <seg>对于每个测试的运行，PHPUnit 命令行工具输出一个字符来指示进展：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, for a class &lt;l0&gt;Calculator&lt;/l0&gt; that is declared in the &lt;l1&gt;project&lt;/l1&gt; namespace you need to invoke the skeleton generator like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043325Z" creationid="Wynn" creationdate="20150330T043325Z">
        <seg>例如，对于声明在 &lt;l1&gt;project&lt;/l1&gt; 命名空间中的 &lt;l0&gt;Calculator&lt;/l0&gt; 类，需要像这样调用骨架生成器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more fine-grained control of which tests to run we can use the &lt;l0&gt;--filter&lt;/l0&gt; option:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035925Z" creationid="Wynn" creationdate="20150320T035925Z">
        <seg>如果想要对运行哪些测试有更细粒度的控制，可以使用 &lt;l0&gt;--filter&lt;/l0&gt; 选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For sure you can assert the state of multiple tables at once and compare a query dataset against a file based dataset. There are two different ways for DataSet assertions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042236Z" creationid="Wynn" creationdate="20150319T042236Z">
        <seg>当然可以一次性对多个表的状态作出断言，并将查询数据集与基于文件的数据集进行比较。有两种不同的方式来进行数据集断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the implementation we only need to know that the &lt;l0&gt;getDataSet()&lt;/l0&gt; method is called once during &lt;l1&gt;setUp()&lt;/l1&gt; to retrieve the fixture data-set and insert it into the database. In the example we are using a factory method &lt;l2&gt;createFlatXMLDataSet($filename)&lt;/l2&gt; that represents a data-set through an XML representation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095822Z" creationid="Wynn" creationdate="20150316T095822Z">
        <seg>对于具体实现，只需要知道 &lt;l1&gt;setUp()&lt;/l1&gt; 中会调用一次 &lt;l0&gt;getDataSet()&lt;/l0&gt; 方法来接收基境数据集并将其插入数据库。在范例中使用了工厂方法 &lt;l2&gt;createFlatXMLDataSet($filename)&lt;/l2&gt;，它代表一个用 XML 表示的数据集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the most part it can safely be said that PHPUnit offers you "line based" code coverage information but due to how that information is collected there are some noteworthy edge cases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T033039Z" creationid="Wynn" creationdate="20150330T033039Z">
        <seg>大多数情况下可以放心地说 PHPUnit 提供的是“基于行的”代码覆盖率信息。不过鉴于搜集信息的方式，有一些值得注意的边缘情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the tests that ensure the second contract condition to pass, we now need to implement the &lt;l0&gt;withdrawMoney()&lt;/l0&gt;, &lt;l1&gt;depositMoney()&lt;/l1&gt;, and &lt;l2&gt;setBalance()&lt;/l2&gt; methods, as shown in &lt;x3/&gt;. These methods are written in a such a way that they raise an &lt;l4&gt;BankAccountException&lt;/l4&gt; when they are called with illegal values that would violate the contract conditions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050350Z" creationid="Wynn" creationdate="20150330T050350Z">
        <seg>为了让确保第二个契约条件的测试能够通过，需要实现 &lt;l0&gt;withdrawMoney()&lt;/l0&gt;、&lt;l1&gt;depositMoney()&lt;/l1&gt; 和 &lt;l2&gt;setBalance()&lt;/l2&gt; 方法，如&lt;x3/&gt;中所示。这些方法是这样编写的：如果使用某些会导致违背契约条件的非法值进行调用，就抛出 &lt;l4&gt;BankAccountException&lt;/l4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this dataset like the Flat XML, CSV and YAML DataSets the keys of the first specified row define the table's column names, in the previous case this would be &lt;q0&gt;id&lt;/q0&gt;, &lt;q1&gt;content&lt;/q1&gt;, &lt;q2&gt;user&lt;/q2&gt; and &lt;q3&gt;created&lt;/q3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074647Z" creationid="Wynn" creationdate="20150317T074647Z">
        <seg>对于这种 DataSet 而言，和平直 XML、CSV、YAML DataSet 一样，表的列名信息由第一个指定的行的键名定义。在上面这个例子里，就是 &lt;q0&gt;id&lt;/q0&gt;、&lt;q1&gt;content&lt;/q1&gt;、&lt;q2&gt;user&lt;/q2&gt; 和 &lt;q3&gt;created&lt;/q3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this we would define a Query Table instance which derives its content from a table name and SQL query and compare it to a File/Array Based Data Set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T023741Z" creationid="Wynn" creationdate="20150319T023741Z">
        <seg>为此，先定义一个 QueryTable 实例，从表名称和 SQL 查询派生出其内容，随后将其与一个基于文件/数组的数据集进行比较：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For unit tests, it is recommended to explicitly reset the values of static properties under test in your &lt;l0&gt;setUp()&lt;/l0&gt; code instead (and ideally also &lt;l1&gt;tearDown()&lt;/l1&gt;, so as to not affect subsequently executed tests).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090559Z" creationid="Wynn" creationdate="20150319T090559Z">
        <seg>对单元测试而言，推荐在 &lt;l0&gt;setUp()&lt;/l0&gt; 中显式的重置测试中使用到的静态属性（最好同时在 &lt;l1&gt;tearDown()&lt;/l1&gt; 中执行重置，这样就保证不会影响到后继的测试）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For usage see &lt;x0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080246Z" creationid="Wynn" creationdate="20150228T080246Z">
        <seg>用法参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Frequently Asked Questions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042315Z" creationid="Wynn" creationdate="20150319T042315Z">
        <seg>常见问题（FAQ）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From Selenium 1.1.1, an experimental feature is included allowing the user to share the session between tests. The only supported case is to share the session between all tests when a single browser is used. Call &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase::shareSession(true)&lt;/l0&gt; in your bootstrap file to enable session sharing. The session will be reset in the case of not successul tests (failed or incomplete); it is up to the user to avoid interactions between tests by resetting cookies or logging out from the application under test (with a tearDown() method).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074110Z" creationid="Wynn" creationdate="20150327T074110Z">
        <seg>从 Selenium 1.1.1 开始，包含了一个实验性的特性，允许用户在不同测试之间共享会话(session)。唯一支持的情况是当使用单个浏览器时在所有测试间共享会话。在初始启动(bootstrap)文件中调用 &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase::shareSession(true)&lt;/l0&gt; 来启用会话共享。在碰到不成功的测试（失败或不完整）时会话将会重置；用户自行决定如何避免测试之间的互动，可以重设 cookies 或者从被测应用程序登出（通过 tearDown() 方法）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the previous example it isn't obvious how you would specify an empty table. You can insert a tag with no attributes with the name of the empty table. A flat xml file for an empty guestbook table would then look like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071125Z" creationid="Wynn" creationdate="20150317T071125Z">
        <seg>从上面这个例子里不太容易看出该如何指定一个空表。其实可以插入一个没有属性值的标签，以空表的名字作为标签名。空的 guestbook 表所对应的 Flat XML 文件大致上可能是这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the previous implementation example you can easily see that &lt;l0&gt;getConnection()&lt;/l0&gt; method is pretty static and could be re-used in different database test-cases. Additionally to keep performance of your tests good and database overhead low you can refactor the code a little bit to get a generic abstract test case for your application, which still allows you to specify a different data-fixture for each test case:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100531Z" creationid="Wynn" creationdate="20150316T100309Z">
        <seg>从前面的实现范例中容易发现 &lt;l0&gt;getConnection()&lt;/l0&gt; 方法是相当稳定的，可以在不同的数据库测试用例中重用。另外，为了保持测试的性能良好和数据库的开销较低，可以对代码进行一点重构，来为应用程序形成一个通用的抽象测试用例，同时依然可以为每个具体测试用例指定不同的数据基境：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Function and Method Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061721Z" creationid="Wynn" creationdate="20150309T061721Z">
        <seg>函数与方法覆盖率(Function and Method Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Functionality that needs to be stubbed out tends to cluster in the same object, improving cohesion. By presenting the functionality with a single, coherent interface you reduce the coupling with the rest of the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035917Z" creationid="Wynn" creationdate="20150327T084319Z">
        <seg>需要上桩的功能往往集中在同一个对象中，这就改善了内聚度。将功能通过单一且一致的接口呈现出来，就降低了这部分与系统其他部分之间的耦合度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a code coverage report in Crap4j format. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093235Z" creationid="Wynn" creationdate="20150327T093235Z">
        <seg>生成 Crap4j 格式的代码覆盖率报告。更多细节请参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a code coverage report in HTML format. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093259Z" creationid="Wynn" creationdate="20150327T093259Z">
        <seg>生成 HTML 格式的代码覆盖率报告。更多细节请参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a logfile in JUnit XML format for the tests run. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093354Z" creationid="Wynn" creationdate="20150327T093354Z">
        <seg>为运行的测试生成 JUnit XML 格式的日志文件。更多细节请参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a logfile in XML format with the code coverage information for the tests run. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093210Z" creationid="Wynn" creationdate="20150327T093210Z">
        <seg>为运行的测试生成带有代码覆盖率信息的 XML 格式的日志文件。更多细节请参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a logfile or command-line output in human readable format with the code coverage information for the tests run. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093337Z" creationid="Wynn" creationdate="20150327T093307Z">
        <seg>为运行的测试以人们可读的格式生成带有代码覆盖率信息的日志文件或命令行输出。更多细节请参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a logfile using the &lt;u0&gt;JSON&lt;/u0&gt; format. See &lt;x1/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093453Z" creationid="Wynn" creationdate="20150327T093453Z">
        <seg>生成 &lt;u0&gt;JSON&lt;/u0&gt; 格式的日志文件。更多细节请参见&lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a logfile using the &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt; format for the tests run. See &lt;x1/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093425Z" creationid="Wynn" creationdate="20150327T093425Z">
        <seg>为运行的测试生成 &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt; 格式的日志文件。更多细节请参见&lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a serialized PHP_CodeCoverage object with the code coverage information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093324Z" creationid="Wynn" creationdate="20150327T093324Z">
        <seg>生成一个序列化后的 PHP_CodeCoverage 对象，此对象含有代码覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates agile documentation in HTML or plain text format for the tests that are run. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093512Z" creationid="Wynn" creationdate="20150327T093512Z">
        <seg>为运行的测试以 HTML 或纯文本格式生成敏捷文档。更多细节请参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating a Class Skeleton from a Test Case Class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043546Z" creationid="Wynn" creationdate="20150330T043546Z">
        <seg>从测试用例类生成类的骨架</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating a Test Case Class Skeleton</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043123Z" creationid="Wynn" creationdate="20150330T043123Z">
        <seg>生成测试用例类的骨架</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gerard</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093341Z" creationid="Wynn" creationdate="20150309T093341Z">
        <seg>Gerard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gerard Meszaros</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074150Z" creationid="Wynn" creationdate="20150327T074150Z">
        <seg>Gerard Meszaros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gerard Meszaros introduces the concept of Test Doubles in &lt;x0/&gt; like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074146Z" creationid="Wynn" creationdate="20150327T074146Z">
        <seg>Gerard Meszaros 在 &lt;x0/&gt; 中介绍了测试替身的概念：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Global State</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082502Z" creationid="Wynn" creationdate="20150319T082502Z">
        <seg>全局状态</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Global State Manipulation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T081133Z" creationid="Wynn" creationdate="20150416T081133Z">
        <seg>全局状态篡改</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Global Variable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075428Z" creationid="Wynn" creationdate="20150310T075428Z">
        <seg>Global Variable （全局变量）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Globally installing the PHAR involves the same procedure as manually &lt;u0&gt; installing Composer on Windows&lt;/u0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095430Z" creationid="Wynn" creationdate="20150319T095430Z">
        <seg>整体上说，在 Windows 下安装 PHAR 和手工&lt;u0&gt;在 Windows 下安装 Composer&lt;/u0&gt; 是一样的过程：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groups</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T090301Z" creationid="Wynn" creationdate="20150309T090301Z">
        <seg>分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of methods provided by the Mock Builder:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075315Z" creationid="Wynn" creationdate="20150327T075315Z">
        <seg>以下是仿件生成器提供的方法列表：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example: suppose we want to test that the correct method, &lt;l0&gt;update()&lt;/l0&gt; in our example, is called on an object that observes another object. &lt;x1/&gt; shows the code for the &lt;l2&gt;Subject&lt;/l2&gt; and &lt;l3&gt;Observer&lt;/l3&gt; classes that are part of the System under Test (SUT).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084758Z" creationid="Wynn" creationdate="20150327T084758Z">
        <seg>这有个例子：假设需要测试的当前方法，在例子中是 &lt;l0&gt;update()&lt;/l0&gt;，确实在一个观察着另外一个对象的对象中上被调用了。&lt;x1/&gt;展示了被测系统(SUT)中 &lt;l2&gt;Subject&lt;/l2&gt; 和 &lt;l3&gt;Observer&lt;/l3&gt;  两个类的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you find code that is not yet tested -- or, in other words, not yet &lt;e0&gt;covered&lt;/e0&gt; by a test?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032108Z" creationid="Wynn" creationdate="20150330T032108Z">
        <seg>如何找到尚未被测试的代码——或者换句话说，尚未被测试&lt;e0&gt;覆盖&lt;/e0&gt;的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do you measure testing completeness?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032241Z" creationid="Wynn" creationdate="20150330T032054Z">
        <seg>如何衡量测试的完整度？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to handle NULL with Flat XML / CSV Datasets?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042555Z" creationid="Wynn" creationdate="20150319T042555Z">
        <seg>Flat XML / CSV 数据集中如何处理 NULL？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However this simplicity comes at a cost.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071115Z" creationid="Wynn" creationdate="20150317T071115Z">
        <seg>不过这种简单性是有代价的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this simplicity comes at a cost.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084500Z" creationid="Wynn" creationdate="20150817T084500Z">
        <seg>不过，这种简单性是有代价的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Human readable code coverage output for the command-line or a text file. The aim of this output format is to provide a quick coverage overview while working on a small set of classes. For bigger projects this output can be useful to get an quick overview of the projects coverage or when used with the &lt;l0&gt;--filter&lt;/l0&gt; functionality. When used from the command-line by writing to &lt;l1&gt;php://stdout&lt;/l1&gt; this will honor the &lt;l2&gt;--colors&lt;/l2&gt; setting. Writing to standard out is the default option when used from the command-line. By default this will only show files that have at least one covered line. This can only be changed via the &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; xml configuration option. See &lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042646Z" creationid="Wynn" creationdate="20150330T042646Z">
        <seg>以易于常人了解(human-readable)的格式生成代码覆盖率，输出到命令行或保存成文本文件。这个输出格式旨在为工作于少量类时提供快捷的覆盖情况概览。对于更大的项目，这个输出有助于对项目的覆盖情况有一个快速的概览，或者配合  &lt;l0&gt;--filter&lt;/l0&gt; 功能使用也会很有用。若从命令行调用并且写入到 &lt;l1&gt;php://stdout&lt;/l1&gt;，&lt;l2&gt;--colors&lt;/l2&gt; 设置会非常好用。从命令行调用时，写入到标准输出是默认选项。默认情况下，只会显示至少有一行被覆盖的文件。这只能通过  &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; XML 配置选项来改变。参见&lt;x4/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Human readable code coverage output for the command-line or a text file. The aim of this output format is to provide a quick coverage overview while working on a small set of classes. For bigger projects this output can be useful to get an quick overview of the projects coverage or when used with the &lt;l0&gt;--filter&lt;/l0&gt; functionality. When used from the command-line by writing to &lt;l1&gt;php://stdout&lt;/l1&gt; this will honor the &lt;l2&gt;--colors&lt;/l2&gt; setting. Writing to standard out is the default option when used from the command-line. By default this will only show files that have at least one covered line. This can only be changed via the &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; xml configuration option. See &lt;x4/&gt;. By default all files and their coverage status are shown in the detailed report. This can be changed via the &lt;l5&gt;showOnlySummary&lt;/l5&gt; xml configuration option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035616Z" creationid="Wynn" creationdate="20150320T035616Z">
        <seg>以易于常人了解(human-readable)的格式生成代码覆盖率，输出到命令行或保存成文本文件。这个输出格式旨在为工作于少量类时提供快捷的覆盖情况概览。对于更大的项目，这个输出有助于对项目的覆盖情况有一个快速的概览，或者配合 &lt;l0&gt;--filter&lt;/l0&gt; 功能使用也会很有用。若从命令行调用并且写入到 &lt;l1&gt;php://stdout&lt;/l1&gt;，&lt;l2&gt;--colors&lt;/l2&gt; 设置会非常好用。从命令行调用时，写入到标准输出是默认选项。默认情况下，只会显示至少有一行被覆盖的文件。这只能通过 XML 配置选项 &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; 来改变。参见 &lt;x4/&gt;。默认情况下，在详细报告中会显示所有文件以及它们的覆盖情况。这可以通过 XML 配置选项 &lt;l5&gt;showOnlySummary&lt;/l5&gt; 来改变。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092822Z" creationid="Wynn" creationdate="20150327T092822Z">
        <seg>I</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I have been talking about NULL problems with the Flat XML and CSV DataSet, but there is a slightly complicated workaround to get both types of datasets working with NULLs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075100Z" creationid="Wynn" creationdate="20150317T075100Z">
        <seg>前面谈到了 Flat XML 和 CSV DataSet 所存在的 NULL 问题，不过有一种稍微有点复杂的解决方法可以让这两种数据集都能正常处理 NULL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ISBN 0-321-14653-0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093340Z" creationid="Wynn" creationdate="20150309T093340Z">
        <seg>ISBN 0-321-14653-0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ISBN 0131016490</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>ISBN 0131016490</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ISBN 978-0131495050</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093343Z" creationid="Wynn" creationdate="20150309T093343Z">
        <seg>ISBN 978-0131495050</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;f0&gt;phpunit.xml&lt;/f0&gt; or &lt;f1&gt;phpunit.xml.dist&lt;/f1&gt; (in that order) exist in the current working directory and &lt;l2&gt;--configuration&lt;/l2&gt; is &lt;e3&gt;not&lt;/e3&gt; used, the configuration will be automatically read from that file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040646Z" creationid="Wynn" creationdate="20150320T040646Z">
        <seg>如果 &lt;f0&gt;phpunit.xml&lt;/f0&gt; 或 &lt;f1&gt;phpunit.xml.dist&lt;/f1&gt; （按此顺序）存在于当前工作目录并且&lt;e3&gt;未&lt;/e3&gt;使用 &lt;l2&gt;--configuration&lt;/l2&gt;，将自动从此文件中读取配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;l0&gt;$ignoreCase&lt;/l0&gt; is &lt;l1&gt;TRUE&lt;/l1&gt;, the test will be case insensitive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T064140Z" creationid="Wynn" creationdate="20150303T064140Z">
        <seg>如果 &lt;l0&gt;$ignoreCase&lt;/l0&gt; 为 &lt;l1&gt;TRUE&lt;/l1&gt;，测试将按大小写不敏感的方式进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a test changes the current working directory (&lt;l0&gt;cwd&lt;/l0&gt;) PHPUnit ran into issues when generating code coverage output. Now that the cwd is restored after each test case you might find that one of your tests depended on another test changing the cwd. Something that isn't desirable anyways and should be easy to fix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042143Z" creationid="Wynn" creationdate="20150330T042143Z">
        <seg>如果某个测试改变了当前工作目录(&lt;l0&gt;cwd&lt;/l0&gt;)，PHPUnit 在生成代码覆盖率报告时会碰到问题。现在当前工作目录将会在每个测试用例之后还原，于是可能会发现某个测试依赖于另外一个改变了当前工作目录的测试。这是不可取的，并且应当很容易修正。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it's hard to learn how to write tests, developers will not learn to write them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041027Z" creationid="Wynn" creationdate="20150330T041027Z">
        <seg>如果很难学会如何编写测试，那么开发者们就不会去学。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If provided, only the code coverage information for the specified method(s) will be considered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080517Z" creationid="Wynn" creationdate="20150228T080517Z">
        <seg>如果提供了此标注，则代码覆盖率信息中只考虑指定的这些方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If tests are not easy to write, developers will not write them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041033Z" creationid="Wynn" creationdate="20150330T041033Z">
        <seg>如果测试不容易编写，开发者们就不会去写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, a large test will fail if it takes longer than 60 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073347Z" creationid="Wynn" creationdate="20150302T073147Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，一个执行时间超过60秒的大型(large)测试将视为失败。这个超时限制可以通过 XML 配置文件的 &lt;l1&gt;timeoutForLargeTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, a medium test will fail if it takes longer than 10 seconds to execute. This timeout is configurable via the &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073356Z" creationid="Wynn" creationdate="20150302T073310Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，一个执行时间超过10秒的中型(medium)测试将视为失败。这个超时限制可以通过 XML 配置文件的 &lt;l1&gt;timeoutForMediumTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, a small test will fail if it takes longer than 1 second to execute. This timeout is configurable via the &lt;l1&gt;timeoutForSmallTests&lt;/l1&gt; attribute in the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T055251Z" creationid="Wynn" creationdate="20150303T055251Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，一个执行时间超过1秒的小型(small)测试将会视为失败。这个超时限制可以通过 XML 配置文件的 &lt;l1&gt;timeoutForSmallTests&lt;/l1&gt; 属性进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, this attribute sets the timeout for all tests marked as &lt;l1&gt;@large&lt;/l1&gt;. If a test does not complete within this configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T035915Z" creationid="Wynn" creationdate="20150330T035915Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，此属性为所有标记为 &lt;l1&gt;@large&lt;/l1&gt; 的测试设定超时限制。如果测试未能在这个配置所指定的超时限制时间内完成，即视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, this attribute sets the timeout for all tests marked as &lt;l1&gt;@medium&lt;/l1&gt;. If a test does not complete within this configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T035927Z" creationid="Wynn" creationdate="20150330T035927Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，此属性为所有标记为 &lt;l1&gt;@medium&lt;/l1&gt; 的测试设定超时限制。如果测试未能在这个配置所指定的超时限制时间内完成，即视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed and strict mode is enabled, this attribute sets the timeout for all tests not marked as &lt;l1&gt;@medium&lt;/l1&gt; or &lt;l2&gt;@large&lt;/l2&gt;. If a test does not complete within this configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040151Z" creationid="Wynn" creationdate="20150330T040151Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包并启用了严格模式，此属性为所有未标记为 &lt;l1&gt;@medium&lt;/l1&gt; 或 &lt;l2&gt;@large&lt;/l2&gt;的测试设定超时限制。如果测试未能在这个配置所指定的超时限制时间内完成，即视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;PHP_Invoker&lt;/l0&gt; package is installed:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050701Z" creationid="Wynn" creationdate="20150330T050701Z">
        <seg>如果安装了 &lt;l0&gt;PHP_Invoker&lt;/l0&gt; 组件包：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;l0&gt;setUp()&lt;/l0&gt; code differs only slightly, move the code that differs from the &lt;l1&gt;setUp()&lt;/l1&gt; code to the test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081851Z" creationid="Wynn" creationdate="20150319T081731Z">
        <seg>如果两个 &lt;l0&gt;setUp()&lt;/l0&gt; 代码仅有微小差异，把有差异的代码内容从 &lt;l1&gt;setUp()&lt;/l1&gt; 移到测试方法内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;u0&gt;Suhosin&lt;/u0&gt; extension is enabled, you need to allow execution of PHARs in your &lt;l1&gt;php.ini&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095202Z" creationid="Wynn" creationdate="20150319T095202Z">
        <seg>如果启用了 &lt;u0&gt;Suhosin&lt;/u0&gt; 扩展，需要在 &lt;l1&gt;php.ini&lt;/l1&gt; 中允许执行 PHAR：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the code that is expected to raise an exception in &lt;x0/&gt; does not raise the expected exception, the subsequent call to &lt;l1&gt;fail()&lt;/l1&gt; will halt the test and signal a problem with the test. If the expected exception is raised, the &lt;l2&gt;catch&lt;/l2&gt; block will be executed, and the test will end successfully.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024015Z" creationid="Wynn" creationdate="20150330T024015Z">
        <seg>当&lt;x0/&gt; 中预期会引发异常的代码并没有引发异常时，后面对 &lt;l1&gt;fail()&lt;/l1&gt; 的调用将会中止测试，并通告测试有问题。如果预期的异常出现了，将执行 &lt;l2&gt;catch&lt;/l2&gt; 代码块，测试将会成功结束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the original class does declare a method named "method" then &lt;l0&gt;$stub-&gt;expects($this-&gt;any())-&gt;method('doSomething')-&gt;willReturn('foo');&lt;/l0&gt; has to be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085412Z" creationid="Wynn" creationdate="20150817T085412Z">
        <seg>如果原始类包含名为“method”的方法，就必须用 &lt;l0&gt;$stub-&gt;expects($this-&gt;any())-&gt;method('doSomething')-&gt;willReturn('foo');&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If time limits based on test size are enforced then this attribute sets the timeout for all tests marked as &lt;l0&gt;@large&lt;/l0&gt;. If a test does not complete within its configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T082905Z" creationid="Wynn" creationdate="20150309T082905Z">
        <seg>如果实行了基于测试规模的时间限制，那么此属性为所有标记为 &lt;l0&gt;@large&lt;/l0&gt; 的测试设定超时限制。在配置的时间限制内未执行完毕的测试将视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If time limits based on test size are enforced then this attribute sets the timeout for all tests marked as &lt;l0&gt;@medium&lt;/l0&gt;. If a test does not complete within its configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T082929Z" creationid="Wynn" creationdate="20150309T082929Z">
        <seg>如果实行了基于测试规模的时间限制，那么此属性为所有标记为 &lt;l0&gt;@medium&lt;/l0&gt; 的测试设定超时限制。在配置的时间限制内未执行完毕的测试将视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If time limits based on test size are enforced then this attribute sets the timeout for all tests not marked as &lt;l0&gt;@medium&lt;/l0&gt; or &lt;l1&gt;@large&lt;/l1&gt;. If a test does not complete within its configured timeout, it will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T083019Z" creationid="Wynn" creationdate="20150309T083019Z">
        <seg>如果实行了基于测试规模的时间限制，那么此属性为所有未标记为 &lt;l0&gt;@medium&lt;/l0&gt; 或 &lt;l1&gt;@large&lt;/l1&gt; 的测试设定超时限制。在配置的时间限制内未执行完毕的测试将视为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we think of a successful test as a green light and a test failure as a red light, we need an additional yellow light to mark a test as being incomplete or not yet implemented. &lt;l0&gt;PHPUnit_Framework_IncompleteTest&lt;/l0&gt; is a marker interface for marking an exception that is raised by a test method as the result of the test being incomplete or currently not implemented. &lt;l1&gt;PHPUnit_Framework_IncompleteTestError&lt;/l1&gt; is the standard implementation of this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035854Z" creationid="Wynn" creationdate="20150319T091211Z">
        <seg>假如把成功的测试视为绿灯、测试失败视为红灯，那么还额外需要黄灯来将测试标记为未完成或尚未实现。&lt;l0&gt;PHPUnit_Framework_IncompleteTest&lt;/l0&gt; 是一个标记接口，用于将测试方法抛出的异常标记为测试未完成或目前尚未实现而导致的结果。&lt;l1&gt;PHPUnit_Framework_IncompleteTestError&lt;/l1&gt; 是这个接口的标准实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using a persistent database (not Sqlite Memory) you can easily setup the database once with tools such as phpMyAdmin for MySQL and re-use the database for every test-run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100247Z" creationid="Wynn" creationdate="20150316T100125Z">
        <seg>如果使用的是持久化数据库(不是 Sqlite Memory)，可以很轻松地用 phpMyAdmin（针对MySQL）之类的工具来一次性建立数据库，并在每个测试中复用这个数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using libraries such as &lt;u0&gt;Doctrine 2&lt;/u0&gt; or &lt;u1&gt;Propel&lt;/u1&gt; you can use their APIs to create the database schema you need once before you run the tests. You can utilize &lt;u2&gt;PHPUnit's Bootstrap and Configuration&lt;/u2&gt; capabilities to execute this code whenever your tests are run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100223Z" creationid="Wynn" creationdate="20150316T100223Z">
        <seg>如果使用的是诸如 &lt;u0&gt;Doctrine 2&lt;/u0&gt; 或 &lt;u1&gt;Propel&lt;/u1&gt; 这样的库，可以用它们的API来在测试运行前一次性建立所需的数据库。可以利用 &lt;u2&gt;PHPUnit 的引导和配置&lt;/u2&gt; 功能来在每次测试运行时执行这些代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using syntax that doesn't compile with a certain PHP Version look into the xml configuration for version dependent includes in</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093447Z" creationid="Wynn" creationdate="20150319T092749Z">
        <seg>如果使用了某种在特定版本的 PHP 下无法编译的语法，请在此章节内查找 XML 配置信息中关于版本依赖的信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do not cache the PDO instance that is created from the TestCase &lt;l0&gt;getConnection()&lt;/l0&gt; method the number of connections to the database is increasing by one or more with each database test. With default configuration MySql only allows 100 concurrent connections other vendors also have maximum connection limits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042522Z" creationid="Wynn" creationdate="20150319T042522Z">
        <seg>如果没有对 TestCase 中 &lt;l0&gt;getConnection()&lt;/l0&gt; 方法所创建 PDO 实例进行缓存，那么每个数据库测试都会增加一个或多个数据库连接。MySQL的默认配置只允许100个并发连接，其他供应商的数据库也都有各自的最大连接限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a large fixture file you can use the DataSet Filter for white- and blacklisting of tables and columns that should be contained in a sub-dataset. This is especially handy in combination with the DB DataSet to filter the columns of the datasets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075401Z" creationid="Wynn" creationdate="20150317T075218Z">
        <seg>如果有一个非常大的基境文件，可以用数据集筛选器来为需要包含在子数据集中的表和列指定白/黑名单。与 DB DataSet 联用来对数据集中的列进行筛选尤其方便。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you point the PHPUnit command-line test runner to a directory it will look for &lt;f0&gt;*Test.php&lt;/f0&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035830Z" creationid="Wynn" creationdate="20150320T035830Z">
        <seg>当 PHPUnit 命令行测试执行器指向一个目录时，它会在目录下查找 &lt;f0&gt;*Test.php&lt;/f0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you really have a different &lt;l0&gt;setUp()&lt;/l0&gt;, you need a different test case class. Name the class after the difference in the setup.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081913Z" creationid="Wynn" creationdate="20150319T081913Z">
        <seg>如果两个 &lt;l0&gt;setUp()&lt;/l0&gt; 是确实不一样，那么需要另外一个测试用例类。参考基境建立工作的不同之处来命名这个类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want the results of one test to have no effect on the results of another test, each test should create the full state of the world before it begins to execute and return the world to its original state when it finishes. However, setting up the world can take a long time: for example connecting to a database and initializing it to a known state using realistic data.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041144Z" creationid="Wynn" creationdate="20150330T041144Z">
        <seg>如果想要单个测试的结果不会影响其他测试，那么每个测试都需要在运行前创建完整的运行场景，并在运行结束后将所有状态复原。但是，建立场景可能需要很长时间：例如连接数据库并用实际数据将其初始化为已知状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to test code that works with the Database Extension the setup is a bit more complex and you have to extend a different abstract TestCase requiring you to implement two abstract methods &lt;l0&gt;getConnection()&lt;/l0&gt; and &lt;l1&gt;getDataSet()&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094707Z" creationid="Wynn" creationdate="20150316T094707Z">
        <seg>如果测试代码用到了数据库扩展模块，那么建立的过程就会更复杂一些，需要扩展另一个抽象 TestCase 类，它要求实现两个抽象方法，&lt;l0&gt;getConnection()&lt;/l0&gt; 和 &lt;l1&gt;getDataSet()&lt;/l1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your project is smaller or you have enough memory you will get a runtime benefit by adding &lt;l0&gt;cacheTokens="true"&lt;/l0&gt; to your &lt;l1&gt;phpunit.xml&lt;/l1&gt; file. See &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042518Z" creationid="Wynn" creationdate="20150330T042518Z">
        <seg>如果项目比较小或者有足够多内存，可以通过在 &lt;l1&gt;phpunit.xml&lt;/l1&gt; 文件中添加 &lt;l0&gt;cacheTokens="true"&lt;/l0&gt; 来获得运行时间上的收益。参见&lt;x2/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ignore &lt;f0&gt;phpunit.xml&lt;/f0&gt; and &lt;f1&gt;phpunit.xml.dist&lt;/f1&gt; from the current working directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100632Z" creationid="Wynn" creationdate="20150327T100632Z">
        <seg>忽略当前工作目录下的 &lt;f0&gt;phpunit.xml&lt;/f0&gt; 与 &lt;f1&gt;phpunit.xml.dist&lt;/f1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ignoring Code Blocks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070438Z" creationid="Wynn" creationdate="20150309T070438Z">
        <seg>略过代码块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implement PHPUnit_Framework_Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073810Z" creationid="Wynn" creationdate="20150319T073810Z">
        <seg>实现 PHPUnit_Framework_Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implement PHPUnit_Framework_TestListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070054Z" creationid="Wynn" creationdate="20150319T070054Z">
        <seg>实现 PHPUnit_Framework_TestListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing getConnection()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094733Z" creationid="Wynn" creationdate="20150316T094715Z">
        <seg>实现 getConnection()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing getDataSet()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095439Z" creationid="Wynn" creationdate="20150316T095439Z">
        <seg>实现 getDataSet()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing your own DataSets/DataTables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075540Z" creationid="Wynn" creationdate="20150317T075540Z">
        <seg>实现自有的 DataSet/DataTable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;x0/&gt; we used the producer-consumer relationship between tests to share a fixture. This is not always desired or even possible. &lt;x1/&gt; shows how we can write the tests of the &lt;l2&gt;StackTest&lt;/l2&gt; in such a way that not the fixture itself is reused but the code that creates it. First we declare the instance variable, &lt;l3&gt;$stack&lt;/l3&gt;, that we are going to use instead of a method-local variable. Then we put the creation of the &lt;l4&gt;array&lt;/l4&gt; fixture into the &lt;l5&gt;setUp()&lt;/l5&gt; method. Finally, we remove the redundant code from the test methods and use the newly introduced instance variable, &lt;l6&gt;$this-&gt;stack&lt;/l6&gt;, instead of the method-local variable &lt;l7&gt;$stack&lt;/l7&gt; with the &lt;l8&gt;assertEquals()&lt;/l8&gt; assertion method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T080508Z" creationid="Wynn" creationdate="20150319T080508Z">
        <seg>在&lt;x0/&gt;中，我们在测试之间运用生产者-消费者关系来共享基境。这并非总是预期的方式，甚至有时是不可能的。&lt;x1/&gt;展示了另外一个编写测试 &lt;l2&gt;StackTest&lt;/l2&gt; 的方式。在这个方式中，不再重用基境本身，而是重用建立基境的代码。首先声明一个实例变量，&lt;l3&gt;$stack&lt;/l3&gt;，用来替代方法内的局部变量。然后把 &lt;l4&gt;array&lt;/l4&gt; 基境的建立放到 &lt;l5&gt;setUp()&lt;/l5&gt; 方法中。最后，从测试方法中去除冗余代码，在 &lt;l8&gt;assertEquals()&lt;/l8&gt;  断言方法中使用新引入的实例变量 &lt;l6&gt;$this-&gt;stack&lt;/l6&gt;替代方法内的局部变量 &lt;l7&gt;$stack&lt;/l7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;x0/&gt; you can see how to configure PHPUnit to attach your test listener to the test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070613Z" creationid="Wynn" creationdate="20150319T070613Z">
        <seg>在&lt;x0/&gt;中可以看到如何配置 PHPUnit 来将测试监听器附加到测试执行过程上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;x0/&gt;, Dave Astels makes the following points:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030719Z" creationid="Wynn" creationdate="20150330T030719Z">
        <seg>在&lt;x0/&gt;中，, Dave Astels 提出了以下几点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;x0/&gt;, the fixture was simply the array that is stored in the &lt;l1&gt;$stack&lt;/l1&gt; variable. Most of the time, though, the fixture will be more complex than a simple array, and the amount of code needed to set it up will grow accordingly. The actual content of the test gets lost in the noise of setting up the fixture. This problem gets even worse when you write several tests with similar fixtures. Without some help from the testing framework, we would have to duplicate the code that sets up the fixture for each test we write.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075827Z" creationid="Wynn" creationdate="20150319T075827Z">
        <seg>在&lt;x0/&gt;中，基境十分简单，就是存储在 &lt;l1&gt;$stack&lt;/l1&gt; 变量中的数组。然而，绝大多数时候基境均远比一个简单数组要复杂，用于建立基境的代码量也会随之增长。测试的真正内容就被淹没于建立基境带来的干扰中。当编写多个需要类似基境的测试时这个问题就变得更糟糕了。如果没有来自于测试框架的帮助，就不得不在写每一个测试时都将建立基境的代码重复一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In PHP, global variables work like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082734Z" creationid="Wynn" creationdate="20150319T082734Z">
        <seg>在 PHP 中，全局变量是这样运作的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the &lt;l0&gt;expectException()&lt;/l0&gt; method the &lt;l1&gt;expectExceptionCode()&lt;/l1&gt;, &lt;l2&gt;expectExceptionMessage()&lt;/l2&gt;, and &lt;l3&gt;expectExceptionMessageRegExp()&lt;/l3&gt; methods exist to set up expectations for exceptions raised by the code under test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T042302Z" creationid="Wynn" creationdate="20160113T042302Z">
        <seg>在建立对被测代码所抛异常的预期时，除了 &lt;l0&gt;expectException()&lt;/l0&gt; 方法，还存在 &lt;l1&gt;expectExceptionCode()&lt;/l1&gt;、&lt;l2&gt;expectExceptionMessage()&lt;/l2&gt; 和 &lt;l3&gt;expectExceptionMessageRegExp()&lt;/l3&gt; 方法可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the above methods it is also possible to use the &lt;l0&gt;@requires&lt;/l0&gt; annotation to express common preconditions for a test case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092417Z" creationid="Wynn" creationdate="20150319T092417Z">
        <seg>除了上述方法，还可以用 &lt;l0&gt;@requires&lt;/l0&gt; 标注来表达测试用例的一些常见前提条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, the &lt;l0&gt;setUpBeforeClass()&lt;/l0&gt; and &lt;l1&gt;tearDownAfterClass()&lt;/l1&gt; template methods are called before the first test of the test case class is run and after the last test of the test case class is run, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081214Z" creationid="Wynn" creationdate="20150319T081214Z">
        <seg>另外，&lt;l0&gt;setUpBeforeClass()&lt;/l0&gt; 与 &lt;l1&gt;tearDownAfterClass()&lt;/l1&gt; 模板方法将分别在测试用例类的第一个测试运行之前和测试用例类的最后一个测试运行之后调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In computer science, code coverage is a measure used to describe the degree to which the source code of a program is tested by a particular test suite. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T040100Z" creationid="Wynn" creationdate="20150309T040100Z">
        <seg>计算机科学中所说的代码覆盖率是一种用于衡量特定测试套件对程序源代码测试程度的指标。拥有高代码覆盖率的程序相较于低代码低概率的程序而言测试的更加彻底、包含软件 bug 的可能性更低。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In conclusion I can only advise using the Flat XML datasets if you do not need NULL values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071957Z" creationid="Wynn" creationdate="20150317T071957Z">
        <seg>总的来说，建议只在不需要 NULL 值的情况下使用 Flat XML Dataset。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In each frame the player has two opportunities to knock down 10 pins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031442Z" creationid="Wynn" creationdate="20150330T031442Z">
        <seg>每一轮有两次投球机会来将10个球瓶击倒。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In his book on xUnit Test Patterns Gerard Meszaros lists the four stages of a unit-test:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065332Z" creationid="Wynn" creationdate="20150313T065332Z">
        <seg>Gerard Meszaros 在他的书《xUnit 测试模式》中列出了单元测试的四个阶段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;l0&gt;setUp()&lt;/l0&gt; and &lt;l1&gt;tearDown()&lt;/l1&gt; methods we have to ensure that the directory does not exist before and after the test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092113Z" creationid="Wynn" creationdate="20150327T092035Z">
        <seg>在 &lt;l0&gt;setUp()&lt;/l0&gt; 和 &lt;l1&gt;tearDown()&lt;/l1&gt; 方法中，必须确保这个目录在测试前和测试后均不存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, the first test, &lt;l0&gt;testEmpty()&lt;/l0&gt;, creates a new array and asserts that it is empty. The test then returns the fixture as its result. The second test, &lt;l1&gt;testPush()&lt;/l1&gt;, depends on &lt;l2&gt;testEmpty()&lt;/l2&gt; and is passed the result of that depended-upon test as its argument. Finally, &lt;l3&gt;testPop()&lt;/l3&gt; depends upon &lt;l4&gt;testPush()&lt;/l4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101826Z" creationid="Wynn" creationdate="20150327T101826Z">
        <seg>在上例中，第一个测试， &lt;l0&gt;testEmpty()&lt;/l0&gt;，创建了一个新数组，并断言其为空。随后，此测试将此基境作为结果返回。第二个测试，&lt;l1&gt;testPush()&lt;/l1&gt;，依赖于 &lt;l2&gt;testEmpty()&lt;/l2&gt; ，并将所依赖的测试之结果作为参数传入。最后，&lt;l3&gt;testPop()&lt;/l3&gt; 依赖于 &lt;l4&gt;testPush()&lt;/l4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the examples so far we have been returning simple values using &lt;l0&gt;willReturn($value)&lt;/l0&gt;. This short syntax is the same as &lt;l1&gt;will($this-&gt;returnValue($value))&lt;/l1&gt;. We can use variations on this longer syntax to achieve more complex stubbing behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T080704Z" creationid="Wynn" creationdate="20150327T080704Z">
        <seg>在之前的例子中，用 &lt;l0&gt;willReturn($value)&lt;/l0&gt; 返回简单值。这个简短的语法相当于 &lt;l1&gt;will($this-&gt;returnValue($value))&lt;/l1&gt;。而在这个长点的语法中，可以使用变量，从而实现更复杂的上桩行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous example we create an in-memory Sqlite connection and pass it to the &lt;l0&gt;createDefaultDBConnection&lt;/l0&gt; method which wraps the PDO instance and the second parameter (the database-name) in a very simple abstraction layer for database connections of the type &lt;l1&gt;PHPUnit_Extensions_Database_DB_IDatabaseConnection&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095303Z" creationid="Wynn" creationdate="20150316T095303Z">
        <seg>在之前的例子里，我们在内存中创建 Sqlite 数据库并建立了连接，将此连接传递给 &lt;l0&gt;createDefaultDBConnection&lt;/l0&gt; 方法，这个方法将 PDO 实例和第二参数（数据库名）包装在一个非常简单的数据库连接抽象层中，这个抽象层的类型是 &lt;l1&gt;PHPUnit_Extensions_Database_DB_IDatabaseConnection&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the scope of a function or method, you may access the global variable &lt;l0&gt;$foo&lt;/l0&gt; by either directly accessing &lt;l1&gt;$GLOBALS['foo']&lt;/l1&gt; or by using &lt;l2&gt;global $foo;&lt;/l2&gt; to create a local variable with a reference to the global variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T084807Z" creationid="Wynn" creationdate="20150319T084807Z">
        <seg>在函数或者方法的变量作用域中，要访问全局变量 &lt;l0&gt;$foo&lt;/l0&gt;，可以直接访问 &lt;l1&gt;$GLOBALS['foo']&lt;/l1&gt;，或者用 &lt;l2&gt;global $foo;&lt;/l2&gt; 来创建一个引用全局变量的局部变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case the second entry is posted anonymously. However this leads to a serious problem with column recognition. During dataset equality assertions each dataset has to specify what columns a table holds. If an attribute is NULL for all the rows of a data-table, how would the Database Extension know that the column should be part of the table?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071557Z" creationid="Wynn" creationdate="20150317T071557Z">
        <seg>在这个例子里第二个条目是匿名发表的。但是这为列的识别带来了一个非常严重的问题。在数据集相等断言的判定过程中，每个数据集都需要指明每个表拥有哪些列。如果有一个列在数据表的所有行里其值都是 NULL，那么数据库扩展模块又该从何得知表中包含这个列呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case the second entry is posted anonymously. However, this leads to a serious problem with column recognition. During dataset equality assertions each dataset has to specify what columns a table holds. If an attribute is NULL for all the rows of a data-table, how would the Database Extension know that the column should be part of the table?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084526Z" creationid="Wynn" creationdate="20150817T084526Z">
        <seg>在这个例子里第二个条目是匿名发表的。但是这为列的识别带来了一个非常严重的问题。在数据集相等断言的判定过程中，每个数据集都需要指明每个表拥有哪些列。如果有一个列在数据表的所有行里其值都是 NULL，那么数据库扩展模块又该从何得知表中包含这个列呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter we will go from simple &lt;l0&gt;print&lt;/l0&gt;-based testing code to a fully automated test. Imagine that we have been asked to test PHP's built-in &lt;l1&gt;array&lt;/l1&gt;. One bit of functionality to test is the function &lt;l2&gt;count()&lt;/l2&gt;. For a newly created array we expect the &lt;l3&gt;count()&lt;/l3&gt; function to return &lt;l4&gt;0&lt;/l4&gt;. After we add an element, &lt;l5&gt;count()&lt;/l5&gt; should return &lt;l6&gt;1&lt;/l6&gt;. &lt;x7/&gt; shows what we want to test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025843Z" creationid="Wynn" creationdate="20150330T025843Z">
        <seg>在本章中，我们将从基于 &lt;l0&gt;print&lt;/l0&gt; 的简单测试代码开始，逐步前进至完全自动化的测试。假设我们需要对 PHP 内建的 &lt;l1&gt;array&lt;/l1&gt; 进行测试。其中一个要测试的功能是 &lt;l2&gt;count()&lt;/l2&gt; 函数。对于新建立的数组，我们预期 &lt;l3&gt;count()&lt;/l3&gt; 函数将返回 &lt;l4&gt;0&lt;/l4&gt;。添加一个元素之后，&lt;l5&gt;count()&lt;/l5&gt; 函数应当返回 &lt;l6&gt;1&lt;/l6&gt;。&lt;x7/&gt;展示了我们要测试的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter you will learn all about PHPUnit's code coverage functionality that provides an insight into what parts of the production code are executed when the tests are run. It helps answering questions such as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032053Z" creationid="Wynn" creationdate="20150330T032053Z">
        <seg>在本章中，你将学到 PHPUnit 代码覆盖率功能的一切。这个功能能洞察测试运行过程中执行了生产代码的哪些部分。他能够帮助回答诸如这些问题：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter you will learn all about PHPUnit's code coverage functionality that provides an insight into what parts of the production code are executed when the tests are run. It makes use of the &lt;u0&gt;PHP_CodeCoverage&lt;/u0&gt; component, which in turn leverages the code coverage functionality provided by the &lt;u1&gt;Xdebug&lt;/u1&gt; extension for PHP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T060411Z" creationid="Wynn" creationdate="20150309T060333Z">
        <seg>在本章中，你将学到 PHPUnit 中与代码覆盖率相关的一切功能。通过这部分功能，能够了解在测试运行过程中执行了生产代码的哪些部分。它使用了 &lt;u0&gt;PHP_CodeCoverage&lt;/u0&gt; 组件，而这个组件又使用了 PHP 的 &lt;u1&gt;Xdebug&lt;/u1&gt; 扩展所提供的代码覆盖率功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example only one of the array values differs and the other values are shown to provide context on where the error occurred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025004Z" creationid="Wynn" creationdate="20150330T025004Z">
        <seg>在这个例子中，数组中只有一个值不同，但其他值也都同时显示出来，以提供关于错误发生的位置的上下文信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example the difference in the first index between &lt;l0&gt;1&lt;/l0&gt; and &lt;l1&gt;'1'&lt;/l1&gt; is reported even so assertEquals considers the values as a match.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061225Z" creationid="Wynn" creationdate="20150330T061225Z">
        <seg>在这个例子中，第一个索引项中的 &lt;l0&gt;1&lt;/l0&gt; and &lt;l1&gt;'1'&lt;/l1&gt; 在报告中被视为不同，虽然 assertEquals 认为这两个值是匹配的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example the difference in the first index between &lt;l0&gt;1&lt;/l0&gt; and &lt;l1&gt;'1'&lt;/l1&gt; is reported even though assertEquals considers the values as a match.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025141Z" creationid="Wynn" creationdate="20150330T025141Z">
        <seg>在这个例子中，第一个索引项中的 &lt;l0&gt;1&lt;/l0&gt; and &lt;l1&gt;'1'&lt;/l1&gt; 在报告中被视为不同，虽然 assertEquals 认为这两个值是匹配的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this section, we will look at the example of a class that calculates the score for a game of bowling. The rules for this are as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031301Z" creationid="Wynn" creationdate="20150330T031247Z">
        <seg>在本节中，我们来看一个例子，关于一个计算一局保龄球得分的类。规则如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this section, we will look at the example of a class that represents a bank account. The contract for the &lt;l0&gt;BankAccount&lt;/l0&gt; class not only requires methods to get and set the bank account's balance, as well as methods to deposit and withdraw money. It also specifies the following two conditions that must be ensured:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050039Z" creationid="Wynn" creationdate="20150330T050039Z">
        <seg>在本节，让我们来看一个例子，关于一个代表银行账户的类。&lt;l0&gt;BankAccount&lt;/l0&gt; 类的契约要求这个类要有读写银行账户结余的方法，还要有存钱和取钱的方法。同时还指定了以下两个必须保证的条件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In turn, if you specify only a subset of the table columns in the Flat XML dataset all the omitted values are set to their default values. This will lead to errors if one of the omitted columns is defined as &lt;q0&gt;NOT NULL DEFAULT NULL&lt;/q0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071951Z" creationid="Wynn" creationdate="20150317T071951Z">
        <seg>反过来，如果在 Flat XML Dataset 中只指明了实际表中所有列的某个子集，那么所有省略掉的列都会设为它们的的默认值。如果某个省略掉的列的定义是 &lt;q0&gt;NOT NULL DEFAULT NULL&lt;/q0&gt;，就会出现错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your test case class that extends &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt;, use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064321Z" creationid="Wynn" creationdate="20150327T064321Z">
        <seg>在扩展自 &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; 的测试用例类中，用 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your test use a special assertion called &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; for verification purposes, however this is entirely optional. This feature will be explained in the section &lt;q1&gt;Database Assertions&lt;/q1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094416Z" creationid="Wynn" creationdate="20150316T094416Z">
        <seg>在测试中，验证的目的可以使用一个名为 &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; 的特殊断言来实现。当然，这完全是可选的。这个特性将在&lt;q1&gt;数据库断言&lt;/q1&gt;一节中进行解说。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your test use a special assertion called &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; for verification purposes, however, this is entirely optional. This feature will be explained in the section &lt;q1&gt;Database Assertions&lt;/q1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084350Z" creationid="Wynn" creationdate="20150817T084350Z">
        <seg>在测试中，验证的目的可以使用一个名为 &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; 的特殊断言来实现。当然，这完全是可选的。这个特性将在&lt;q1&gt;数据库断言&lt;/q1&gt;一节中进行解说。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your webserver's &lt;f0&gt;php.ini&lt;/f0&gt; configuration file, configure &lt;f1&gt;PHPUnit/Extensions/SeleniumCommon/prepend.php&lt;/f1&gt; and &lt;f2&gt;PHPUnit/Extensions/SeleniumCommon/append.php&lt;/f2&gt; as the &lt;l3&gt;auto_prepend_file&lt;/l3&gt; and &lt;l4&gt;auto_append_file&lt;/l4&gt;, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064250Z" creationid="Wynn" creationdate="20150327T064250Z">
        <seg>在 web 服务器上的 &lt;f0&gt;php.ini&lt;/f0&gt; 配置文件中，分别将 &lt;f1&gt;PHPUnit/Extensions/SeleniumCommon/prepend.php&lt;/f1&gt; 和 &lt;f2&gt;PHPUnit/Extensions/SeleniumCommon/append.php&lt;/f2&gt; 配置为 &lt;l3&gt;auto_prepend_file&lt;/l3&gt; 和 &lt;l4&gt;auto_append_file&lt;/l4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Including and Excluding Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T064315Z" creationid="Wynn" creationdate="20150309T064315Z">
        <seg>包含与排除文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Including and Excluding Files for Code Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093705Z" creationid="Wynn" creationdate="20150309T093705Z">
        <seg>为代码覆盖率包含或排除文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incomplete Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091541Z" creationid="Wynn" creationdate="20150319T091007Z">
        <seg>Incomplete Test （未完成的测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incomplete Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091530Z" creationid="Wynn" creationdate="20150319T090858Z">
        <seg>未完成的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incomplete and Skipped Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091400Z" creationid="Wynn" creationdate="20150319T090851Z">
        <seg>未完成的测试与跳过的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Index</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T060259Z" creationid="Wynn" creationdate="20150303T060259Z">
        <seg>索引</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that a test should be run in a separate PHP process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T074036Z" creationid="Wynn" creationdate="20150302T074036Z">
        <seg>明某个测试要运行在独立的 PHP 进程中。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indicates that all tests in a test class should be run in a separate PHP process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073715Z" creationid="Wynn" creationdate="20150302T073715Z">
        <seg>指明单个测试类内的所有测试要各自运行在独立的 PHP 进程中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inserting the rows required for the test into these tables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082008Z" creationid="Wynn" creationdate="20150310T082008Z">
        <seg>向表中插入测试所需要的行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside a &lt;e0&gt;scenario&lt;/e0&gt;, &lt;l1&gt;given()&lt;/l1&gt;, &lt;l2&gt;when()&lt;/l2&gt;, and &lt;l3&gt;then()&lt;/l3&gt; each represent a &lt;e4&gt;step&lt;/e4&gt;. &lt;l5&gt;and()&lt;/l5&gt; is the same kind as the previous step. The following methods are declared &lt;l6&gt;abstract&lt;/l6&gt; in &lt;l7&gt;PHPUnit_Extensions_Story_TestCase&lt;/l7&gt; and need to be implemented:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031237Z" creationid="Wynn" creationdate="20150330T031237Z">
        <seg>在&lt;e0&gt;剧本(scenario)&lt;/e0&gt;内，&lt;l1&gt;given()&lt;/l1&gt;、&lt;l2&gt;when()&lt;/l2&gt; 和 &lt;l3&gt;then()&lt;/l3&gt; 各自都代表了一个 &lt;e4&gt;步骤(step)&lt;/e4&gt;。&lt;l5&gt;and()&lt;/l5&gt; 同样也是这类步骤。以下方法在 &lt;l7&gt;PHPUnit_Extensions_Story_TestCase&lt;/l7&gt; 中声明为 &lt;l6&gt;abstract&lt;/l6&gt; 并且需要实现之：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the test methods, assertion methods such as &lt;l0&gt;assertEquals()&lt;/l0&gt; (see &lt;x1/&gt;) are used to assert that an actual value matches an expected value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101600Z" creationid="Wynn" creationdate="20150327T101600Z">
        <seg>在测试方法内，类似于 &lt;l0&gt;assertEquals()&lt;/l0&gt;（参见 &lt;x1/&gt;）这样的断言方法用来对实际值与预期值的匹配做出断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032444Z" creationid="Wynn" creationdate="20150327T032444Z">
        <seg>安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing PHPUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093459Z" creationid="Wynn" creationdate="20150319T093459Z">
        <seg>安装 PHPUnit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of returning a value, a stubbed method can also raise an exception. &lt;x0/&gt; shows how to use &lt;l1&gt;throwException()&lt;/l1&gt; to do this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084237Z" creationid="Wynn" creationdate="20150327T084237Z">
        <seg>除了返回一个值之外，上桩的方法还能抛出一个异常。&lt;x0/&gt;展示了如何用 &lt;l1&gt;throwException()&lt;/l1&gt; 做到这点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Isolated versus quick to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041135Z" creationid="Wynn" creationdate="20150330T041135Z">
        <seg>相互隔离 VS 执行快速</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Isolated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041105Z" creationid="Wynn" creationdate="20150330T041105Z">
        <seg>相互隔离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It cannot be emphasized enough that sharing fixtures between tests reduces the value of the tests. The underlying design problem is that objects are not loosely coupled. You will achieve better results solving the underlying design problem and then writing tests using stubs (see &lt;x0/&gt;), than by creating dependencies between tests at runtime and ignoring the opportunity to improve your design.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082439Z" creationid="Wynn" creationdate="20150319T082439Z">
        <seg>需要反复强调的是：在测试之间共享基境会降低测试的价值。潜在的设计问题是对象之间并非松散耦合。如果解决掉潜在的设计问题并使用桩件(stub)（参见&lt;x0/&gt;）来编写测试，就能达成更好的结果，而不是在测试之间产生运行时依赖并错过改进设计的机会。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to specify that a test should not cover &lt;e0&gt;any&lt;/e0&gt; method by using the &lt;l1&gt;@coversNothing&lt;/l1&gt; annotation (see &lt;x2/&gt;). This can be helpful when writing integration tests to make sure you only generate code coverage with unit tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T071336Z" creationid="Wynn" creationdate="20150309T071336Z">
        <seg>同时，可以用 &lt;l1&gt;@coversNothing&lt;/l1&gt; 标注来指明一个测试不覆盖&lt;e0&gt;任何&lt;/e0&gt;方法（参见&lt;x2/&gt;）。这可以在编写集成测试时用于确保代码覆盖全部来自单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is best practice to use a &lt;e0&gt;whitelist&lt;/e0&gt; instead of the blacklist mentioned above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T065814Z" creationid="Wynn" creationdate="20150309T065814Z">
        <seg>用&lt;e0&gt;白名单&lt;/e0&gt;代替上面提到的黑名单是一种良好的习惯。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is mandatory to configure a &lt;e0&gt;whitelist&lt;/e0&gt; for telling PHPUnit which sourcecode files to include in the code coverage report. This can either be done using the &lt;l1&gt;--whitelist&lt;/l1&gt; commandline option or via the configuration file (see &lt;x2/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151105T070041Z" creationid="Wynn" creationdate="20151105T065332Z">
        <seg>为了告诉 PHPUnit 哪些源代码文件要包含在代码覆盖率报告中，必须配置&lt;e0&gt;白名单&lt;/e0&gt;。可以用命令行选项 &lt;l1&gt;--whitelist&lt;/l1&gt; 或通过配置文件（参见 &lt;x2/&gt;）来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is often helpful to check if a table contains a specific amount of rows. You can easily achieve this without additional glue code using the Connection API. Say we wanted to check that after insertion of a row into our guestbook we not only have the two initial entries that have accompanied us in all the previous examples, but a third one:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T095343Z" creationid="Wynn" creationdate="20150318T095343Z">
        <seg>很多时候，确认表中是否包含特定数量的数据行是非常有帮助的。可以轻松做到这一点，不需要任何额外的使用连接 API 的粘合剂代码。比如说，在往留言本中插入一个新行之后，想要确认在表中除了之前的例子中一直都有的两行之外还有第三行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It may be prudent to create a shell script to manage PHPUnit installation that verifies the GnuPG signature before running your test suite. For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T080830Z" creationid="Wynn" creationdate="20150416T080830Z">
        <seg>有个比较谨慎的做法是创建一个脚本来管理 PHPUnit 的安装，在运行测试套件之前校验 GnuPG 签名。例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It processes all classes that are declared at the time a test starts, not only the test class itself. It only applies to static class properties, not static variables within functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090053Z" creationid="Wynn" creationdate="20150319T090012Z">
        <seg>它所处理的并不只是测试类自身，而是在测试开始时已声明的所有类。它只作用于静态类属性，不作用于函数内声明的静态变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's about figuring out what you are trying to do before you run off half-cocked to try to do it. You write a specification that nails down a small aspect of behaviour in a concise, unambiguous, and executable form. It's that simple. Does that mean you write tests? No. It means you write specifications of what your code will have to do. It means you specify the behaviour of your code ahead of time. But not far ahead of time. In fact, just before you write the code is best because that's when you have as much information at hand as you will up to that point. Like well done TDD, you work in tiny increments... specifying one small aspect of behaviour at a time, then implementing it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030813Z" creationid="Wynn" creationdate="20150330T030813Z">
        <seg>这是关于在轻率地开始尝试之前先搞明白你到底要做什么的。你要编写以简洁、明确、可执行的形式编写一份规范，来明确行为的一个小方面。就是这么简单。这是否意味着编写测试呢？不。这意味着就代码需要做什么编写规范。这意味着提前指定代码的行为。不过并不提前很多。实际上，恰好在编写代码之前是最好的，因为在这个时刻你拥有最多的信息。就像 TDD 中那样，以很小的增量工作……一次只指定行为的一个小方面，然后实现之。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JSON</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093427Z" creationid="Wynn" creationdate="20150327T093427Z">
        <seg>JSON</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Kent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>Kent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Knowing what should be tested is beautiful, and knowing what is being tested is beautiful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032037Z" creationid="Wynn" creationdate="20150330T032037Z">
        <seg>知何物需测是为美，知何物已测亦为美。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let us generate a code coverage report for the &lt;l0&gt;BankAccount&lt;/l0&gt; class from &lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032355Z" creationid="Wynn" creationdate="20150330T032355Z">
        <seg>让我们来为 &lt;x1/&gt; 中的 &lt;l0&gt;BankAccount&lt;/l0&gt; 类生成一份代码覆盖率报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let us take a look at the agile documentation generated for a &lt;l0&gt;BankAccount&lt;/l0&gt; class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T023825Z" creationid="Wynn" creationdate="20150327T023825Z">
        <seg>来看一下从 &lt;l0&gt;BankAccount&lt;/l0&gt; 类生成的敏捷文档：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let us take a look at the agile documentation generated for the &lt;l0&gt;BankAccount&lt;/l0&gt; class (from &lt;x1/&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043035Z" creationid="Wynn" creationdate="20150330T043035Z">
        <seg>来看一下从 &lt;l0&gt;BankAccount&lt;/l0&gt; 类（来自&lt;x1/&gt;）所生成的敏捷文档：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a look at the command-line test runner's options in the following code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093015Z" creationid="Wynn" creationdate="20150327T093015Z">
        <seg>让我们来瞧瞧以下代码中命令行测试运行器的各种选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lets take a look at the test suite of the &lt;u0&gt;sebastianbergmann/money&lt;/u0&gt; library. Looking at this project's directory structure, we see that the test case classes in the &lt;f1&gt;tests&lt;/f1&gt; directory mirror the package and class structure of the System Under Test (SUT) in the &lt;f2&gt;src&lt;/f2&gt; directory:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035753Z" creationid="Wynn" creationdate="20150320T035753Z">
        <seg>现在来看看 &lt;u0&gt;sebastianbergmann/money&lt;/u0&gt; 这个库的测试套件。在这个项目的目录结构中，可以看到 &lt;f1&gt;tests&lt;/f1&gt; 目录下的测试用例类镜像了 &lt;f2&gt;src&lt;/f2&gt; 目录下被测系统(SUT, System Under Test)的包(package)与类(class)的结构：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Limitation: Automatic verification of expectations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085547Z" creationid="Wynn" creationdate="20150817T085547Z">
        <seg>局限性：对预期的自动校验</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Limitation: Methods named "method"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085145Z" creationid="Wynn" creationdate="20150817T085145Z">
        <seg>局限性：名字为“method”的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Limitation: final, private, and static methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085111Z" creationid="Wynn" creationdate="20150817T085111Z">
        <seg>局限性：final、private、与 static 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Limitations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074456Z" creationid="Wynn" creationdate="20150327T074456Z">
        <seg>局限性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061507Z" creationid="Wynn" creationdate="20150309T061507Z">
        <seg>行覆盖率(Line Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List available test groups.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093907Z" creationid="Wynn" creationdate="20150327T093907Z">
        <seg>列出所有有效的测试分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logfile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093341Z" creationid="Wynn" creationdate="20150327T093341Z">
        <seg>Logfile （日志文件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100824Z" creationid="Wynn" creationdate="20150309T095052Z">
        <seg>Logging （日志记录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical AND.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094518Z" creationid="Wynn" creationdate="20150306T094518Z">
        <seg>逻辑与(AND)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical NOT.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T094535Z" creationid="Wynn" creationdate="20150306T094535Z">
        <seg>逻辑非(NOT)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical OR.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T095900Z" creationid="Wynn" creationdate="20150306T094549Z">
        <seg>逻辑或(OR)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logical XOR.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034051Z" creationid="Wynn" creationdate="20150306T094559Z">
        <seg>逻辑异或(XOR)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you have &lt;l0&gt;~/.composer/vendor/bin/&lt;/l0&gt; in your path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100525Z" creationid="Wynn" creationdate="20150319T100525Z">
        <seg>请确保 path 变量中包含有 &lt;l0&gt;~/.composer/vendor/bin/&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you have the PHP extension &lt;l0&gt;pdo&lt;/l0&gt; and database specific extensions such as &lt;l1&gt;pdo_mysql&lt;/l1&gt; installed. Otherwise the examples shown below will not work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084107Z" creationid="Wynn" creationdate="20150817T084107Z">
        <seg>请确保已经安装了 PHP 扩展模块 &lt;l0&gt;pdo&lt;/l0&gt; 和与数据库对应的特定扩展，比如 &lt;l1&gt;pdo_mysql&lt;/l1&gt;。否则以下范例是无法运行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many beginner and intermediate unit testing examples in any programming language suggest that it is perfectly easy to test your application's logic with simple tests. For database-centric applications this is far away from the reality. Start using Wordpress, TYPO3 or Symfony with Doctrine or Propel, for example, and you will easily experience considerable problems with PHPUnit: just because the database is so tightly coupled to these libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T080602Z" creationid="Wynn" creationdate="20150310T080602Z">
        <seg>在各种编程语言中，许多入门与中级的单元测试范例都暗示着这样一种信息：很容易用简单的测试来对应用程序的逻辑进行测试。但是对于以数据库为中心的应用程序而言，这与现实相去甚远。一旦开始使用诸如 Wordpress、TYPO3、或 Symfony（配合 Doctrine 或 Propel）之类的东西，就很容易在用 PHPUnit 时碰到超多问题：正是由于这些库和数据库之间实在耦合的太紧密了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marking a test as incomplete</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091626Z" creationid="Wynn" creationdate="20150319T091334Z">
        <seg>将测试标记为未完成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marks the current test as incomplete using &lt;l0&gt;$message&lt;/l0&gt; as an explanatory message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091945Z" creationid="Wynn" creationdate="20150319T091945Z">
        <seg>将当前测试标记为未完成，并用 &lt;l0&gt;$message&lt;/l0&gt; 作为说明信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marks the current test as incomplete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091926Z" creationid="Wynn" creationdate="20150319T091926Z">
        <seg>将当前测试标记为未完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marks the current test as skipped using &lt;l0&gt;$message&lt;/l0&gt; as an explanatory message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092342Z" creationid="Wynn" creationdate="20150319T092342Z">
        <seg>将当前测试标记为已跳过，并用 &lt;l0&gt;$message&lt;/l0&gt; 作为说明信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marks the current test as skipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092310Z" creationid="Wynn" creationdate="20150319T092310Z">
        <seg>将当前测试标记为已跳过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Martin Fowler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101615Z" creationid="Wynn" creationdate="20150327T101615Z">
        <seg>Martin Fowler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Matcher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090155Z" creationid="Wynn" creationdate="20150327T090155Z">
        <seg>匹配器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Matchers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090145Z" creationid="Wynn" creationdate="20150327T090145Z">
        <seg>匹配器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meaning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083124Z" creationid="Wynn" creationdate="20150306T083124Z">
        <seg>含义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meszaros</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093342Z" creationid="Wynn" creationdate="20150309T093342Z">
        <seg>Meszaros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meszaros2007</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093340Z" creationid="Wynn" creationdate="20150309T093340Z">
        <seg>Meszaros2007</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091912Z" creationid="Wynn" creationdate="20150319T091912Z">
        <seg>方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods for testing exceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103216Z" creationid="Wynn" creationdate="20150327T103216Z">
        <seg>用于对异常进行测试的方法 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Methods for testing output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024658Z" creationid="Wynn" creationdate="20150330T024658Z">
        <seg>用于对输出进行测试的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mock Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084506Z" creationid="Wynn" creationdate="20150327T084506Z">
        <seg>Mock Object （仿件对象）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mock Objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084409Z" creationid="Wynn" creationdate="20150327T084409Z">
        <seg>仿件对象(Mock Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mocking Traits and Abstract Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091024Z" creationid="Wynn" creationdate="20150327T091024Z">
        <seg>对特质(Trait)与抽象类进行模仿</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mocking the Filesystem</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091357Z" creationid="Wynn" creationdate="20150327T091357Z">
        <seg>对文件系统进行模仿</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mocking the filesystem in a test for a class that interacts with the filesystem</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092145Z" creationid="Wynn" creationdate="20150327T092145Z">
        <seg>在对与文件系统交互的类进行的测试中模仿文件系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More complex argument verification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090023Z" creationid="Wynn" creationdate="20150327T090023Z">
        <seg>更加复杂的参数校验</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More complex assertions can be formulated using the &lt;l0&gt;PHPUnit_Framework_Constraint&lt;/l0&gt; classes. They can be evaluated using the &lt;l1&gt;assertThat()&lt;/l1&gt; method. &lt;x2/&gt; shows how the &lt;l3&gt;logicalNot()&lt;/l3&gt; and &lt;l4&gt;equalTo()&lt;/l4&gt; constraints can be used to express the same assertion as &lt;l5&gt;assertNotEquals()&lt;/l5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082913Z" creationid="Wynn" creationdate="20150306T082913Z">
        <seg>可以用 &lt;l0&gt;PHPUnit_Framework_Constraint&lt;/l0&gt;  类来订立更加复杂的断言。随后可以用 &lt;l1&gt;assertThat()&lt;/l1&gt; 方法来评定这些断言。&lt;x2/&gt; 展示了如何用 &lt;l3&gt;logicalNot()&lt;/l3&gt; 和 &lt;l4&gt;equalTo()&lt;/l4&gt; 约束条件来表达与 &lt;l5&gt;assertNotEquals()&lt;/l5&gt; 等价的断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More examples of &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; and &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; are shown in &lt;x2/&gt; and &lt;x3/&gt; respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051228Z" creationid="Wynn" creationdate="20150330T051228Z">
        <seg>关于 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; 和 &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; 分别在 &lt;x2/&gt; 和 &lt;x3/&gt; 有更多相关范例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More examples of &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;, &lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; and &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt; are shown in &lt;x3/&gt;, &lt;x4/&gt; and &lt;x5/&gt; respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103032Z" creationid="Wynn" creationdate="20150327T103032Z">
        <seg>关于 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;、&lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; 和 &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt;，分别在&lt;x3/&gt;、&lt;x4/&gt; 和 &lt;x5/&gt;有更多相关范例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More setUp() than tearDown()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081315Z" creationid="Wynn" creationdate="20150319T081315Z">
        <seg>setUp() 多 tearDown() 少</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More specialized comparisons are used for specific argument types for &lt;l0&gt;$expected&lt;/l0&gt; and &lt;l1&gt;$actual&lt;/l1&gt;, see below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085626Z" creationid="Wynn" creationdate="20150303T085626Z">
        <seg>如果 &lt;l0&gt;$expected&lt;/l0&gt; 和 &lt;l1&gt;$actual&lt;/l1&gt; 是某些特定的类型，将使用更加专门的比较方式，参阅下文。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Murali Nandigama</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032029Z" creationid="Wynn" creationdate="20150330T032029Z">
        <seg>Murali Nandigama</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MySQL XML DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T073951Z" creationid="Wynn" creationdate="20150317T073951Z">
        <seg>MySQL XML DataSet （MySQL XML 数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Named data sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093636Z" creationid="Wynn" creationdate="20150327T093636Z">
        <seg>命名数据集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Namespaced Classes and the Skeleton Generator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043227Z" creationid="Wynn" creationdate="20150330T043227Z">
        <seg>使用了命名空间的类与骨架生成器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, PDO is only required for the fixture clean- and set-up and for assertions. You can use whatever database abstraction you want inside your own code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042441Z" creationid="Wynn" creationdate="20150319T042441Z">
        <seg>不，只在基境的清理与建立阶段还有断言检定时用到PDO。在你的自有代码中，可以使用任意数据库抽象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, PHPUnit requires all database objects to be available when the suite is started. The Database, tables, sequences, triggers and views have to be created before you run the test suite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042335Z" creationid="Wynn" creationdate="20150319T042335Z">
        <seg>不，PHPUnit 要求在测试套件开始时所有数据库对象必须全部可用。数据库、表、序列、触发器还有视图，必须全部在运行测试套件之前创建好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not all tests can be run in every environment. Consider, for instance, a database abstraction layer that has several drivers for the different database systems it supports. The tests for the MySQL driver can of course only be run if a MySQL server is available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092051Z" creationid="Wynn" creationdate="20150319T092051Z">
        <seg>并非所有测试都能在任何环境中运行。比如说，考虑这样一种情况：一个数据库抽象层，针对其所支持的各种数据库系统有多个不同的驱动程序。针对 MySQL 驱动程序的测试当然只在 MySQL 服务器可用才能运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we can send commands to the Selenium Server using its client/server protocol.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T033213Z" creationid="Wynn" creationdate="20150327T033213Z">
        <seg>现在可以用 Selenium Server 的客户端/服务器端协议来向它发送命令了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we have received a public key for an entity known as "Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;". However, we have no way of verifying this key was created by the person known as Sebastian Bergmann. But, let's try to verify the release signature again.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100254Z" creationid="Wynn" creationdate="20150319T100254Z">
        <seg>现在已经取得了条目名称为"Sebastian Bergmann &lt;sb@sebastian-bergmann.de&gt;"的公钥。不过无法检验这个密钥确实是由名叫 Sebastian Bergmann 的人创建的。但是可以先试着校验发行包的签名：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we have to write the &lt;e0&gt;expectedBook.xml&lt;/e0&gt; Flat XML file for this assertion:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T024414Z" creationid="Wynn" creationdate="20150319T024414Z">
        <seg>现在需要为这个断言编写Flat XML 文件 &lt;e0&gt;expectedBook.xml&lt;/e0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, however, the practice of testing in Extreme Programming has evolved into &lt;u0&gt;Test-Driven Development&lt;/u0&gt; (see &lt;x1/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030755Z" creationid="Wynn" creationdate="20150330T030755Z">
        <seg>现在，不管怎样，极限编程中的测试实践已经进化为&lt;u0&gt;测试驱动开发&lt;/u0&gt;（参见 &lt;x1/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we would like to move from tests that require manual interpretation to tests that can run automatically. In &lt;x0/&gt;, we write the comparison of the expected and actual values into the test code and print &lt;l1&gt;ok&lt;/l1&gt; if the values are equal. If we ever see a &lt;l2&gt;not ok&lt;/l2&gt; message, we know something is wrong.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030140Z" creationid="Wynn" creationdate="20150330T030140Z">
        <seg>现在，我们要把需要人工对结果进行解读的测试修改成能自动运行。在&lt;x0/&gt;中，我们在测试代码中加入了对预期值与实际值的比较，并且在两个值相等时输出 &lt;l1&gt;ok&lt;/l1&gt;。一旦看到 &lt;l2&gt;not ok&lt;/l2&gt; 讯息，我们就知道出错了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OS</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092508Z" creationid="Wynn" creationdate="20150319T092508Z">
        <seg>OS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects of some classes (e.g., &lt;l0&gt;PDO&lt;/l0&gt;) cannot be serialized and the backup operation will break when such an object is stored e.g. in the &lt;l1&gt;$GLOBALS&lt;/l1&gt; array.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085729Z" creationid="Wynn" creationdate="20150319T085729Z">
        <seg>某些类的实例对象（比如 &lt;l0&gt;PDO&lt;/l0&gt;）无法序列化，因此如果把这样一个对象存放在比如说 &lt;l1&gt;$GLOBALS&lt;/l1&gt; 数组内时，备份操作就会出问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objects of some classes that are provided by PHP itself, such as &lt;l0&gt;PDO&lt;/l0&gt; for example, cannot be serialized and the backup operation will break when such an object is stored in the &lt;l1&gt;$GLOBALS&lt;/l1&gt; array, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040426Z" creationid="Wynn" creationdate="20150330T040426Z">
        <seg>某些 PHP 自身提供的类，比如 &lt;l0&gt;PDO&lt;/l0&gt; ，其实例对象无法序列化，因此如果把这样一个对象存放在比如说 &lt;l1&gt;$GLOBALS&lt;/l1&gt; 数组内时，备份操作就会出问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of note, when using &lt;l0&gt;assertEquals()&lt;/l0&gt; and &lt;l1&gt;assertNotEquals()&lt;/l1&gt; where one variable is the number zero (either integer or float) and the other variable is a string, the types of the variables are also compared (i.e. &lt;u2&gt;=== comparison operator&lt;/u2&gt;, not the normal &lt;l3&gt;==&lt;/l3&gt; comparison operator). This can be problematic in the one case where it is assumed that &lt;l4&gt;0 == ""&lt;/l4&gt; is true (due to &lt;u5&gt;type-juggling&lt;/u5&gt;), but is in fact false when using &lt;l6&gt;assertEquals()&lt;/l6&gt; or &lt;l7&gt;assertNotEquals()&lt;/l7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T040947Z" creationid="Wynn" creationdate="20151222T040947Z">
        <seg>值得注意的是，应用 &lt;l0&gt;assertEquals()&lt;/l0&gt; 和 &lt;l1&gt;assertNotEquals()&lt;/l1&gt; 时，如果其中一个变量是数值零（无论整数还是浮点数），另一个变量是字符串，那么会同时比较变量的类型（换言之，会用 &lt;u2&gt;=== 比较操作符&lt;/u2&gt;，而不是普通的 &lt;l3&gt;==&lt;/l3&gt; 比较操作符）。在假定 &lt;l4&gt;0 == ""&lt;/l4&gt; 为 true（根据 &lt;u5&gt;自动类型转换&lt;/u5&gt;）的情况下使用 &lt;l6&gt;assertEquals()&lt;/l6&gt; 或 &lt;l7&gt;assertNotEquals()&lt;/l7&gt; 这可能会导致问题，因为事实上其判定结果为 false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you get used to writing automated tests, you will likely discover more uses for tests. Here are some examples.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040728Z" creationid="Wynn" creationdate="20150320T040728Z">
        <seg>一旦习惯了编写自动测试，就可能会发现测试的更多用途。这有一些例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the goals of PHPUnit (see &lt;x0/&gt;) is that tests should be composable: we want to be able to run any number or combination of tests together, for instance all tests for the whole project, or the tests for all classes of a component that is part of the project, or just the tests for a single class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042710Z" creationid="Wynn" creationdate="20150330T042710Z">
        <seg>PHPUnit 的目标之一（参见 &lt;x0/&gt;）是测试应当可组合：我们希望能将任意数量的测试以任意组合方式运行，例如，整个项目的所有测试，或者项目中的某个组件内的所有类的测试，又或者仅仅某单个类的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the goals of PHPUnit is that tests should be composable: we want to be able to run any number or combination of tests together, for instance all tests for the whole project, or the tests for all classes of a component that is part of the project, or just the tests for a single class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035634Z" creationid="Wynn" creationdate="20150320T035634Z">
        <seg>PHPUnit 的目标之一是测试应当可组合：我们希望能将任意数量的测试以任意组合方式运行，例如，整个项目的所有测试，或者项目中的某个组件内的所有类的测试，又或者仅仅某单个类的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the most time-consuming parts of writing tests is writing the code to set the world up in a known state and then return it to its original state when the test is complete. This known state is called the &lt;e0&gt;fixture&lt;/e0&gt; of the test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075743Z" creationid="Wynn" creationdate="20150319T075743Z">
        <seg>在编写测试时，最费时的部分之一是编写代码来将整个场景设置成某个已知的状态，并在测试结束后将其复原到初始状态。这个已知的状态称为测试的 &lt;e0&gt;基境(fixture)&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only mock objects generated within the scope of a test will be verified automatically by PHPUnit. Mock objects generated in data providers, for instance, or injected into the test using the &lt;l0&gt;@depends&lt;/l0&gt; annotation will not be verified automatically by PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085849Z" creationid="Wynn" creationdate="20150817T085849Z">
        <seg>PHPUnit只会对在某个测试的作用域内生成的仿件对象进行自动校验。诸如在数据供给器内生成或用&lt;l0&gt;@depends&lt;/l0&gt; 标注注入测试的仿件对象，PHPUnit并不会自动对其进行校验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only mock objects generated within the scope of a test will be verified automatically by PHPUnit. Mock objects generated in data providers, for instance, will not be verified by PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084543Z" creationid="Wynn" creationdate="20150327T084543Z">
        <seg>PHPUnit只会对在某个测试的作用域内生成的仿件对象进行自动校验，PHPUnit 不会对在诸如数据供给器内生成的仿件对象进行校验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only runs tests from the specified group(s). A test can be tagged as belonging to a group using the &lt;l0&gt;@group&lt;/l0&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093812Z" creationid="Wynn" creationdate="20150327T093812Z">
        <seg>只运行来自指定分组（可以多个）的测试。可以用 &lt;l0&gt;@group&lt;/l0&gt; 标注为测试标记其所属的分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only runs tests whose name matches the given regular expression pattern. If the pattern is not enclosed in delimiters, PHPUnit will enclose the pattern in &lt;l0&gt;/&lt;/l0&gt; delimiters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093535Z" creationid="Wynn" creationdate="20150327T093535Z">
        <seg>只运行名称与给定模式匹配的测试。如果模式未闭合包裹于分隔符，PHPUnit 将用 &lt;l0&gt;/&lt;/l0&gt; 分隔符对其进行闭合包裹。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only runs the test suite whose name matches the given pattern.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093750Z" creationid="Wynn" creationdate="20150327T093750Z">
        <seg>只运行名称与给定模式匹配的测试套件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only search for test files with specified suffix(es).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093915Z" creationid="Wynn" creationdate="20150327T093915Z">
        <seg>只查找文件名以指定后缀（可以多个）结尾的测试文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Opcode Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T062505Z" creationid="Wynn" creationdate="20150309T062419Z">
        <seg>Opcode 覆盖率(Opcode Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open a command line (e.g., press &lt;k0&gt;&lt;k1&gt;Windows&lt;/k1&gt;&lt;k2&gt;R&lt;/k2&gt;&lt;/k0&gt; » type &lt;u3&gt;cmd&lt;/u3&gt; » &lt;k4&gt;ENTER&lt;/k4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095618Z" creationid="Wynn" creationdate="20150319T095618Z">
        <seg>打开命令行（例如，按 &lt;k0&gt;&lt;k1&gt;Windows&lt;/k1&gt;&lt;k2&gt;R&lt;/k2&gt;&lt;/k0&gt; » 输入 &lt;u3&gt;cmd&lt;/u3&gt; » &lt;k4&gt;ENTER&lt;/k4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open a new command line and confirm that you can execute PHPUnit from any path:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095857Z" creationid="Wynn" creationdate="20150319T095857Z">
        <seg>新开一个命令行窗口，确认一下可以在任意路径下执行 PHPUnit：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optional packages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100636Z" creationid="Wynn" creationdate="20150319T100636Z">
        <seg>可选的组件包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optionally print to &lt;l0&gt;STDERR&lt;/l0&gt; instead of &lt;l1&gt;STDOUT&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095931Z" creationid="Wynn" creationdate="20150327T095931Z">
        <seg>选择输出到 &lt;l0&gt;STDERR&lt;/l0&gt; 而非 &lt;l1&gt;STDOUT&lt;/l1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optionally, all whitelisted files can be added to the code coverage report by setting &lt;l0&gt;addUncoveredFilesFromWhitelist="true"&lt;/l0&gt; in your PHPUnit configuration (see &lt;x1/&gt;). This allows the inclusion of files that are not tested yet at all. If you want to get information about which lines of such an uncovered file are executable, for instance, you also need to set &lt;l2&gt;processUncoveredFilesFromWhitelist="true"&lt;/l2&gt; in your PHPUnit configuration (see &lt;x3/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070226Z" creationid="Wynn" creationdate="20150309T070226Z">
        <seg>可以在 PHPUnit 的配置信息中设置 &lt;l0&gt;addUncoveredFilesFromWhitelist="true"&lt;/l0&gt; 来将白名单中包含的所有文件全部加入到代码覆盖率报告中（参见&lt;x1/&gt;）。这样可以把完全没有测试到的文件也一并包含到报告中。如果需要知道这些未被覆盖文件中有哪些行是可执行的，需要同时在 PHPUnit 的配置信息中设置 &lt;l2&gt;processUncoveredFilesFromWhitelist="true"&lt;/l2&gt;（参见&lt;x3/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Organizing Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035630Z" creationid="Wynn" creationdate="20150320T035630Z">
        <seg>组织测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other Uses for Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040725Z" creationid="Wynn" creationdate="20150320T040725Z">
        <seg>测试的其他用途</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output During Test Execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031340Z" creationid="Wynn" creationdate="20150327T031340Z">
        <seg>测试执行期间产生的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output debug information such as the name of a test when its execution starts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100126Z" creationid="Wynn" creationdate="20150327T100126Z">
        <seg>输出调试信息，例如当一个测试开始执行时输出其名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output more verbose information, for instance the names of tests that were incomplete or have been skipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100116Z" creationid="Wynn" creationdate="20150327T100116Z">
        <seg>输出更详尽的信息，例如不完整或者跳过的测试的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overall, integrated unit testing makes the cost and risk of any individual change smaller. It will allow the project to make [...] major architectural improvements [...] quickly and confidently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092635Z" creationid="Wynn" creationdate="20150327T092635Z">
        <seg>总之，进行集成单元测试降低了任何修改的成本与风险。这使得项目能够更快并且更有信心地进行[...]重大架构改良[...]。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Override to perform assertions that are shared by all tests of a test case. This method is called after each command that is sent to the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073554Z" creationid="Wynn" creationdate="20150327T073554Z">
        <seg>覆盖本方法来为所有测试用例中的测试执行公用断言。每次向 Selenium Server 服务器发送命令之后都会调用本方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092450Z" creationid="Wynn" creationdate="20150319T092450Z">
        <seg>PHP</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP Archive (PHAR)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095028Z" creationid="Wynn" creationdate="20150319T095000Z">
        <seg>PHP 档案包 (PHAR)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP Arrays can obviously handle &lt;l0&gt;NULL&lt;/l0&gt; values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074613Z" creationid="Wynn" creationdate="20150317T074547Z">
        <seg> PHP 数组显然可以处理 &lt;l0&gt;NULL&lt;/l0&gt; 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP Error</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024038Z" creationid="Wynn" creationdate="20150330T024038Z">
        <seg>PHP Error （PHP 错误）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024043Z" creationid="Wynn" creationdate="20150330T024043Z">
        <seg>PHP Notice （PHP 通知）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP Warning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024048Z" creationid="Wynn" creationdate="20150330T024048Z">
        <seg>PHP Warning （PHP 警告）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP's &lt;l0&gt;error_reporting&lt;/l0&gt; runtime configuration can limit which errors PHPUnit will convert to exceptions. If you are having issues with this feature, be sure PHP is not configured to suppress the type of errors you're testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024127Z" creationid="Wynn" creationdate="20150330T024127Z">
        <seg>PHP 的 &lt;l0&gt;error_reporting&lt;/l0&gt; 运行时配置会对 PHPUnit 将哪些错误转换为异常有所限制。如果在这个特性上碰到问题，请确认 PHP 的配置中没有抑制想要测试的错误类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093406Z" creationid="Wynn" creationdate="20150309T093406Z">
        <seg>PHPUnit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 3.7 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041304Z" creationid="Wynn" creationdate="20150330T041304Z">
        <seg>PHPUnit 3.7 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040321Z" creationid="Wynn" creationdate="20150330T040321Z">
        <seg>PHPUnit 3.7.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.0 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061529Z" creationid="Wynn" creationdate="20150330T061529Z">
        <seg>PHPUnit 4.0 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061456Z" creationid="Wynn" creationdate="20150330T061456Z">
        <seg>PHPUnit 4.0.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.1 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062801Z" creationid="Wynn" creationdate="20150330T062801Z">
        <seg>PHPUnit 4.1 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062729Z" creationid="Wynn" creationdate="20150330T062729Z">
        <seg>PHPUnit 4.1.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.2 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063138Z" creationid="Wynn" creationdate="20150330T063138Z">
        <seg>PHPUnit 4.2 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063120Z" creationid="Wynn" creationdate="20150330T063120Z">
        <seg>PHPUnit 4.2.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.3 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063348Z" creationid="Wynn" creationdate="20150330T063348Z">
        <seg>PHPUnit 4.3 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063339Z" creationid="Wynn" creationdate="20150330T063339Z">
        <seg>PHPUnit 4.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.4 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063521Z" creationid="Wynn" creationdate="20150330T063521Z">
        <seg>PHPUnit 4.4 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063510Z" creationid="Wynn" creationdate="20150330T063510Z">
        <seg>PHPUnit 4.4.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.5 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063655Z" creationid="Wynn" creationdate="20150330T063655Z">
        <seg>PHPUnit 4.5 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063645Z" creationid="Wynn" creationdate="20150330T063645Z">
        <seg>PHPUnit 4.5.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.6 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093624Z" creationid="Wynn" creationdate="20150319T093624Z">
        <seg>PHPUnit 4.6 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063808Z" creationid="Wynn" creationdate="20150330T063808Z">
        <seg>PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.7 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075526Z" creationid="Wynn" creationdate="20150706T075526Z">
        <seg>PHPUnit 4.7 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075648Z" creationid="Wynn" creationdate="20150319T075648Z">
        <seg>PHPUnit 4.7.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.8 requires PHP 5.3.3; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075628Z" creationid="Wynn" creationdate="20150706T075628Z">
        <seg>PHPUnit 4.8 需要 PHP 5.3.3，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T085600Z" creationid="Wynn" creationdate="20150416T085600Z">
        <seg>PHPUnit 4.8.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.0 requires PHP 5.6; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080201Z" creationid="Wynn" creationdate="20150706T080201Z">
        <seg>PHPUnit 5.0 需要 PHP 5.6，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080137Z" creationid="Wynn" creationdate="20150706T080137Z">
        <seg>PHPUnit 5.0.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.1 requires PHP 5.6; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041339Z" creationid="Wynn" creationdate="20151222T041339Z">
        <seg>PHPUnit 5.1 需要 PHP 5.6，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084819Z" creationid="Wynn" creationdate="20150817T084819Z">
        <seg>PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.2 requires PHP 5.6; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T042504Z" creationid="Wynn" creationdate="20160113T042504Z">
        <seg>PHPUnit 5.2 需要 PHP 5.6，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151020T082640Z" creationid="Wynn" creationdate="20151020T082640Z">
        <seg>PHPUnit 5.2.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.3 requires PHP 5.6; using the latest version of PHP is highly recommended.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T040835Z" creationid="Wynn" creationdate="20160113T040835Z">
        <seg>PHPUnit 5.3 需要 PHP 5.6，强烈推荐使用最新版本的 PHP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151214T030456Z" creationid="Wynn" creationdate="20151214T030456Z">
        <seg>PHPUnit 5.3.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds

There was 1 failure:

1) DataDrivenTest
Failed asserting that two strings are equal.
expected string &lt;bar&gt;
difference      &lt;  x&gt;
got string      &lt;baz&gt;
/home/sb/DataDrivenTest.php:32
/home/sb/DataDrivenTest.php:53

FAILURES!
Tests: 2, Failures: 1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit Manual</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035710Z" creationid="Wynn" creationdate="20150309T035710Z">
        <seg>PHPUnit 手册</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit also requires the &lt;u0&gt;pcre&lt;/u0&gt;, &lt;u1&gt;reflection&lt;/u1&gt;, and &lt;u2&gt;spl&lt;/u2&gt; extensions. These standard extensions are enabled by default and cannot be disabled without patching PHP's build system and/or C sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084958Z" creationid="Wynn" creationdate="20150817T084958Z">
        <seg>PHPUnit 还需要 &lt;u0&gt;pcre&lt;/u0&gt;、&lt;u1&gt;reflection&lt;/u1&gt;、&lt;u2&gt;spl&lt;/u2&gt; 扩展。这些标准扩展默认启用，并且除非修改 PHP 的构建系统和 C 源代码，否则无法禁用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit also requires the &lt;u0&gt;pcre&lt;/u0&gt;, &lt;u1&gt;reflection&lt;/u1&gt;, and &lt;u2&gt;spl&lt;/u2&gt; extensions. They are required by PHP core since 5.3.0 and normally cannot be disabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T094854Z" creationid="Wynn" creationdate="20150319T093722Z">
        <seg>PHPUnit 还需要 &lt;u0&gt;pcre&lt;/u0&gt;、&lt;u1&gt;reflection&lt;/u1&gt;、&lt;u2&gt;spl&lt;/u2&gt; 扩展。自 5.3.0 开始 PHP 核心需要这些扩展，通常无法禁用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit and Selenium</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031958Z" creationid="Wynn" creationdate="20150327T031958Z">
        <seg>PHPUnit 与 Selenium</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit assumes that most tests succeed and it is not worth reporting the details of successful tests. When a test fails, that fact is worth noting and reporting. The vast majority of tests should succeed and are not worth commenting on except to count the number of tests that run. This is an assumption that is really built into the reporting classes, and not into the core of PHPUnit. When the results of a test run are reported, you see how many tests were executed, but you only see details for those that failed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041221Z" creationid="Wynn" creationdate="20150330T041221Z">
        <seg>PHPUnit 假定绝大多数测试都会成功，并且这些成功的测试其细节无需报告。只有失败的测试才值得关注并报告。除了统计运行的测试数量外，对占绝大多数的成功的测试无需关注。这个假设实际上是内建于报告类中，而非 PHPUnit 的内核中。在测试报告中，你可以看到一共运行了多少测试，但是只有失败的测试才有明细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit assumes that the database schema with all its tables, triggers, sequences and views is created before a test is run. This means you as developer have to make sure that the database is correctly setup before running the suite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100233Z" creationid="Wynn" creationdate="20150316T100030Z">
        <seg>PHPUnit 假设在测试运行之前数据库以及其中的所有表(table)、触发器(trigger)、序列(Sequence)和视图(view)都已经创建好。这意味着开发者必须在运行测试套件之前确保数据库已经正确建立。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit attempts to resolve these conflicts by using PHP as the testing language. Sometimes the full power of PHP is overkill for writing little straight-line tests, but by using PHP we leverage all the experience and tools programmers already have in place. Since we are trying to convince reluctant testers, lowering the barrier to writing those initial tests is particularly important.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041159Z" creationid="Wynn" creationdate="20150330T041159Z">
        <seg>PHPUnit 使用 PHP 本身来作为测试语言，尝试以此解决这些矛盾。在某些情况下，用功能强大的 PHP 的来写个小小的测试显得有些杀鸡用牛刀。但是使用 PHP，让程序员们可以直接利用已经掌握的全部经验和工具。由于我们要说服心存抵触的测试人员，因此降低开始编写测试的门槛是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can be extended in various ways to make the writing of tests easier and customize the feedback you get from running tests. Here are common starting points to extend PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042626Z" creationid="Wynn" creationdate="20150319T042626Z">
        <seg>可以用多种方式对 PHPUnit 进行扩展，使编写测试更容易，以及对运行测试所得到的反馈进行定制。扩展 PHPUnit 时，一般从这些点入手：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can be strict about output during tests. This check can be enabled by using the &lt;l0&gt;--disallow-test-output&lt;/l0&gt; option on the commandline or by setting &lt;l1&gt;beStrictAboutOutputDuringTests="true"&lt;/l1&gt; in PHPUnit's XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031655Z" creationid="Wynn" creationdate="20150327T031549Z">
        <seg>PHPUnit 可以更严格对待测试执行期间产生的输出。 此项检查可以用命令行选项 &lt;l0&gt;--disallow-test-output&lt;/l0&gt; 或在 PHPUnit 的 XML 配置文件中设置 &lt;l1&gt;beStrictAboutOutputDuringTests="true"&lt;/l1&gt; 来启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can be strict about tests that do not test anything. This check can be enabled by using the &lt;l0&gt;--report-useless-tests&lt;/l0&gt; option on the commandline or by setting &lt;l1&gt;beStrictAboutTestsThatDoNotTestAnything="true"&lt;/l1&gt; in PHPUnit's XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031553Z" creationid="Wynn" creationdate="20150327T031309Z">
        <seg>PHPUnit 可以更严格对待事实上不测试任何内容的测试。此项检查可以用命令行选项 &lt;l0&gt;--report-useless-tests&lt;/l0&gt; 或在 PHPUnit 的 XML 配置文件中设置  &lt;l1&gt;beStrictAboutTestsThatDoNotTestAnything="true"&lt;/l1&gt; 来启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can be strict about tests that manipulate global state. This check can be enabled by using the &lt;l0&gt;--strict-global-state&lt;/l0&gt; option on the commandline or by setting &lt;l1&gt;beStrictAboutChangesToGlobalState="true"&lt;/l1&gt; in PHPUnit's XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150416T083149Z" creationid="Wynn" creationdate="20150416T083149Z">
        <seg>PHPUnit 可以更严格对待篡改全局状态的测试。此项检查可以用命令行选项 &lt;l0&gt;--strict-global-state&lt;/l0&gt; 或在 PHPUnit 的 XML 配置文件中设置 &lt;l1&gt;beStrictAboutChangesToGlobalState="true"&lt;/l1&gt; 来启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can be strict about unintentionally covered code. This check can be enabled by using the &lt;l0&gt;--strict-coverage&lt;/l0&gt; option on the commandline or by setting &lt;l1&gt;checkForUnintentionallyCoveredCode="true"&lt;/l1&gt; in PHPUnit's XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031646Z" creationid="Wynn" creationdate="20150327T031432Z">
        <seg>PHPUnit 可以更严格对待意外的代码覆盖。此项检查可以用命令行选项 &lt;l0&gt;--strict-coverage&lt;/l0&gt; 或在 PHPUnit 的 XML 配置文件中设置 &lt;l1&gt;checkForUnintentionallyCoveredCode="true"&lt;/l1&gt; 来启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can generate an HTML-based code coverage report as well as XML-based logfiles with code coverage information in various formats (Clover, Crap4J, PHPUnit). Code coverage information can also be reported as text (and printed to STDOUT) and exported as PHP code for further processing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061035Z" creationid="Wynn" creationdate="20150309T061035Z">
        <seg>PHPUnit 可以生成基于 HTML 的代码覆盖率报告，同时也能生成好几种（Clover、Crap4J、PHPUnit）基于XML的代码覆盖率信息记录文件。代码覆盖率信息也能以文本格式提供（同时可以输出到STDOUT）或以PHP代码格式输出以供进一步处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can optionally capture a screenshot when a Selenium test fails. To enable this, set &lt;l0&gt;$captureScreenshotOnFailure&lt;/l0&gt;, &lt;l1&gt;$screenshotPath&lt;/l1&gt;, and &lt;l2&gt;$screenshotUrl&lt;/l2&gt; in your test case class as shown in &lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063745Z" creationid="Wynn" creationdate="20150327T063745Z">
        <seg>PHPUnit 还可以在 Selenium 测试失败时截屏。要启用这个功能，在测试用例类里设置 &lt;l0&gt;$captureScreenshotOnFailure&lt;/l0&gt;、&lt;l1&gt;$screenshotPath&lt;/l1&gt; 和 &lt;l2&gt;$screenshotUrl&lt;/l2&gt;，如&lt;x3/&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can perform additional checks while it executes the tests. In addition to the fine-grained control over the various strict mode checks (see below) you may use the &lt;l0&gt;--strict&lt;/l0&gt; commandline option or set &lt;l1&gt;strict="true"&lt;/l1&gt; in PHPUnit's XML configuration file to enable all of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062008Z" creationid="Wynn" creationdate="20150330T061934Z">
        <seg>在执行测试时，PHPUnit 可以进行一些额外的检查。除了细粒度地控制各种严格模式下的检查（见下文）外，还可以使用命令行选项 &lt;l0&gt;--strict&lt;/l0&gt; 或在 PHPUnit 的 XML 配置文件中设置 &lt;l1&gt;strict="true"&lt;/l1&gt; 来将它们全部启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can perform the additional checks documented below while it executes the tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031045Z" creationid="Wynn" creationdate="20150327T031045Z">
        <seg>在执行测试时，PHPUnit 可以进行一些额外的检查，见下文。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit can produce several types of logfiles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100847Z" creationid="Wynn" creationdate="20150319T100806Z">
        <seg>PHPUnit 可以生成几种类型的日志文件。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit distinguishes between &lt;e0&gt;failures&lt;/e0&gt; and &lt;e1&gt;errors&lt;/e1&gt;. A failure is a violated PHPUnit assertion such as a failing &lt;l2&gt;assertEquals()&lt;/l2&gt; call. An error is an unexpected exception or a PHP error. Sometimes this distinction proves useful since errors tend to be easier to fix than failures. If you have a big list of problems, it is best to tackle the errors first and see if you have any failures left when they are all fixed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093006Z" creationid="Wynn" creationdate="20150327T093006Z">
        <seg>PHPUnit 区分 &lt;e0&gt;败(failure)&lt;/e0&gt;与&lt;e1&gt;错误(error)&lt;/e1&gt;。失败指的是被违背了的 PHPUnit 断言，例如一个失败的 &lt;l2&gt;assertEquals()&lt;/l2&gt; 调用。错误指的是意料之外的异常(exception)或 PHP 错误。这种差异已被证明在某些时候是非常有用的，因为错误往往比失败更容易修复。如果得到了一个非常长的问题列表，那么最好先对付错误，当错误全部修复了之后再试一次瞧瞧还有没有失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit errs on the side of isolation over quick execution. Isolated tests are valuable because they provide high-quality feedback. You do not get a report with a bunch of test failures, which were really caused because one test at the beginning of the suite failed and left the world messed up for the rest of the tests. This orientation towards isolated tests encourages designs with a large number of simple objects. Each object can be tested quickly in isolation. The result is better designs &lt;e0&gt;and&lt;/e0&gt; faster tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041217Z" creationid="Wynn" creationdate="20150330T041217Z">
        <seg>PHPUnit 侧重于相互隔离而非执行快速。相互隔离的测试能提供高质量的反馈，这是很宝贵的。不会碰到这样的情况：其实仅仅只有测试套件开头的某个测试失败，但因为它给后继测试留下了混乱的测试场景，结果导致在测试报告里出现了一连串的测试失败信息。对相互隔离的侧重鼓励在设计中采用大量简单对象。每个对象都能在互相隔离的情况下快速完成测试。由此得到的结果是更好的设计&lt;e0&gt;和&lt;/e0&gt;更快的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit has built-in support for using Prophecy to create test doubles since version 4.5. &lt;x0/&gt; shows how the same test shown in &lt;x1/&gt; can be expressed using Prophecy's philosophy of prophecies and revelations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090924Z" creationid="Wynn" creationdate="20150327T090924Z">
        <seg>从版本 4.5 开始，PHPUnit 为用 Prophecy 建立测试替身提供了内建支持。&lt;x0/&gt;展示了&lt;x1/&gt;中展示的测试应该如何用 Prophecy 的的预言式理念方式来达到同样的效果：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit requires the &lt;u0&gt;ctype&lt;/u0&gt;, &lt;u1&gt;dom&lt;/u1&gt;, &lt;u2&gt;json&lt;/u2&gt;, &lt;u3&gt;pcre&lt;/u3&gt;, &lt;u4&gt;reflection&lt;/u4&gt;, and &lt;u5&gt;spl&lt;/u5&gt; extensions. These extensions are usually compiled and enabled by default. Some of them cannot even be disabled and are therefore always available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041407Z" creationid="Wynn" creationdate="20150330T041407Z">
        <seg>PHPUnit 需要使用以下扩展：&lt;u0&gt;ctype&lt;/u0&gt;、&lt;u1&gt;dom&lt;/u1&gt;、&lt;u2&gt;json&lt;/u2&gt;、&lt;u3&gt;pcre&lt;/u3&gt;、&lt;u4&gt;reflection&lt;/u4&gt; 和 &lt;u5&gt;spl&lt;/u5&gt;。通常，这些扩展会被一并编译并默认启用。其中的某些甚至是根本无法禁用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit requires the &lt;u0&gt;dom&lt;/u0&gt; and &lt;u1&gt;json&lt;/u1&gt; extensions, which are normally enabled by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T094818Z" creationid="Wynn" creationdate="20150319T093714Z">
        <seg>PHPUnit 需要使用 &lt;u0&gt;dom&lt;/u0&gt; 和 &lt;u1&gt;json&lt;/u1&gt; 扩展，它们通常是默认启用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit requires the &lt;u0&gt;dom&lt;/u0&gt;, &lt;u1&gt;json&lt;/u1&gt;, &lt;u2&gt;pcre&lt;/u2&gt;, &lt;u3&gt;reflection&lt;/u3&gt;, and &lt;u4&gt;spl&lt;/u4&gt; extensions. These extensions are usually compiled and enabled by default. Some of them cannot even be disabled and are therefore always available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061612Z" creationid="Wynn" creationdate="20150330T061612Z">
        <seg>PHPUnit 需要使用以下扩展：&lt;u0&gt;dom&lt;/u0&gt;、&lt;u1&gt;json&lt;/u1&gt;、&lt;u2&gt;pcre&lt;/u2&gt;、&lt;u3&gt;reflection&lt;/u3&gt; 及 &lt;u4&gt;spl&lt;/u4&gt;。通常，这些扩展会被一并编译并默认启用。其中的某些甚至是根本无法禁用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit ships with one concrete test decorator: &lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt;. It is used to run a test repeatedly and only count it as a success if all iterations are successful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073345Z" creationid="Wynn" creationdate="20150319T073345Z">
        <seg>PHPUnit 了包含了一个具体的测试修饰器：&lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt;。它用于重复运行某个测试，并且只在全部循环中都成功时计为成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit ships with two concrete test decorators: &lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt; and &lt;l1&gt;PHPUnit_Extensions_TestSetup&lt;/l1&gt;. The former is used to run a test repeatedly and only count it as a success if all iterations are successful. The latter was discussed in &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061453Z" creationid="Wynn" creationdate="20150330T061453Z">
        <seg>PHPUnit 包含了两个具体的测试修饰器： &lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt; 和 &lt;l1&gt;PHPUnit_Extensions_TestSetup&lt;/l1&gt;。前者用于重复运行某个测试，并且只在全部次数都成功时计为成功。后者则在&lt;x2/&gt;中讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit supports different ways of organizing tests and composing them into a test suite. This chapter shows the most commonly used approaches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035643Z" creationid="Wynn" creationdate="20150320T035643Z">
        <seg>PHPUnit 支持好几种不同的方式来组织测试以及将它们编排组合成测试套件。本章介绍了最常用的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit supports sharing the setup code. Before a test method is run, a template method called &lt;l0&gt;setUp()&lt;/l0&gt; is invoked. &lt;l1&gt;setUp()&lt;/l1&gt; is where you create the objects against which you will test. Once the test method has finished running, whether it succeeded or failed, another template method called &lt;l2&gt;tearDown()&lt;/l2&gt; is invoked. &lt;l3&gt;tearDown()&lt;/l3&gt; is where you clean up the objects against which you tested.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075949Z" creationid="Wynn" creationdate="20150319T075949Z">
        <seg>PHPUnit 支持共享建立基境的代码。在运行某个测试方法前，会调用一个名叫 &lt;l0&gt;setUp()&lt;/l0&gt; 的模板方法。&lt;l1&gt;setUp()&lt;/l1&gt; 是创建测试所用对象的地方。当测试方法运行结束后，不管是成功还是失败，都会调用另外一个名叫 &lt;l2&gt;tearDown()&lt;/l2&gt; 的模板方法。&lt;l3&gt;tearDown()&lt;/l3&gt; 是清理测试所用对象的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101657Z" creationid="Wynn" creationdate="20150327T101642Z">
        <seg>PHPUnit支持对测试方法之间的显式依赖关系进行声明。这种依赖关系并不是定义在测试方法的执行顺序中，而是允许生产者(producer)返回一个测试基境(fixture)的实例，并将此实例传递给依赖于它的消费者(consumer)们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers. &lt;x0/&gt; shows how to use the &lt;l1&gt;@depends&lt;/l1&gt; annotation to express dependencies between test methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T093318Z" creationid="Wynn" creationdate="20150228T093318Z">
        <seg>PHPUnit支持对测试方法之间的显式依赖关系进行声明。这种依赖关系并不是定义在测试方法的执行顺序中，而是允许生产者(producer)返回一个测试基境(fixture)的实例，并将此实例传递给依赖于它的消费者(consumer)们。&lt;x0/&gt;展示了如何用 &lt;l1&gt;@depends&lt;/l1&gt; 标注来表达测试方法之间的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit will then iterate over all the fixture rows specified and insert them into their respective tables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071124Z" creationid="Wynn" creationdate="20150313T071124Z">
        <seg>PHPUnit 随后将迭代所有指定的基境数据行并将其插入到对应的表里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's Goals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040936Z" creationid="Wynn" creationdate="20150330T040708Z">
        <seg>PHPUnit 的目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's TestDox functionality looks at a test class and all the test method names and converts them from camel case PHP names to sentences: &lt;l0&gt;testBalanceIsInitiallyZero()&lt;/l0&gt; becomes "Balance is initially zero". If there are several test methods whose names only differ in a suffix of one or more digits, such as &lt;l1&gt;testBalanceCannotBecomeNegative()&lt;/l1&gt; and &lt;l2&gt;testBalanceCannotBecomeNegative2()&lt;/l2&gt;, the sentence "Balance cannot become negative" will appear only once, assuming that all of these tests succeed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T023725Z" creationid="Wynn" creationdate="20150327T023647Z">
        <seg>PHPUnit 的 TestDox 功能着眼于测试类及其所有测试方法的名称，将它们驼峰式大小写（camel case）拼写的 PHP 名称转换为句子：&lt;l0&gt;testBalanceIsInitiallyZero()&lt;/l0&gt; 转化为 "Balance is initially zero（初始结余为零）"。如果有多个测试方法的名字互相之间的差异只是一个或多个数字的后缀，例如 &lt;l1&gt;testBalanceCannotBecomeNegative()&lt;/l1&gt; 和 &lt;l2&gt;testBalanceCannotBecomeNegative2()&lt;/l2&gt;，假如所有这些测试都成功，句子"Balance cannot become negative（结余不能变为负数）"只会出现一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's XML configuration file (&lt;x0/&gt;) can also be used to compose a test suite. &lt;x1/&gt; shows a minimal &lt;f2&gt;phpunit.xml&lt;/f2&gt; file that will add all &lt;l3&gt;*Test&lt;/l3&gt; classes that are found in &lt;f4&gt;*Test.php&lt;/f4&gt; files when the &lt;f5&gt;tests&lt;/f5&gt; directory is recursively traversed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040205Z" creationid="Wynn" creationdate="20150320T040205Z">
        <seg>PHPUnit的 XML 配置文件（&lt;x0/&gt;）也可以用于编排测试套件。&lt;x1/&gt;展示了一个最小化的 &lt;f2&gt;phpunit.xml&lt;/f2&gt; 例子，它将在递归遍历 &lt;f5&gt;tests&lt;/f5&gt;  时添加所有在 &lt;f4&gt;*Test.php&lt;/f4&gt; 文件中找到的 &lt;l3&gt;*Test&lt;/l3&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's XML configuration file (&lt;x0/&gt;) can also be used to compose a test suite. &lt;x1/&gt; shows a minimal example that will add all &lt;l2&gt;*Test&lt;/l2&gt; classes that are found in &lt;f3&gt;*Test.php&lt;/f3&gt; files when the &lt;f4&gt;tests&lt;/f4&gt; directory is recursively traversed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042955Z" creationid="Wynn" creationdate="20150330T042955Z">
        <seg>PHPUnit的 XML 配置文件（&lt;x0/&gt;）也可以用于编排测试套件。&lt;x1/&gt;展示了一个最小化的例子，它将在递归遍历 &lt;f4&gt;tests&lt;/f4&gt;  时添加所有在 &lt;f3&gt;*Test.php&lt;/f3&gt; 文件中找到的 &lt;l2&gt;*Test&lt;/l2&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's XML configuration file (see &lt;x0/&gt;) can be used to control the blacklist and the whitelist. Using a whitelist is the recommended best practice to control the list of files included in the code coverage report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T033035Z" creationid="Wynn" creationdate="20150330T033035Z">
        <seg>PHPUnit 的 XML 配置文件（参见 &lt;x0/&gt;）可以用于控制黑名单与白名单。使用白名单来控制代码覆盖率报告所包含的文件是推荐的最佳实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit's code coverage functionality makes use of the &lt;u0&gt;PHP_CodeCoverage&lt;/u0&gt; component, which in turn leverages the statement coverage functionality provided by the &lt;u1&gt;Xdebug&lt;/u1&gt; extension for PHP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032315Z" creationid="Wynn" creationdate="20150330T032315Z">
        <seg>PHPUnit 的代码覆盖率功能使用了 &lt;u0&gt;PHP_CodeCoverage&lt;/u0&gt; 组件，这反过来又利用了 &lt;u1&gt;Xdebug&lt;/u1&gt; 扩展为 PHP 提供的语句覆盖率功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_RepeatedTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070646Z" creationid="Wynn" creationdate="20150319T070646Z">
        <seg>PHPUnit_Extensions_RepeatedTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_Selenium2TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T033217Z" creationid="Wynn" creationdate="20150327T033217Z">
        <seg>PHPUnit_Extensions_Selenium2TestCase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_SeleniumTestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063122Z" creationid="Wynn" creationdate="20150327T063122Z">
        <seg>PHPUnit_Extensions_SeleniumTestCase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_Story_TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031020Z" creationid="Wynn" creationdate="20150330T031020Z">
        <seg>PHPUnit_Extensions_Story_TestCase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_TestDecorator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070629Z" creationid="Wynn" creationdate="20150319T070629Z">
        <seg>PHPUnit_Extensions_TestDecorator</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Extensions_TestSetup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061405Z" creationid="Wynn" creationdate="20150330T061405Z">
        <seg>PHPUnit_Extensions_TestSetup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Assert</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050423Z" creationid="Wynn" creationdate="20150330T050423Z">
        <seg>PHPUnit_Framework_Assert</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_BaseTestListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070152Z" creationid="Wynn" creationdate="20150319T070152Z">
        <seg>PHPUnit_Framework_BaseTestListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_ArrayHasKey arrayHasKey(mixed $key)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093241Z" creationid="Wynn" creationdate="20150309T093241Z">
        <seg>PHPUnit_Framework_Constraint_ArrayHasKey arrayHasKey(mixed $key)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_Attribute attribute(PHPUnit_Framework_Constraint $constraint, $attributeName)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093239Z" creationid="Wynn" creationdate="20150309T093239Z">
        <seg>PHPUnit_Framework_Constraint_Attribute attribute(PHPUnit_Framework_Constraint $constraint, $attributeName)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_Attribute attributeEqualTo($attributeName, $value, $delta = 0, $maxDepth = 10)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093248Z" creationid="Wynn" creationdate="20150309T093248Z">
        <seg>PHPUnit_Framework_Constraint_Attribute attributeEqualTo($attributeName, $value, $delta = 0, $maxDepth = 10)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_ClassHasAttribute classHasAttribute(string $attributeName)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093252Z" creationid="Wynn" creationdate="20150309T093252Z">
        <seg>PHPUnit_Framework_Constraint_ClassHasAttribute classHasAttribute(string $attributeName)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_ClassHasStaticAttribute classHasStaticAttribute(string $attributeName)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093253Z" creationid="Wynn" creationdate="20150309T093253Z">
        <seg>PHPUnit_Framework_Constraint_ClassHasStaticAttribute classHasStaticAttribute(string $attributeName)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_FileExists fileExists()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093249Z" creationid="Wynn" creationdate="20150309T093249Z">
        <seg>PHPUnit_Framework_Constraint_FileExists fileExists()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_GreaterThan greaterThan(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093250Z" creationid="Wynn" creationdate="20150309T093250Z">
        <seg>PHPUnit_Framework_Constraint_GreaterThan greaterThan(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsAnything anything()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093240Z" creationid="Wynn" creationdate="20150309T093240Z">
        <seg>PHPUnit_Framework_Constraint_IsAnything anything()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsEqual equalTo($value, $delta = 0, $maxDepth = 10)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093246Z" creationid="Wynn" creationdate="20150309T093246Z">
        <seg>PHPUnit_Framework_Constraint_IsEqual equalTo($value, $delta = 0, $maxDepth = 10)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsFalse isFalse()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093257Z" creationid="Wynn" creationdate="20150309T093257Z">
        <seg>PHPUnit_Framework_Constraint_IsFalse isFalse()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsIdentical identicalTo(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093255Z" creationid="Wynn" creationdate="20150309T093255Z">
        <seg>PHPUnit_Framework_Constraint_IsIdentical identicalTo(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsInstanceOf isInstanceOf(string $className)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093259Z" creationid="Wynn" creationdate="20150309T093259Z">
        <seg>PHPUnit_Framework_Constraint_IsInstanceOf isInstanceOf(string $className)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsNull isNull()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093300Z" creationid="Wynn" creationdate="20150309T093300Z">
        <seg>PHPUnit_Framework_Constraint_IsNull isNull()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsTrue isTrue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093301Z" creationid="Wynn" creationdate="20150309T093301Z">
        <seg>PHPUnit_Framework_Constraint_IsTrue isTrue()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_IsType isType(string $type)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093302Z" creationid="Wynn" creationdate="20150309T093302Z">
        <seg>PHPUnit_Framework_Constraint_IsType isType(string $type)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_LessThan lessThan(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093304Z" creationid="Wynn" creationdate="20150309T093304Z">
        <seg>PHPUnit_Framework_Constraint_LessThan lessThan(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_ObjectHasAttribute hasAttribute(string $attributeName)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093254Z" creationid="Wynn" creationdate="20150309T093254Z">
        <seg>PHPUnit_Framework_Constraint_ObjectHasAttribute hasAttribute(string $attributeName)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_Or greaterThanOrEqual(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093251Z" creationid="Wynn" creationdate="20150309T093251Z">
        <seg>PHPUnit_Framework_Constraint_Or greaterThanOrEqual(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_Or lessThanOrEqual(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093305Z" creationid="Wynn" creationdate="20150309T093305Z">
        <seg>PHPUnit_Framework_Constraint_Or lessThanOrEqual(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_PCREMatch matchesRegularExpression(string $pattern)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093317Z" creationid="Wynn" creationdate="20150309T093317Z">
        <seg>PHPUnit_Framework_Constraint_PCREMatch matchesRegularExpression(string $pattern)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_StringContains stringContains(string $string, bool $case)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093319Z" creationid="Wynn" creationdate="20150309T093319Z">
        <seg>PHPUnit_Framework_Constraint_StringContains stringContains(string $string, bool $case)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_StringEndsWith stringEndsWith(string $suffix)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093320Z" creationid="Wynn" creationdate="20150309T093320Z">
        <seg>PHPUnit_Framework_Constraint_StringEndsWith stringEndsWith(string $suffix)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_StringStartsWith stringStartsWith(string $prefix)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093322Z" creationid="Wynn" creationdate="20150309T093322Z">
        <seg>PHPUnit_Framework_Constraint_StringStartsWith stringStartsWith(string $prefix)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_TraversableContains contains(mixed $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093243Z" creationid="Wynn" creationdate="20150309T093243Z">
        <seg>PHPUnit_Framework_Constraint_TraversableContains contains(mixed $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnly(string $type)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093244Z" creationid="Wynn" creationdate="20150309T093244Z">
        <seg>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnly(string $type)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnlyInstancesOf(string $classname)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093245Z" creationid="Wynn" creationdate="20150309T093245Z">
        <seg>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnlyInstancesOf(string $classname)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Error</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024049Z" creationid="Wynn" creationdate="20150330T024049Z">
        <seg>PHPUnit_Framework_Error</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Error_Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024147Z" creationid="Wynn" creationdate="20150330T024147Z">
        <seg>PHPUnit_Framework_Error_Notice</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Error_Warning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024152Z" creationid="Wynn" creationdate="20150330T024152Z">
        <seg>PHPUnit_Framework_Error_Warning</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_IncompleteTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091007Z" creationid="Wynn" creationdate="20150319T091007Z">
        <seg>PHPUnit_Framework_IncompleteTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_IncompleteTestError</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091008Z" creationid="Wynn" creationdate="20150319T091008Z">
        <seg>PHPUnit_Framework_IncompleteTestError</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount any()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090331Z" creationid="Wynn" creationdate="20150327T090331Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount any()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex at(int $index)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090319Z" creationid="Wynn" creationdate="20150327T090319Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex at(int $index)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce atLeastOnce()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090239Z" creationid="Wynn" creationdate="20150327T090239Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce atLeastOnce()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount exactly(int $count)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090249Z" creationid="Wynn" creationdate="20150327T090249Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount exactly(int $count)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount never()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090231Z" creationid="Wynn" creationdate="20150327T090231Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount never()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount once()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090242Z" creationid="Wynn" creationdate="20150327T090242Z">
        <seg>PHPUnit_Framework_MockObject_Matcher_InvokedCount once()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073813Z" creationid="Wynn" creationdate="20150319T073813Z">
        <seg>PHPUnit_Framework_Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042627Z" creationid="Wynn" creationdate="20150319T042627Z">
        <seg>PHPUnit_Framework_TestCase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Framework_TestListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T074955Z" creationid="Wynn" creationdate="20150310T074955Z">
        <seg>PHPUnit_Framework_TestListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Runner_TestSuiteLoader</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100048Z" creationid="Wynn" creationdate="20150327T100048Z">
        <seg>PHPUnit_Runner_TestSuiteLoader</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Selenium</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100739Z" creationid="Wynn" creationdate="20150319T100739Z">
        <seg>PHPUnit_Selenium</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHPUnit_Util_Printer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100335Z" creationid="Wynn" creationdate="20150327T100335Z">
        <seg>PHPUnit_Util_Printer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PHP_Invoker</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092640Z" creationid="Wynn" creationdate="20150309T092640Z">
        <seg>PHP_Invoker</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Panel with information on covering tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032504Z" creationid="Wynn" creationdate="20150330T032504Z">
        <seg>带有覆盖本行代码的测试的信息的面板</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parameters for mock objects do not get cloned anymore</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042221Z" creationid="Wynn" creationdate="20150330T042221Z">
        <seg>不再克隆(clone)仿件对象(mock object)的参数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Path Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T063136Z" creationid="Wynn" creationdate="20150309T063136Z">
        <seg>路径覆盖率(Path Coverage)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that &lt;l0&gt;final&lt;/l0&gt;, &lt;l1&gt;private&lt;/l1&gt; and &lt;l2&gt;static&lt;/l2&gt; methods cannot be stubbed or mocked. They are ignored by PHPUnit's test double functionality and retain their original behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074533Z" creationid="Wynn" creationdate="20150327T074533Z">
        <seg>请注意，&lt;l0&gt;final&lt;/l0&gt;、&lt;l1&gt;private&lt;/l1&gt; 和 &lt;l2&gt;static&lt;/l2&gt; 方法无法对其进行上桩(stub)或模仿(mock)。PHPUnit 的测试替身功能将会忽略它们，并维持它们的原始行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that as of 4.8, options can be put after the argument(s).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085928Z" creationid="Wynn" creationdate="20150817T085928Z">
        <seg>请注意，从 4.8 开始，选项不能放在参数之后。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that options must not be put after the argument(s).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100859Z" creationid="Wynn" creationdate="20150327T100859Z">
        <seg>请注意，选项不能放在参数之后。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that setting the &lt;l0&gt;$backupGlobalsBlacklist&lt;/l0&gt; attribute inside the &lt;l1&gt;setUp()&lt;/l1&gt; method, for instance, has no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040523Z" creationid="Wynn" creationdate="20150330T040523Z">
        <seg>请注意，在方法内（例如在 &lt;l1&gt;setUp()&lt;/l1&gt; 内）对&lt;l0&gt;$backupGlobalsBlacklist&lt;/l0&gt; 属性进行设置是无效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that setting the &lt;l0&gt;$backupStaticAttributesBlacklist&lt;/l0&gt; attribute inside the &lt;l1&gt;setUp()&lt;/l1&gt; method, for instance, has no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040655Z" creationid="Wynn" creationdate="20150330T040655Z">
        <seg>在方法（例如  &lt;l1&gt;setUp()&lt;/l1&gt; ）内对 &lt;l0&gt;$backupStaticAttributesBlacklist&lt;/l0&gt; 属性进行设置是无效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that starting with PHPUnit 4.0.0 the PEAR package of PHPUnit is merely a distribution mechanism for the PHP Archive (PHAR) and that many of PHPUnit's dependencies will no longer be released individually via PEAR. We will eventually stop making releases of PHPUnit available via PEAR altogether.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101329Z" creationid="Wynn" creationdate="20150327T101329Z">
        <seg>请注意，从 PHPUnit 4.0.0 开始，PHPUnit 的 PEAR 包只作为分发 PHP 档案包(PHAR)的一种机制，PHPUnit 的许多依赖项不再单独通过 PEAR 发布。最终，我们将完全停止在 PEAR 发布 PHPUnit。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that the loading of sourcecode files that is performed when &lt;l0&gt;processUncoveredFilesFromWhitelist="true"&lt;/l0&gt; is set can cause problems when a sourcecode file contains code outside the scope of a class or function, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070425Z" creationid="Wynn" creationdate="20150309T070425Z">
        <seg>请注意，当设置了 &lt;l0&gt;processUncoveredFilesFromWhitelist="true"&lt;/l0&gt; 时将对源代码文件进行载入，这在某些情况下可能导致问题，比如，源代码文件包含有处于类或者函数作用域之外的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that this functionality is only available when the tokenizer and Xdebug extensions are installed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093216Z" creationid="Wynn" creationdate="20150327T093216Z">
        <seg>请注意，此功能仅当安装了 tokenizer 和 Xdebug 这两个 PHP 扩展后才可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that using the PEAR installer to update from PHPUnit 3.7 to PHPUnit 4.0 will leave stale source files from previous versions of PHPUnit's dependencies (PHP_CodeCoverage, PHPUnit_MockObject, ...) behind in your PHP environment's PEAR directory. It is advised to uninstall the respective PEAR packages.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101343Z" creationid="Wynn" creationdate="20150327T101343Z">
        <seg>请注意，如果用 PEAR 安装器来从 PHPUnit 3.7 升级到 PHPUnit 4.0，将导致在 PHP 环境变量所指定的 PEAR 目录中遗留一些 PHPUnit 依赖项（PHP_CodeCoverage、 PHPUnit_MockObject、……）老版本的陈旧源文件。建议卸载对应的 PEAR 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please pay attention to the fact that the parameters managing has been changed. The previous implementation clones all object parameters. It did not allow to check whether the same object was passed to method or not. &lt;x0/&gt; shows where the new implementation could be useful. &lt;x1/&gt; shows how to switch back to previous behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074653Z" creationid="Wynn" creationdate="20150327T074558Z">
        <seg>请关注一下这个事实：参数管理方式已经修改过了。在之前的实现中，将会克隆对象的所有参数。这样就无法检查传递给方法的是否是同一个对象。&lt;x0/&gt; 展示了新的实现方式在什么情况下会非常有用。&lt;x1/&gt;展示了如何切换回之前的行为方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please read "&lt;u0&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/u0&gt;" to understand why &lt;l1&gt;$delta&lt;/l1&gt; is neccessary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085857Z" creationid="Wynn" creationdate="20150303T085844Z">
        <seg>关于为什么 &lt;l1&gt;$delta&lt;/l1&gt; 参数是必须的，请阅读《&lt;u0&gt;关于浮点运算，每一位计算机科学从业人员都应该知道的事实&lt;/u0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please read &lt;x0/&gt; in case you are upgrading from a previous version of PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061523Z" creationid="Wynn" creationdate="20150330T061523Z">
        <seg>如果从旧版本 PHPUnit 升级，请阅读&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to &lt;x0/&gt; for a list of commandline switches that control code coverage functionality as well as &lt;x1/&gt; for the relevant configuration settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061148Z" creationid="Wynn" creationdate="20150309T061148Z">
        <seg>&lt;x0/&gt;中列出了各种控制代码覆盖率功能的命令行参数供参考，同时&lt;x1/&gt;中可以找到其他相关的配置信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to the &lt;u0&gt;documentation of Selenium commands&lt;/u0&gt; for a reference of the commands available and how they are used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073619Z" creationid="Wynn" creationdate="20150327T073619Z">
        <seg>请查看 &lt;u0&gt;Selenium 命令文档&lt;/u0&gt;来获得所有可用的命令的参考以及它们的使用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to the &lt;u0&gt;documentation&lt;/u0&gt; for Prophecy for further details on how to create, configure, and use stubs, spies, and mocks using this alternative test double framework.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091015Z" creationid="Wynn" creationdate="20150327T091015Z">
        <seg>更多关于如何用这个测试替身框架来创建、配置及使用桩件、谍件、仿件的细节，请参考 Prophecy 的 &lt;u0&gt;文档&lt;/u0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible @requires usages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092425Z" creationid="Wynn" creationdate="20150319T092425Z">
        <seg>可能的 @requires 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible Values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092437Z" creationid="Wynn" creationdate="20150319T092437Z">
        <seg>可能的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prentice Hall</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>Prentice Hall</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prepend PHP's &lt;l0&gt;include_path&lt;/l0&gt; with given path(s).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100651Z" creationid="Wynn" creationdate="20150327T100651Z">
        <seg>向 PHP 的 &lt;l0&gt;include_path&lt;/l0&gt; 开头添加指定路径（可以多个）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Previously all object parameters where cloned when mocking. This lead to issues when testing trying to check whether the same object was passed to method or not and other problem with uncloneable objects. As a long standing feature request by many this behavior was changed. &lt;x0/&gt; shows where the new implementation could be useful. &lt;x1/&gt; shows how to switch back to previous behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042250Z" creationid="Wynn" creationdate="20150330T042250Z">
        <seg> 之前，在模仿(mock)一个对象时会克隆(clone)起所有参数。这导致在测试中尝试判定传递给方法的是否是同一个参数是碰到问题，另外在碰到不可克隆的对象时还会有其他问题。作为一直以来都被许多人所要求的特性，这个行为已经改变了。&lt;x0/&gt;展示了新实现方式的有益之处。&lt;x1/&gt;展示了如何切换回之前的行为方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when an assertion fails while running the test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092749Z" creationid="Wynn" creationdate="20150327T092749Z">
        <seg>当测试方法运行过程中一个断言失败时输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when an error occurs while running the test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092753Z" creationid="Wynn" creationdate="20150327T092753Z">
        <seg>当测试方法运行过程中产生一个错误时输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when the test has been marked as risky (see &lt;x0/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092807Z" creationid="Wynn" creationdate="20150327T092807Z">
        <seg>当测试被标记为有风险时输出（参见&lt;x0/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when the test has been skipped (see &lt;x0/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092821Z" creationid="Wynn" creationdate="20150327T092821Z">
        <seg>当测试被跳过时输出（参见&lt;x0/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when the test is marked as being incomplete or not yet implemented (see &lt;x0/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092832Z" creationid="Wynn" creationdate="20150327T092832Z">
        <seg>当测试被标记为不完整或未实现时输出（参见&lt;x0/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Printed when the test succeeds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092737Z" creationid="Wynn" creationdate="20150327T092737Z">
        <seg>当测试成功时输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Probably the easiest way to compose a test suite is to keep all test case source files in a test directory. PHPUnit can automatically discover and run the tests by recursively traversing the test directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035701Z" creationid="Wynn" creationdate="20150320T035701Z">
        <seg>编排测试套件的各种方式中，最简单的大概就是把所有测试用例源文件放在一个测试目录中。通过对测试目录进行递归遍历，PHPUnit 能自动发现并运行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Process Isolation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095700Z" creationid="Wynn" creationdate="20150327T095700Z">
        <seg>Process Isolation （进程隔离）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prophecy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090836Z" creationid="Wynn" creationdate="20150327T090836Z">
        <seg>Prophecy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Query (SQL) DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074715Z" creationid="Wynn" creationdate="20150317T074715Z">
        <seg>Query (SQL) DataSet （查询(SQL)数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Query-Based DataSet and DataTable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070731Z" creationid="Wynn" creationdate="20150317T070731Z">
        <seg>基于查询的 DataSet 和 DataTable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quick to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041053Z" creationid="Wynn" creationdate="20150330T041053Z">
        <seg>执行快速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>R</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092754Z" creationid="Wynn" creationdate="20150327T092754Z">
        <seg>R</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read configuration from XML file. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100556Z" creationid="Wynn" creationdate="20150327T100556Z">
        <seg>从 XML 文件中读取配置信息。更多细节请参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Refactoring</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092432Z" creationid="Wynn" creationdate="20150327T092432Z">
        <seg>Refactoring （重构）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removed deprecated OutputTestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042109Z" creationid="Wynn" creationdate="20150330T042109Z">
        <seg>已移除废弃的 OutputTestCase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repeatedly runs the test(s) the specified number of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100135Z" creationid="Wynn" creationdate="20150327T100135Z">
        <seg>将测试重复运行指定次数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replacement DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075047Z" creationid="Wynn" creationdate="20150317T075047Z">
        <seg>Replacement DataSet （替换数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093246Z" creationid="Wynn" creationdate="20150327T093246Z">
        <seg>Report （报告）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$actual&lt;/l1&gt; is not an instance of &lt;l2&gt;$expected&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031353Z" creationid="Wynn" creationdate="20150305T031353Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 不是 &lt;l2&gt;$expected&lt;/l2&gt; 的实例时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$actual&lt;/l1&gt; is not empty.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084715Z" creationid="Wynn" creationdate="20150303T084715Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 非空时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$actual&lt;/l1&gt; is not matched by the &lt;l2&gt;$matcher&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054539Z" creationid="Wynn" creationdate="20150330T054539Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 与 &lt;l2&gt;$matcher&lt;/l2&gt; 所指定的信息不匹配时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$actual&lt;/l1&gt; is not of the &lt;l2&gt;$expected&lt;/l2&gt; type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T061640Z" creationid="Wynn" creationdate="20150305T061640Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 不是 &lt;l2&gt;$expected&lt;/l2&gt; 所指明的类型时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$array&lt;/l1&gt; does not contains the &lt;l2&gt;$subset&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T073200Z" creationid="Wynn" creationdate="20150706T073200Z">
        <seg>当 &lt;l1&gt;$array&lt;/l1&gt; 不包含 &lt;l2&gt;$subset&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$array&lt;/l1&gt; does not have the &lt;l2&gt;$key&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063458Z" creationid="Wynn" creationdate="20150303T061348Z">
        <seg>当 &lt;l1&gt;$array&lt;/l1&gt; 不包含 &lt;l2&gt;$key&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$className::attributeName&lt;/l1&gt; does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063451Z" creationid="Wynn" creationdate="20150303T063451Z">
        <seg>当 &lt;l1&gt;$className::attributeName&lt;/l1&gt; 不存在时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$condition&lt;/l1&gt; is &lt;l2&gt;FALSE&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034144Z" creationid="Wynn" creationdate="20150309T034144Z">
        <seg>当 &lt;l1&gt;$condition&lt;/l1&gt; 为 &lt;l2&gt;FALSE&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$condition&lt;/l1&gt; is &lt;l2&gt;TRUE&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030610Z" creationid="Wynn" creationdate="20150305T030610Z">
        <seg>当 &lt;l1&gt;$condition&lt;/l1&gt; 为 &lt;l2&gt;TRUE&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$haystack&lt;/l1&gt; does not contain only instances of class &lt;l2&gt;$classname&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T083055Z" creationid="Wynn" creationdate="20150303T083055Z">
        <seg>当 &lt;l1&gt;$haystack&lt;/l1&gt; 并非仅包含类 &lt;l2&gt;$classname&lt;/l2&gt; 的实例时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$haystack&lt;/l1&gt; does not contain only variables of type &lt;l2&gt;$type&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T071826Z" creationid="Wynn" creationdate="20150303T071826Z">
        <seg>当 &lt;l1&gt;$haystack&lt;/l1&gt; 并非仅包含类型为 &lt;l2&gt;$type&lt;/l2&gt; 的变量时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$needle&lt;/l1&gt; is not a substring of &lt;l2&gt;$haystack&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T064114Z" creationid="Wynn" creationdate="20150303T064114Z">
        <seg>当 &lt;l1&gt;$needle&lt;/l1&gt; 不是 &lt;l2&gt;$haystack&lt;/l2&gt; 的子字符串时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$needle&lt;/l1&gt; is not an element of &lt;l2&gt;$haystack&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063824Z" creationid="Wynn" creationdate="20150303T063824Z">
        <seg>当 &lt;l1&gt;$needle&lt;/l1&gt; 不是 &lt;l2&gt;$haystack&lt;/l2&gt;的元素时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$object-&gt;attributeName&lt;/l1&gt; does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065703Z" creationid="Wynn" creationdate="20150305T065703Z">
        <seg>当 &lt;l1&gt;$object-&gt;attributeName&lt;/l1&gt; 不存在时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$string&lt;/l1&gt; does not match the regular expression &lt;l2&gt;$pattern&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081323Z" creationid="Wynn" creationdate="20150306T081323Z">
        <seg>当 &lt;l1&gt;$string&lt;/l1&gt; 不匹配于正则表达式 &lt;l2&gt;$pattern&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$variable&lt;/l1&gt; is not &lt;l2&gt;INF&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075822Z" creationid="Wynn" creationdate="20150706T075822Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 不是  &lt;l2&gt;INF&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$variable&lt;/l1&gt; is not &lt;l2&gt;NAN&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080037Z" creationid="Wynn" creationdate="20150706T080037Z">
        <seg>当 &lt;l1&gt;$variable&lt;/l1&gt; 不是  &lt;l2&gt;NAN&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if &lt;l1&gt;$variable&lt;/l1&gt; is not &lt;l2&gt;NULL&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065603Z" creationid="Wynn" creationdate="20150305T065603Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 不是  &lt;l2&gt;NULL&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the &lt;l1&gt;$string&lt;/l1&gt; does not end with &lt;l2&gt;$suffix&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082436Z" creationid="Wynn" creationdate="20150306T082436Z">
        <seg>当 &lt;l1&gt;$string&lt;/l1&gt; 不以 &lt;l2&gt;$suffix&lt;/l2&gt; 结尾时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the &lt;l1&gt;$string&lt;/l1&gt; does not match the &lt;l2&gt;$format&lt;/l2&gt; string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081533Z" creationid="Wynn" creationdate="20150306T081533Z">
        <seg>当 &lt;l1&gt;$string&lt;/l1&gt; 不匹配于 &lt;l2&gt;$format&lt;/l2&gt; 定义的格式时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the &lt;l1&gt;$string&lt;/l1&gt; does not match the contents of the &lt;l2&gt;$formatFile&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082106Z" creationid="Wynn" creationdate="20150306T082106Z">
        <seg>当 &lt;l1&gt;$string&lt;/l1&gt; 不匹配于 &lt;l2&gt;$formatFile&lt;/l2&gt; 的内容所定义的格式时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the &lt;l1&gt;$string&lt;/l1&gt; does not start with &lt;l2&gt;$prefix&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082649Z" creationid="Wynn" creationdate="20150306T082649Z">
        <seg>当 &lt;l1&gt;$string&lt;/l1&gt; 不以 &lt;l2&gt;$prefix&lt;/l2&gt; 开头时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the &lt;l1&gt;$value&lt;/l1&gt; does not match the &lt;l2&gt;$constraint&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082954Z" creationid="Wynn" creationdate="20150306T082954Z">
        <seg>当 &lt;l1&gt;$value&lt;/l1&gt; 不符合约束条件 &lt;l2&gt;$constraint&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the CSS selector &lt;l1&gt;$selector&lt;/l1&gt; does not match &lt;l2&gt;$count&lt;/l2&gt; elements in the DOMNode &lt;l3&gt;$actual&lt;/l3&gt; with a value that matches &lt;l4&gt;$pattern&lt;/l4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054232Z" creationid="Wynn" creationdate="20150330T054232Z">
        <seg>将 CSS 选择器 &lt;l1&gt;$selector&lt;/l1&gt; 应用于 DOMNode &lt;l3&gt;$actual&lt;/l3&gt;，当匹配的元素中内容与正则表达式 &lt;l4&gt;$pattern&lt;/l4&gt; 匹配的元素的数量与 &lt;l2&gt;$count&lt;/l2&gt; 不符时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the CSS selector &lt;l1&gt;$selector&lt;/l1&gt; does not match &lt;l2&gt;$count&lt;/l2&gt; elements in the DOMNode &lt;l3&gt;$actual&lt;/l3&gt; with the value &lt;l4&gt;$content&lt;/l4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054127Z" creationid="Wynn" creationdate="20150330T054127Z">
        <seg>将 CSS 选择器 &lt;l1&gt;$selector&lt;/l1&gt; 应用于 DOMNode &lt;l3&gt;$actual&lt;/l3&gt;，当匹配的元素中内容为 &lt;l4&gt;$content&lt;/l4&gt; 的元素的数量与 &lt;l2&gt;$count&lt;/l2&gt; 不符时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the CSS selector &lt;l1&gt;$selector&lt;/l1&gt; does not match &lt;l2&gt;$count&lt;/l2&gt; elements in the DOMNode &lt;l3&gt;$actual&lt;/l3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053753Z" creationid="Wynn" creationdate="20150330T053753Z">
        <seg>将 CSS 选择器 &lt;l1&gt;$selector&lt;/l1&gt; 应用于 DOMNode &lt;l3&gt;$actual&lt;/l3&gt;，当匹配元素的数量与 &lt;l2&gt;$count&lt;/l2&gt; 不符时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the XML Structure of the DOMElement in &lt;l1&gt;$actualElement&lt;/l1&gt; is not equal to the XML structure of the DOMElement in &lt;l2&gt;$expectedElement&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085119Z" creationid="Wynn" creationdate="20150303T085119Z">
        <seg>当 &lt;l1&gt;$actualElement&lt;/l1&gt; 中 DOMElement 的 XML 结构与 &lt;l2&gt;$expectedElement&lt;/l2&gt; 中 DOMElement的 XML 结构不相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the XML document in &lt;l1&gt;$actualFile&lt;/l1&gt; is not equal to the XML document in &lt;l2&gt;$expectedFile&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035537Z" creationid="Wynn" creationdate="20150309T035239Z">
        <seg>当 &lt;l1&gt;$actualFile&lt;/l1&gt; 对应的 XML 文档与 &lt;l2&gt;$expectedFile&lt;/l2&gt; 对应的 XML 文档不相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the XML document in &lt;l1&gt;$actualXml&lt;/l1&gt; is not equal to the XML document in &lt;l2&gt;$expectedFile&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035602Z" creationid="Wynn" creationdate="20150309T035359Z">
        <seg>当 &lt;l1&gt;$actualXml&lt;/l1&gt; 对应的 XML 文档与 &lt;l2&gt;$expectedFile&lt;/l2&gt; 对应的 XML 文档不相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the XML document in &lt;l1&gt;$actualXml&lt;/l1&gt; is not equal to the XML document in &lt;l2&gt;$expectedXml&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035615Z" creationid="Wynn" creationdate="20150309T035514Z">
        <seg>当 &lt;l1&gt;$actualXml&lt;/l1&gt; 对应的 XML 文档与 &lt;l2&gt;$expectedXml&lt;/l2&gt; 对应的 XML 文档不相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the file specified by &lt;l1&gt;$expected&lt;/l1&gt; does not have the same contents as the file specified by &lt;l2&gt;$actual&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030825Z" creationid="Wynn" creationdate="20150305T030825Z">
        <seg>当 &lt;l1&gt;$expected&lt;/l1&gt; 所指定的文件与 &lt;l2&gt;$actual&lt;/l2&gt; 所指定的文件内容不同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the file specified by &lt;l1&gt;$expectedFile&lt;/l1&gt; does not have &lt;l2&gt;$actualString&lt;/l2&gt; as its contents.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082545Z" creationid="Wynn" creationdate="20150306T082545Z">
        <seg>当 &lt;l1&gt;$expectedFile&lt;/l1&gt; 所指定的文件其内容不是 &lt;l2&gt;$actualString&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the file specified by &lt;l1&gt;$filename&lt;/l1&gt; does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030933Z" creationid="Wynn" creationdate="20150305T030933Z">
        <seg>当 &lt;l1&gt;$filename&lt;/l1&gt; 所指定的文件不存在时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the number of elements in &lt;l1&gt;$haystack&lt;/l1&gt; is not &lt;l2&gt;$expectedCount&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084045Z" creationid="Wynn" creationdate="20150303T084045Z">
        <seg>当 &lt;l1&gt;$haystack&lt;/l1&gt; 中的元素数量不是 &lt;l2&gt;$expectedCount&lt;/l2&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two arrays &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; are not equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030449Z" creationid="Wynn" creationdate="20150305T030449Z">
        <seg>当 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 这两个数组不相等时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two floats &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; are not within &lt;l3&gt;$delta&lt;/l3&gt; of each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085749Z" creationid="Wynn" creationdate="20150303T085749Z">
        <seg>当两个浮点数 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt;  之间的差值（的绝对值）大于 &lt;l3&gt;$delta&lt;/l3&gt; 时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two objects &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; do not have equal attribute values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T090157Z" creationid="Wynn" creationdate="20150303T090157Z">
        <seg>当 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 这两个对象的属性值不相等时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two variables &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; are not equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085227Z" creationid="Wynn" creationdate="20150303T085227Z">
        <seg>当两个变量 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 不相等时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two variables &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; do not have the same type and value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082206Z" creationid="Wynn" creationdate="20150306T082206Z">
        <seg>当两个变量 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 的值与类型不完全相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the two variables &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; do not reference the same object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082326Z" creationid="Wynn" creationdate="20150306T082326Z">
        <seg>当两个变量 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 不是指向同一个对象的引用时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the uncommented canonical form of the XML documents represented by the two DOMDocument objects &lt;l1&gt;$expected&lt;/l1&gt; and &lt;l2&gt;$actual&lt;/l2&gt; are not equal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T090049Z" creationid="Wynn" creationdate="20150303T090049Z">
        <seg>当 &lt;l1&gt;$expected&lt;/l1&gt; 和 &lt;l2&gt;$actual&lt;/l2&gt; 这两个 DOMDocument 对象所表示的 XML 文档对应的无注释规范形式不相同时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actual&lt;/l1&gt; is not greater than or equal to the value of &lt;l2&gt;$expected&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031251Z" creationid="Wynn" creationdate="20150305T031251Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 的值不大于且不等于 &lt;l2&gt;$expected&lt;/l2&gt; 的值时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actual&lt;/l1&gt; is not greater than the value of &lt;l2&gt;$expected&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031055Z" creationid="Wynn" creationdate="20150305T031055Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 的值不大于 &lt;l2&gt;$expected&lt;/l2&gt; 的值时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actual&lt;/l1&gt; is not less than or equal to the value of &lt;l2&gt;$expected&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065512Z" creationid="Wynn" creationdate="20150305T065512Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 的值不小于且不等于 &lt;l2&gt;$expected&lt;/l2&gt; 的值时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actual&lt;/l1&gt; is not less than the value of &lt;l2&gt;$expected&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065420Z" creationid="Wynn" creationdate="20150305T065420Z">
        <seg>当 &lt;l1&gt;$actual&lt;/l1&gt; 的值不小于 &lt;l2&gt;$expected&lt;/l2&gt; 的值时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actualFile&lt;/l1&gt; does not match the value of &lt;l2&gt;$expectedFile&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065232Z" creationid="Wynn" creationdate="20150305T065103Z">
        <seg>当 &lt;l1&gt;$actualFile&lt;/l1&gt; 对应的值与 &lt;l2&gt;$expectedFile&lt;/l2&gt; 对应的值不匹配时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actualJson&lt;/l1&gt; does not match the value of &lt;l2&gt;$expectedFile&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065225Z" creationid="Wynn" creationdate="20150305T065225Z">
        <seg>当 &lt;l1&gt;$actualJson&lt;/l1&gt; 对应的值与 &lt;l2&gt;$expectedFile&lt;/l2&gt; 对应的值不匹配时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error identified by &lt;l0&gt;$message&lt;/l0&gt; if the value of &lt;l1&gt;$actualJson&lt;/l1&gt; does not match the value of &lt;l2&gt;$expectedJson&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065346Z" creationid="Wynn" creationdate="20150305T065346Z">
        <seg>当 &lt;l1&gt;$actualJson&lt;/l1&gt; 对应的值与 &lt;l2&gt;$expectedJson&lt;/l2&gt; 对应的值不匹配时报告错误，错误讯息由 &lt;l0&gt;$message&lt;/l0&gt; 指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the element identified by &lt;l0&gt;$locator&lt;/l0&gt; contains the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070017Z" creationid="Wynn" creationdate="20150327T070017Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素包含给定的 &lt;l1&gt;$text&lt;/l1&gt;时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the element identified by &lt;l0&gt;$locator&lt;/l0&gt; does not contain the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070008Z" creationid="Wynn" creationdate="20150327T070008Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素不包含给定的 &lt;l1&gt;$text&lt;/l1&gt;时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given label is not selected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070813Z" creationid="Wynn" creationdate="20150327T070746Z">
        <seg>当给定的标签未被选定时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given label is selected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070821Z" creationid="Wynn" creationdate="20150327T070805Z">
        <seg>当给定的标签被选定时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given option is available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070739Z" creationid="Wynn" creationdate="20150327T070739Z">
        <seg>当给定的选项可用时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given option is not available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070028Z" creationid="Wynn" creationdate="20150327T070028Z">
        <seg>当给定的选项不可用时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given value is not selected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070830Z" creationid="Wynn" creationdate="20150327T070830Z">
        <seg>当给定的值未被选定时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the given value is selected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070839Z" creationid="Wynn" creationdate="20150327T070839Z">
        <seg>当给定的值被选定时报告一个错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the value of the element identified by &lt;l0&gt;$locator&lt;/l0&gt; contains the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065926Z" creationid="Wynn" creationdate="20150327T065926Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素的值包含给定的 &lt;l1&gt;$text&lt;/l1&gt;时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the value of the element identified by &lt;l0&gt;$locator&lt;/l0&gt; does not contain the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065914Z" creationid="Wynn" creationdate="20150327T065914Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素的值不包含给定的 &lt;l1&gt;$text&lt;/l1&gt;时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the value of the element identified by &lt;l0&gt;$locator&lt;/l0&gt; is equal to the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065846Z" creationid="Wynn" creationdate="20150327T065846Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素的值与给定的 &lt;l1&gt;$text&lt;/l1&gt;相等时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports an error if the value of the element identified by &lt;l0&gt;$locator&lt;/l0&gt; is not equal to the given &lt;l1&gt;$text&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065342Z" creationid="Wynn" creationdate="20150327T065342Z">
        <seg>当由 &lt;l0&gt;$locator&lt;/l0&gt; 所标识的元素的值与给定的 &lt;l1&gt;$text&lt;/l1&gt;不等时报告错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports the test progress as agile documentation. See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100332Z" creationid="Wynn" creationdate="20150327T100332Z">
        <seg>将测试进度以敏捷文档方式报告。更多细节请参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reports the test progress using the &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt;. See &lt;x1/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100249Z" creationid="Wynn" creationdate="20150327T100249Z">
        <seg>使用 &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt; 报告测试进度。更多细节请参见 &lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Requirements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093508Z" creationid="Wynn" creationdate="20150319T093508Z">
        <seg>需求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Return the name of the expected exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103223Z" creationid="Wynn" creationdate="20150327T103223Z">
        <seg>返回预期异常的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is executed at least once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090241Z" creationid="Wynn" creationdate="20150327T090241Z">
        <seg>返回一个匹配器，当被评定的方法执行至少一次时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is executed exactly &lt;l0&gt;$count&lt;/l0&gt; times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090318Z" creationid="Wynn" creationdate="20150327T090318Z">
        <seg>返回一个匹配器，当被评定的方法执行恰好 &lt;l0&gt;$count&lt;/l0&gt; 次时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is executed exactly once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090247Z" creationid="Wynn" creationdate="20150327T090247Z">
        <seg>返回一个匹配器，当被评定的方法执行恰好一次时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is executed zero or more times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090229Z" creationid="Wynn" creationdate="20150327T090229Z">
        <seg>返回一个匹配器，当被评定的方法执行0次或更多次（即任意次数）时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is invoked at the given &lt;l0&gt;$index&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090349Z" creationid="Wynn" creationdate="20150327T090329Z">
        <seg>返回一个匹配器，当被评定的方法是第 &lt;l0&gt;$index&lt;/l0&gt; 个执行的方法时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a matcher that matches when the method it is evaluated for is never executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090238Z" creationid="Wynn" creationdate="20150327T090238Z">
        <seg>返回一个匹配器，当被评定的方法从未执行时匹配成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Risky Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031003Z" creationid="Wynn" creationdate="20150327T031003Z">
        <seg>有风险的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run each test in a separate PHP process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095708Z" creationid="Wynn" creationdate="20150327T095708Z">
        <seg>每个测试都在独立的PHP进程中运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run tests in strict mode (same as using &lt;l0&gt;--report-useless-tests&lt;/l0&gt;, &lt;l1&gt;--strict-coverage&lt;/l1&gt;, &lt;l2&gt;--disallow-test-output&lt;/l2&gt;, and &lt;l3&gt;--enforce-time-limit&lt;/l3&gt;). See &lt;x4/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095656Z" creationid="Wynn" creationdate="20150327T095656Z">
        <seg>以严格模式运行测试（效果的功能等同于同时使用 &lt;l0&gt;--report-useless-tests&lt;/l0&gt;、&lt;l1&gt;--strict-coverage&lt;/l1&gt;、&lt;l2&gt;--disallow-test-output&lt;/l2&gt; 和 &lt;l3&gt;--enforce-time-limit&lt;/l3&gt;）。详情参见&lt;x4/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run tests in strict mode. When strict mode is enabled:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050644Z" creationid="Wynn" creationdate="20150330T050644Z">
        <seg>以严格模式运行测试。当启用严格模式时：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs the tests that are provided by the class &lt;l0&gt;UnitTest&lt;/l0&gt;. This class is expected to be declared in the &lt;f1&gt;UnitTest.php&lt;/f1&gt; sourcefile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093053Z" creationid="Wynn" creationdate="20150327T093053Z">
        <seg>运行由 &lt;l0&gt;UnitTest&lt;/l0&gt; 类提供的测试。这个类应当在 &lt;f1&gt;UnitTest.php&lt;/f1&gt; 源文件中声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs the tests that are provided by the class &lt;l0&gt;UnitTest&lt;/l0&gt;. This class is expected to be declared in the specified sourcefile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093143Z" creationid="Wynn" creationdate="20150327T093143Z">
        <seg>运行由 &lt;l0&gt;UnitTest&lt;/l0&gt; 类提供的测试。这个类应当在指定的源文件中声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>S</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092807Z" creationid="Wynn" creationdate="20150327T092807Z">
        <seg>S</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sebastian</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093344Z" creationid="Wynn" creationdate="20150309T093344Z">
        <seg>Sebastian</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sebastian Bergmann</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093348Z" creationid="Wynn" creationdate="20150309T093348Z">
        <seg>Sebastian Bergmann</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;x0/&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T061157Z" creationid="Wynn" creationdate="20150228T061157Z">
        <seg>详细信息参见 &lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;x0/&gt; for examples of valid filter patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093710Z" creationid="Wynn" creationdate="20150327T093710Z">
        <seg>有效的过滤器模式例子参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;x0/&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T092054Z" creationid="Wynn" creationdate="20150228T092054Z">
        <seg> 更多细节参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;x0/&gt; for some additional shortcuts that are available for matching data providers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093734Z" creationid="Wynn" creationdate="20150327T093734Z">
        <seg>在匹配数据供给器时有一些额外的快捷方式，参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selenium RC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075800Z" creationid="Wynn" creationdate="20150310T075800Z">
        <seg>Selenium RC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selenium RC integration for PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100748Z" creationid="Wynn" creationdate="20150319T100748Z">
        <seg>将 Selenium RC 集成于 PHPUnit。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selenium Server</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032044Z" creationid="Wynn" creationdate="20150327T032044Z">
        <seg>Selenium Server</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selenium Server API: Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063609Z" creationid="Wynn" creationdate="20150327T063542Z">
        <seg>Selenium Server API: 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set &lt;l0&gt;convertErrorsToExceptions&lt;/l0&gt; to &lt;l1&gt;false&lt;/l1&gt; to disable this feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T081708Z" creationid="Wynn" creationdate="20150309T081708Z">
        <seg>将 &lt;l0&gt;convertErrorsToExceptions&lt;/l0&gt; 设为 &lt;l1&gt;false&lt;/l1&gt; 可以禁用此功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the base URL for the tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063600Z" creationid="Wynn" creationdate="20150327T063600Z">
        <seg>设置测试的基准 URL (base URL)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the browser to be used by the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063553Z" creationid="Wynn" creationdate="20150327T063553Z">
        <seg>设置用于 Selenium Server 服务器的浏览器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the expected &lt;l0&gt;$exceptionName&lt;/l0&gt;, &lt;l1&gt;$exceptionMessage&lt;/l1&gt;, and &lt;l2&gt;$exceptionCode&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103235Z" creationid="Wynn" creationdate="20150327T103235Z">
        <seg>设定预期的 &lt;l0&gt;$exceptionName&lt;/l0&gt;、&lt;l1&gt;$exceptionMessage&lt;/l1&gt; 和 &lt;l2&gt;$exceptionCode&lt;/l2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the expected &lt;l0&gt;$exceptionName&lt;/l0&gt;, &lt;l1&gt;$exceptionMessageRegExp&lt;/l1&gt;, and &lt;l2&gt;$exceptionCode&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103257Z" creationid="Wynn" creationdate="20150327T103257Z">
        <seg>设定预期的 &lt;l0&gt;$exceptionName&lt;/l0&gt;、&lt;l1&gt;$exceptionMessageRegExp&lt;/l1&gt; 和 &lt;l2&gt;$exceptionCode&lt;/l2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the hostname for the connection to the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063634Z" creationid="Wynn" creationdate="20150327T063634Z">
        <seg>设定 Selenium Server 服务器连接的主机名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the number of seconds the Selenium Server client should sleep between sending action commands to the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063659Z" creationid="Wynn" creationdate="20150327T063659Z">
        <seg>设定 Selenium Server 客户端向 Selenium Server 服务器端发送动作多个命令之间需要休眠的秒数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the port for the connection to the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063642Z" creationid="Wynn" creationdate="20150327T063642Z">
        <seg>设定 Selenium Server 服务器连接的端口号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the timeout for the connection to the Selenium Server server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063646Z" creationid="Wynn" creationdate="20150327T063646Z">
        <seg>设定 Selenium Server 服务器连接的超时时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set up fixture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065534Z" creationid="Wynn" creationdate="20150313T065534Z">
        <seg>建立基境(fixture)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set up the expectation that the output is equal to an &lt;l0&gt;$expectedString&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024826Z" creationid="Wynn" creationdate="20150330T024826Z">
        <seg>设置输出预期为输出应当与 &lt;l0&gt;$expectedString&lt;/l0&gt; 字符串相等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set up the expectation that the output matches a &lt;l0&gt;$regularExpression&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024811Z" creationid="Wynn" creationdate="20150330T024811Z">
        <seg>设置输出预期为输出应当匹配正则表达式 &lt;l0&gt;$regularExpression&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets the value of the given PHP configuration option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100702Z" creationid="Wynn" creationdate="20150327T100702Z">
        <seg>设置指定的 PHP 配置选项的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets up a callback that is used to, for instance, normalize the actual output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024924Z" creationid="Wynn" creationdate="20150330T024924Z">
        <seg>设置回调函数，用来做诸如将实际输出规范化之类的动作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting PHP INI settings, Constants and Global Variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075414Z" creationid="Wynn" creationdate="20150310T075414Z">
        <seg>设定 PHP INI 设置、常量、全局变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting the &lt;l0&gt;$backupGlobalsBlacklist&lt;/l0&gt; property inside e.g. the &lt;l1&gt;setUp()&lt;/l1&gt; method has no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085907Z" creationid="Wynn" creationdate="20150319T085907Z">
        <seg>在方法（例如 &lt;l1&gt;setUp()&lt;/l1&gt; 方法）内对 &lt;l0&gt;$backupGlobalsBlacklist&lt;/l0&gt; 属性进行设置是无效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting the &lt;l0&gt;$backupStaticAttributesBlacklist&lt;/l0&gt; property inside e.g. the &lt;l1&gt;setUp()&lt;/l1&gt; method has no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090639Z" creationid="Wynn" creationdate="20150319T090639Z">
        <seg>在方法（例如  &lt;l1&gt;setUp()&lt;/l1&gt; ）内对 &lt;l0&gt;$backupStaticAttributesBlacklist&lt;/l0&gt; 属性进行设置是无效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting up multiple browser configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064132Z" creationid="Wynn" creationdate="20150327T064132Z">
        <seg>设置多个浏览器配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sharing Fixture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081922Z" creationid="Wynn" creationdate="20150319T081922Z">
        <seg>基境共享</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sharing fixture between the tests of a test suite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082233Z" creationid="Wynn" creationdate="20150319T082233Z">
        <seg>在同一个测试套件内的不同测试之间共享基境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;mikey179/vfsStream&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 3.7 and vfsStream:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045647Z" creationid="Wynn" creationdate="20150330T045647Z">
        <seg>如果使用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，那么只需简单的在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中加一条对 &lt;l0&gt;mikey179/vfsStream&lt;/l0&gt; 的依赖关系即可。以下是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt;文件例子，只定义了一条对 PHPUnit 3.7 与 vfsStream 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;mikey179/vfsStream&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.6 and vfsStream:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091619Z" creationid="Wynn" creationdate="20150327T091619Z">
        <seg>如果使用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，那么只需简单的在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中加一条对 &lt;l0&gt;mikey179/vfsStream&lt;/l0&gt; 的依赖关系即可。以下是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt;文件例子，只定义了一条对 PHPUnit 4.6 与 vfsStream 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 3.7:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041749Z" creationid="Wynn" creationdate="20150330T041749Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 3.7 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.0:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061857Z" creationid="Wynn" creationdate="20150330T061857Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.0 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.1:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062820Z" creationid="Wynn" creationdate="20150330T062820Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.1 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.2:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063201Z" creationid="Wynn" creationdate="20150330T063201Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.2 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.3:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063353Z" creationid="Wynn" creationdate="20150330T063353Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.3 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.4:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063527Z" creationid="Wynn" creationdate="20150330T063527Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.4 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.5:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063659Z" creationid="Wynn" creationdate="20150330T063659Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.5 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.6:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100451Z" creationid="Wynn" creationdate="20150319T100451Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.6 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.7:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075557Z" creationid="Wynn" creationdate="20150706T075557Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.7 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 4.8:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075643Z" creationid="Wynn" creationdate="20150706T075643Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 4.8 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 5.0:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080214Z" creationid="Wynn" creationdate="20150706T080214Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 5.0 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply add a dependency on &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; to your project's &lt;l1&gt;composer.json&lt;/l1&gt; file if you use &lt;u2&gt;Composer&lt;/u2&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;l3&gt;composer.json&lt;/l3&gt; file that just defines a development-time dependency on PHPUnit 5.1:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041426Z" creationid="Wynn" creationdate="20151222T041426Z">
        <seg>如果用 &lt;u2&gt;Composer&lt;/u2&gt; 来管理项目的依赖关系，只要在项目的 &lt;l1&gt;composer.json&lt;/l1&gt; 文件中简单地加上对 &lt;l0&gt;phpunit/phpunit&lt;/l0&gt; 的依赖关系即可。下面是一个最小化的 &lt;l3&gt;composer.json&lt;/l3&gt; 文件的例子，只定义了一个对 PHPUnit 5.1 的开发时(development-time)依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since PHPUnit &lt;l0&gt;3.7.2&lt;/l0&gt; we turned off the caching of tokenized files by default. When processing code coverage reports for big projects this cache consumed a lot of memory and due to the change in whitelist behavior it was problematic for folks with code bases with more than a couple of thousand classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042442Z" creationid="Wynn" creationdate="20150330T042442Z">
        <seg>从 PHPUnit &lt;l0&gt;3.7.2&lt;/l0&gt; 开始，对已完成词法分析(tokenized)的文件的缓存默认关闭。在处理大型项目的代码覆盖率报告时，这个缓存会消耗大量内存，并且由于白名单行为的变化，对于那些代码基于成千上万个类的人来说会很成问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since each test completely cleans the database you are not even required to re-create the database for each test-run. A permanently available database works perfectly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042423Z" creationid="Wynn" creationdate="20150319T042423Z">
        <seg>由于每个测试都会彻底清空数据库，因此无须为每个测试重新创建数据库。持久可用的数据库同样能够完美工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since the filesystem operations do not operate on the real filesystem anymore, cleanup operations in a &lt;l0&gt;tearDown()&lt;/l0&gt; method are no longer required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092227Z" creationid="Wynn" creationdate="20150327T092227Z">
        <seg>由于文件系统操作不再对真实文件系统进行操作，&lt;l0&gt;tearDown()&lt;/l0&gt; 方法中的清理操作不再需要了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since there is always a first test that runs against the database you do not know exactly if there is already data in the tables. PHPUnit will execute a TRUNCATE against all the tables you specified to reset their status to empty.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T071053Z" creationid="Wynn" creationdate="20150313T071053Z">
        <seg>由于总是会有某个测试运行在并不确定表中是否有数据的数据库上，PHPUnit 在所有指定表上执行 TRUNCATE 操作来把它们清空。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skeleton Generator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043114Z" creationid="Wynn" creationdate="20150330T043114Z">
        <seg>骨架(Skeleton)生成器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092004Z" creationid="Wynn" creationdate="20150319T092004Z">
        <seg>跳过测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping Tests using @requires</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092358Z" creationid="Wynn" creationdate="20150319T092358Z">
        <seg>用 @requires 来跳过测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping a test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092146Z" creationid="Wynn" creationdate="20150319T092146Z">
        <seg>跳过某个测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping test cases using @requires</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092716Z" creationid="Wynn" creationdate="20150319T092716Z">
        <seg>用 @requires 来跳过测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So far, we only have two tests for the &lt;l0&gt;array&lt;/l0&gt; built-in and the &lt;l1&gt;count()&lt;/l1&gt; function. When we start to test the numerous &lt;l2&gt;array_*()&lt;/l2&gt; functions PHP offers, we will need to write a test for each of them. We could write the infrastructure for all these tests from scratch. However, it is much better to write a testing infrastructure once and then write only the unique parts of each test. PHPUnit is such an infrastructure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041018Z" creationid="Wynn" creationdate="20150330T040930Z">
        <seg>到目前为止，我们还只有2个测试，用于PHP内建的 &lt;l0&gt;array&lt;/l0&gt; 和 &lt;l1&gt;count()&lt;/l1&gt; 函数。当我们开始对 PHP 提供的为数众多的 &lt;l2&gt;array_*()&lt;/l2&gt; 函数进行测试时，需要为它们逐一编写测试。对于这些测试，可以每一个都从头编写相关的基础部分。但是，显然有更好的办法：一次性的编写一套通用的基础，然后每个测试都只要编写它特有的部分即可。PHPUnit 就是这样一套基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So if it's not about testing, what's it about?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030809Z" creationid="Wynn" creationdate="20150330T030809Z">
        <seg>这么说来它不是关于测试的，那么是关于什么的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Software Metrics for Code Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061404Z" creationid="Wynn" creationdate="20150309T061224Z">
        <seg>用于代码覆盖率的软件衡量标准</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes a stubbed method should return different values depending on a predefined list of arguments. You can use &lt;l0&gt;returnValueMap()&lt;/l0&gt; to create a map that associates arguments with corresponding return values. See &lt;x1/&gt; for an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083748Z" creationid="Wynn" creationdate="20150327T083748Z">
        <seg>有时候，上桩的方法需要根据预定义的参数清单来返回不同的值。可以用 &lt;l0&gt;returnValueMap()&lt;/l0&gt; 方法将参数和相应的返回值关联起来建立映射。范例参见&lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes it is just plain hard to test the system under test (SUT) because it depends on other components that cannot be used in the test environment. This could be because they aren't available, they will not return the results needed for the test or because executing them would have undesirable side effects. In other cases, our test strategy requires us to have more control or visibility of the internal behavior of the SUT.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074320Z" creationid="Wynn" creationdate="20150327T074320Z">
        <seg>有时候对被测系统(SUT)进行测试是很困难的，因为它依赖于其他无法在测试环境中使用的组件。这有可能是因为这些组件不可用，它们不会返回测试所需要的结果，或者执行它们会有不良副作用。在其他情况下，我们的测试策略要求对被测系统的内部行为有更多控制或更多可见性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you have blocks of code that you cannot test and that you may want to ignore during code coverage analysis. PHPUnit lets you do this using the &lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;, &lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; and &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; annotations as shown in &lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070545Z" creationid="Wynn" creationdate="20150309T070545Z">
        <seg>有时，一些代码块是无法对其进行测试的，因此希望在代码覆盖率分析中忽略它们。在 PHPUnit 中可以用 &lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;、&lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; 与 &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; 标注来做到这点，如&lt;x3/&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to assert that the execution of a method, for instance, generates an expected output (via &lt;l0&gt;echo&lt;/l0&gt; or &lt;l1&gt;print&lt;/l1&gt;, for example). The &lt;l2&gt;PHPUnit_Framework_TestCase&lt;/l2&gt; class uses PHP's &lt;u3&gt;Output Buffering&lt;/u3&gt; feature to provide the functionality that is necessary for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024618Z" creationid="Wynn" creationdate="20150330T024618Z">
        <seg>有时候，想要断言（比如说）某方法的运行过程中生成了预期的输出（例如，通过 &lt;l0&gt;echo&lt;/l0&gt; 或 &lt;l1&gt;print&lt;/l1&gt;）。&lt;l2&gt;PHPUnit_Framework_TestCase&lt;/l2&gt; 类使用 PHP 的 &lt;u3&gt;输出缓冲&lt;/u3&gt; 特性来为此提供必要的功能支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to return one of the arguments of a method call (unchanged) as the result of a stubbed method call. &lt;x0/&gt; shows how you can achieve this using &lt;l1&gt;returnArgument()&lt;/l1&gt; instead of &lt;l2&gt;returnValue()&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T081257Z" creationid="Wynn" creationdate="20150327T081257Z">
        <seg>有时想要将（未改变的）方法调用时所使用的参数之一作为桩件的方法的调用结果来返回。 &lt;x0/&gt;展示了如何用 &lt;l1&gt;returnArgument()&lt;/l1&gt; 代替 &lt;l2&gt;returnValue()&lt;/l2&gt; 来做到这点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specification for the BowlingGame class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031528Z" creationid="Wynn" creationdate="20150330T031528Z">
        <seg>BowlingGame 类的规格</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all methods of a given class and its parent class(es) and interface(s).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T081644Z" creationid="Wynn" creationdate="20150228T081644Z">
        <seg>指明所标注的测试方法覆盖给定类以及其所有父类与接口的全部方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all methods of a given class that are not private.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091412Z" creationid="Wynn" creationdate="20150228T091412Z">
        <seg>指明所标注的测试方法覆盖给定类的所有非 private 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all methods of a given class that are not protected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082539Z" creationid="Wynn" creationdate="20150228T082539Z">
        <seg>指明所标注的测试方法覆盖给定类的所有非 protected 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all methods of a given class that are not public.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082532Z" creationid="Wynn" creationdate="20150228T082532Z">
        <seg>指明所标注的测试方法覆盖给定类的所有非 public 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all methods of a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T081632Z" creationid="Wynn" creationdate="20150228T081632Z">
        <seg>指明所标注的测试方法覆盖给定类的全部方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all private methods of a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082523Z" creationid="Wynn" creationdate="20150228T082523Z">
        <seg>指明所标注的测试方法覆盖给定类的所有 private 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all protected methods of a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082514Z" creationid="Wynn" creationdate="20150228T082502Z">
        <seg>指明所标注的测试方法覆盖给定类的所有 protected 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers all public methods of a given class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T082441Z" creationid="Wynn" creationdate="20150228T082441Z">
        <seg>指明所标注的测试方法覆盖给定类的所有 public 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers the specified global function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091429Z" creationid="Wynn" creationdate="20150228T091429Z">
        <seg>指明所标注的测试方法覆盖给定的全局函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that the annotated test method covers the specified method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T081615Z" creationid="Wynn" creationdate="20150228T081615Z">
        <seg>指明所标注的测试方法覆盖指定的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the &lt;l0&gt;PHPUnit_Runner_TestSuiteLoader&lt;/l0&gt; implementation to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100148Z" creationid="Wynn" creationdate="20150327T100148Z">
        <seg>指定要使用的 &lt;l0&gt;PHPUnit_Runner_TestSuiteLoader&lt;/l0&gt; 实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the result printer to use. The printer class must extend &lt;l0&gt;PHPUnit_Util_Printer&lt;/l0&gt; and implement the &lt;l1&gt;PHPUnit_Framework_TestListener&lt;/l1&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100508Z" creationid="Wynn" creationdate="20150327T100508Z">
        <seg>指定要使用的结果输出器(printer)。输出器类必须扩展 &lt;l0&gt;PHPUnit_Util_Printer&lt;/l0&gt; 并且实现 &lt;l1&gt;PHPUnit_Framework_TestListener&lt;/l1&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify one or more tables in your database by table name (actual dataset)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070327Z" creationid="Wynn" creationdate="20150317T070327Z">
        <seg>用表名称来指定数据库中的一个或多个表（实际上是指定了一个数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify the expected dataset in your preferred format (YAML, XML, ..)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070401Z" creationid="Wynn" creationdate="20150317T070401Z">
        <seg>用你喜欢的格式（YAML、XML等等）来指定预期数据集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifying Covered Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070740Z" creationid="Wynn" creationdate="20150309T070740Z">
        <seg>指明要覆盖的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Start the Selenium Server server by running &lt;u0&gt;java -jar /usr/local/bin/selenium-server-standalone-2.9.0.jar&lt;/u0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T033144Z" creationid="Wynn" creationdate="20150327T033144Z">
        <seg>运行 &lt;u0&gt;java -jar /usr/local/bin/selenium-server-standalone-2.9.0.jar&lt;/u0&gt; 来启动 Selenium Server 服务器端。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stop execution upon first error or failure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095945Z" creationid="Wynn" creationdate="20150327T095945Z">
        <seg>首次错误或失败出现后停止执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stop execution upon first error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095936Z" creationid="Wynn" creationdate="20150327T095936Z">
        <seg>首次错误出现后停止执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stop execution upon first incomplete test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100112Z" creationid="Wynn" creationdate="20150327T100055Z">
        <seg>首次碰到不完整的测试时停止执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stop execution upon first risky test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095951Z" creationid="Wynn" creationdate="20150327T095951Z">
        <seg>首次碰到有风险的测试时停止执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stop execution upon first skipped test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100103Z" creationid="Wynn" creationdate="20150327T100051Z">
        <seg>首次碰到跳过的测试时停止执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strict Mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050641Z" creationid="Wynn" creationdate="20150330T050641Z">
        <seg>Strict Mode （严格模式）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String getExpectedException()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103312Z" creationid="Wynn" creationdate="20150327T103312Z">
        <seg>String getExpectedException()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stub</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074548Z" creationid="Wynn" creationdate="20150327T074548Z">
        <seg>Stub （桩件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return a fixed value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075002Z" creationid="Wynn" creationdate="20150327T075002Z">
        <seg>对某个方法的调用上桩，返回固定值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return a list of values in the specified order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084147Z" creationid="Wynn" creationdate="20150327T084147Z">
        <seg>对方法的调用上桩，按照指定顺序返回列表中的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return a reference to the stub object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083702Z" creationid="Wynn" creationdate="20150327T083702Z">
        <seg>对方法的调用上桩，返回对桩件对象的引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return a value from a callback</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084059Z" creationid="Wynn" creationdate="20150327T084059Z">
        <seg>对方法的调用上桩，由回调生成返回值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return one of the arguments</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083554Z" creationid="Wynn" creationdate="20150327T083554Z">
        <seg>对某个方法的调用上桩，返回参数之一</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to return the value from a map</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083912Z" creationid="Wynn" creationdate="20150327T083912Z">
        <seg>对方法的调用上桩，按照映射确定返回值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a method call to throw an exception</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084249Z" creationid="Wynn" creationdate="20150327T084249Z">
        <seg>对方法的调用上桩，抛出异常</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing a web service</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091336Z" creationid="Wynn" creationdate="20150327T091336Z">
        <seg>对 web 服务上桩</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubbing and Mocking Web Services</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150824T091258Z" creationid="Wynn" creationdate="20150327T091153Z">
        <seg>对 Web 服务(Web Services)进行上桩或模仿</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stubs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024759Z" creationid="Wynn" creationdate="20150327T024759Z">
        <seg>Stubs （桩件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass PHPUnit_Extensions_TestDecorator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070621Z" creationid="Wynn" creationdate="20150319T070621Z">
        <seg>从 PHPUnit_Extensions_TestDecorator 派生子类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subclass PHPUnit_Framework_TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042636Z" creationid="Wynn" creationdate="20150319T042636Z">
        <seg>从 PHPUnit_Framework_TestCase 派生子类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Super-global variables are built-in variables that are always available in all scopes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T084714Z" creationid="Wynn" creationdate="20150319T084714Z">
        <seg>超全局变量是一种在任何变量作用域中都总是可用的内建变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support for Composer and PHP Archive (PHAR) was added in PHPUnit 3.7 (and is known to be stable since PHPUnit 3.7.5). Earlier releases of PHPUnit are not available through these distribution channels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042050Z" creationid="Wynn" creationdate="20150330T042050Z">
        <seg>对 Composer 和 PHP 档案包 (PHAR) 的支持是在 PHPUnit 3.7 加入的（在 PHPUnit 3.7.5 进入稳定状态）。更早的 PHPUnit 发行版本在这些分发渠道上可能不可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supported Vendors for Database Testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081610Z" creationid="Wynn" creationdate="20150310T081610Z">
        <seg>数据库测试所支持的供应商</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supported variations of the @assert annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043520Z" creationid="Wynn" creationdate="20150330T043520Z">
        <seg>@assert 标注所允许的各种变体</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>System Under Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074311Z" creationid="Wynn" creationdate="20150327T074311Z">
        <seg>System Under Test （被测系统）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TAP version 13
not ok 1 - Failure: testFailure(FailureErrorTest)
  ---
  message: 'Failed asserting that &lt;integer:2&gt; matches expected value &lt;integer:1&gt;.'
  severity: fail
  data:
    got: 2
    expected: 1
  ...
not ok 2 - Error: testError(FailureErrorTest)
1..2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101433Z" creationid="Wynn" creationdate="20150319T101433Z">
        <seg>TAP version 13
not ok 1 - Failure: testFailure(FailureErrorTest)
  ---
  message: 'Failed asserting that &lt;integer:2&gt; matches expected value &lt;integer:1&gt;.'
  severity: fail
  data:
    got: 2
    expected: 1
  ...
not ok 2 - Error: testError(FailureErrorTest)
1..2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TAP version 13
ok 1 - testNewArrayIsEmpty(ArrayTest)
ok 2 - testArrayContainsAnElement(ArrayTest)
1..2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101223Z" creationid="Wynn" creationdate="20150319T101223Z">
        <seg>TAP version 13
ok 1 - testNewArrayIsEmpty(ArrayTest)
ok 2 - testArrayContainsAnElement(ArrayTest)
1..2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Teardown</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T070338Z" creationid="Wynn" creationdate="20150313T070201Z">
        <seg>拆除基境(fixture)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Template Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075835Z" creationid="Wynn" creationdate="20150319T075835Z">
        <seg>Template Method （模板方法）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Template Methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073442Z" creationid="Wynn" creationdate="20150327T073442Z">
        <seg>模板方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101629Z" creationid="Wynn" creationdate="20150327T101629Z">
        <seg>测试的依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Double</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074346Z" creationid="Wynn" creationdate="20150327T074346Z">
        <seg>Test Double （测试替身）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Doubles</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074131Z" creationid="Wynn" creationdate="20150327T074131Z">
        <seg>测试替身</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Driven Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093337Z" creationid="Wynn" creationdate="20150309T093337Z">
        <seg>Test Driven Development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Driven Development by Example</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093338Z" creationid="Wynn" creationdate="20150309T093338Z">
        <seg>Test Driven Development by Example</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Execution Timeout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031347Z" creationid="Wynn" creationdate="20150327T031347Z">
        <seg>测试执行时长的超时限制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Groups</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091354Z" creationid="Wynn" creationdate="20150309T090315Z">
        <seg>Test Groups （测试分组）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Isolation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T084939Z" creationid="Wynn" creationdate="20150319T084939Z">
        <seg>Test Isolation （测试隔离）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Listener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075006Z" creationid="Wynn" creationdate="20150310T075006Z">
        <seg>Test Listener （测试监听器）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Listeners</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T074953Z" creationid="Wynn" creationdate="20150310T074953Z">
        <seg>测试监听器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Results (JSON)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101441Z" creationid="Wynn" creationdate="20150319T101441Z">
        <seg>测试结果 (JSON)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Results (TAP)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101132Z" creationid="Wynn" creationdate="20150319T101132Z">
        <seg>测试结果 (TAP)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Results (XML)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100952Z" creationid="Wynn" creationdate="20150319T100952Z">
        <seg>测试结果 (XML)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Suite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091301Z" creationid="Wynn" creationdate="20150309T083059Z">
        <seg>Test Suite （测试套件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Suites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T083050Z" creationid="Wynn" creationdate="20150309T083050Z">
        <seg>测试套件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test code should be as short and precise as possible for several reasons:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082134Z" creationid="Wynn" creationdate="20150310T082120Z">
        <seg>测试代码应当尽可能简短精确，这有若干原因：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test code should contain no extraneous overhead so that the test itself does not get lost in noise that surrounds it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041040Z" creationid="Wynn" creationdate="20150330T041040Z">
        <seg>测试代码不应当引入额外的开销，避免淹没测试内容本身。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test listeners trigger one autoload call</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042152Z" creationid="Wynn" creationdate="20150330T042152Z">
        <seg>测试监听器触发了一次对自动加载(autoload)的调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test missing to achieve complete code coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032609Z" creationid="Wynn" creationdate="20150330T032609Z">
        <seg>达成完全覆盖所缺少的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test with multiple dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102000Z" creationid="Wynn" creationdate="20150327T102000Z">
        <seg>有多重依赖的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test-Driven Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030706Z" creationid="Wynn" creationdate="20150330T030706Z">
        <seg>Test-Driven Development （测试驱动开发）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test-First Programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045715Z" creationid="Wynn" creationdate="20150330T045715Z">
        <seg>Test-First Programming （测试优先编程）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test-First Programming, which is part of Extreme Programming and Test-Driven Development, builds upon this idea and takes it to the extreme. With today's computational power, we have the opportunity to run thousands of tests thousands of times per day. We can use the feedback from all of these tests to program in small steps, each of which carries with it the assurance of a new automated test in addition to all the tests that have come before. The tests are like pitons, assuring you that, no matter what happens, once you have made progress you can only fall so far.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045821Z" creationid="Wynn" creationdate="20150330T045821Z">
        <seg>测试优先编程是极限编程和测试驱动开发的组成部分，它正是建立在这个观念之上，并将其推至极致。在现今的计算能力下，我们有机会每天都将成千上万测试运行成千上万遍。我们可以利用这些测试带来的反馈，用很小的步调进行编程，伴随着每个步调，都往现有的那些测试中再加上一个新的自动测试来为其担保。这些测试就像登山时使用的岩钉，一旦钉下，就能为你提供保证，不管发生了什么情况，你顶多下跌到岩钉处就会停住。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestDox</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092754Z" creationid="Wynn" creationdate="20150309T092754Z">
        <seg>TestDox</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestNamespace\TestCaseClass::testMethod</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093541Z" creationid="Wynn" creationdate="20150327T093541Z">
        <seg>TestNamespace\TestCaseClass::testMethod</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestNamespace\TestCaseClass::testMethod with data set "my named data"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093607Z" creationid="Wynn" creationdate="20150327T093607Z">
        <seg>TestNamespace\TestCaseClass::testMethod with data set "my named data"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestNamespace\TestCaseClass::testMethod with data set #0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093559Z" creationid="Wynn" creationdate="20150327T093559Z">
        <seg>TestNamespace\TestCaseClass::testMethod with data set #0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing Exceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102808Z" creationid="Wynn" creationdate="20150327T102808Z">
        <seg>对异常进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024358Z" creationid="Wynn" creationdate="20150330T024358Z">
        <seg>对输出进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing PHP Errors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024025Z" creationid="Wynn" creationdate="20150330T024025Z">
        <seg>对 PHP 错误进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing Practices</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092234Z" creationid="Wynn" creationdate="20150327T092234Z">
        <seg>测试实践</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing a class that interacts with the filesystem</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092003Z" creationid="Wynn" creationdate="20150327T092003Z">
        <seg>对一个与文件系统交互的类进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing array operations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025846Z" creationid="Wynn" creationdate="20150330T025846Z">
        <seg>对数组操作进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing array operations with PHPUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101604Z" creationid="Wynn" creationdate="20150327T101604Z">
        <seg>用 PHPUnit 测试数组操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing gives code authors and reviewers confidence that patches produce the correct results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092554Z" creationid="Wynn" creationdate="20150327T092554Z">
        <seg>进行测试让代码的作者和评审者对补丁能够产生正确的结果有信心。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing provides a good way to catch regressions quickly, and to make sure that no regression will be repeated twice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092609Z" creationid="Wynn" creationdate="20150327T092609Z">
        <seg>进行测试提供了一种良好的方法来快速捕捉退步(Regression)，并且能用来保证退步不会重复出现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing return values of code that uses PHP Errors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024325Z" creationid="Wynn" creationdate="20150330T024325Z">
        <seg>对会引发PHP 错误的代码的返回值进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing that a method gets called once and with a specified argument</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085414Z" creationid="Wynn" creationdate="20150327T085414Z">
        <seg>测试某个方法会以特定参数被调用一次</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing that a method gets called once and with the identical object as was passed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090101Z" creationid="Wynn" creationdate="20150327T090101Z">
        <seg>测试某个方法将会被调用一次，并且以某个特定对象作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing that a method gets called two times with specific arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085641Z" creationid="Wynn" creationdate="20150327T085641Z">
        <seg>测试某个方法将会以特定参数被调用二次</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing that a method gets called with a number of arguments constrained in different ways</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085543Z" creationid="Wynn" creationdate="20150327T085543Z">
        <seg>测试某个方法将会以特定数量的参数进行调用，并且对各个参数以多种方式进行约束</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing the concrete methods of a trait</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091107Z" creationid="Wynn" creationdate="20150327T091107Z">
        <seg>对特质的具体方法进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing the concrete methods of an abstract class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091130Z" creationid="Wynn" creationdate="20150327T091130Z">
        <seg>对抽象类的具体方法进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing the database requires you to hook into at least the setup and teardown to clean-up and write the required fixture data into your tables. However the database extension has good reason to revert the four stages in a database test to resemble the following workflow that is executed for each single test:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T070955Z" creationid="Wynn" creationdate="20150313T070456Z">
        <seg>对数据库进行测试至少要处理建立与拆除的步骤，在其中完成清理工作，并将所需的基境数据写入表内。然而对于数据库扩展模块而言，在数据库测试中有很好的理由将这四个步骤还原成类似下面这样的工作流程，这个流程对于每个测试都会完整执行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing the database requires you to hook into at least the setup and teardown to clean-up and write the required fixture data into your tables. However, the database extension has good reason to revert the four stages in a database test to resemble the following workflow that is executed for each single test:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084303Z" creationid="Wynn" creationdate="20150817T084303Z">
        <seg>对数据库进行测试至少要处理建立与拆除的步骤，在其中完成清理工作，并将所需的基境数据写入表内。因而，对于数据库扩展模块而言，在数据库测试中有很好的理由将这四个步骤还原成类似下面这样的工作流程，这个流程对于每个测试都会完整执行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing the output of a function or method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024636Z" creationid="Wynn" creationdate="20150330T024636Z">
        <seg>对函数或方法的输出进行测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing with PHPUnit is not a totally different activity from what you should already be doing. It is just a different way of doing it. The difference is between &lt;e0&gt;testing&lt;/e0&gt;, that is, checking that your program behaves as expected, and &lt;e1&gt;performing a battery of tests&lt;/e1&gt;, runnable code-fragments that automatically test the correctness of parts (units) of the software. These runnable code-fragments are called unit tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025730Z" creationid="Wynn" creationdate="20150330T025730Z">
        <seg>使用 PHPUnit 进行测试与过往的做法并没有本质区别，只是方式有所不同。二者的区别在于&lt;e0&gt;测试&lt;/e0&gt;与&lt;e1&gt;执行一系列测试&lt;/e1&gt;，前者检查软件的行为是否符合预期，后者则利用一些可运行的代码片段来自动测试软件各个部分（单元）的正确性。这些可运行的代码片段称为单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests are expected to be fine-grained, testing one aspect of one object. Hence, the first time a test fails, execution of the test halts, and PHPUnit reports the failure. It is an art to test by running in many small tests. Fine-grained tests improve the overall design of the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041227Z" creationid="Wynn" creationdate="20150330T041227Z">
        <seg>测试应当有良好的粒度划分，每个测试应当只测试一个对象的一个方面。因此，第一个失败的测试就会中止测试的执行，同时 PHPUnit 会报告此错误。通过运行大量小测试来对软件进行测试是一种艺术。具有良好粒度划分的测试能够帮助改善系统的总体设计。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests can be selected for execution based on groups using the &lt;l0&gt;--group&lt;/l0&gt; and &lt;l1&gt;--exclude-group&lt;/l1&gt; options of the command-line test runner or using the respective directives of the XML configuration file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072857Z" creationid="Wynn" creationdate="20150302T072857Z">
        <seg> 测试可以基于组来选择性的执行，使用命令行测试执行器的 &lt;l0&gt;--group&lt;/l0&gt; and &lt;l1&gt;--exclude-group&lt;/l1&gt; 选项，或者使用对应的 XML 配置文件指令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests do not generally require all the flexibility of a programming language. Many testing tools provide their own scripting language that only includes the minimum necessary features for writing tests. The resulting tests are easy to read and write because they have no noise to distract you from the content of the tests. However, learning yet another programming language and set of programming tools is inconvenient and clutters the mind.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041131Z" creationid="Wynn" creationdate="20150330T041131Z">
        <seg>一般来说，测试并不需要编程语言的全部灵活性。许多测试工具都提供了自有的脚本语言，这些脚本语言只包含编写测试所必须的那些特性。这样得到的测试易于阅读也易于编写，因为没有会让你从测试内容本身分心的干扰内容。但是，学习其他编程语言和编程工具集并不方便，并且还会干扰思维。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests for the BankAccount class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050122Z" creationid="Wynn" creationdate="20150330T050122Z">
        <seg>BankAccount 类的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests should run fast so they can be run hundreds or thousands of times a day.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041056Z" creationid="Wynn" creationdate="20150330T041056Z">
        <seg>测试需要运行的很快，这样才能每天都运行成百上千次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests that emit output will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050650Z" creationid="Wynn" creationdate="20150330T050650Z">
        <seg>本身产生输出的测试将会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests that specify which method they want to cover</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070949Z" creationid="Wynn" creationdate="20150309T070901Z">
        <seg>在测试中指明欲覆盖哪些方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests with no assertions will fail and will not generate code coverage information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050654Z" creationid="Wynn" creationdate="20150330T050654Z">
        <seg>含断言的错误将会失败，并且不会生成代码覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;addRiskyTest()&lt;/c0&gt; was added to the &lt;c1&gt;PHPUnit_Framework_TestListener&lt;/c1&gt; interface. Classes that implement this interface have to implement this new method. This is the reason why PHPStorm 7 is not compatible with PHPUnit 4, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101217Z" creationid="Wynn" creationdate="20150327T101159Z">
        <seg>&lt;c0&gt;addRiskyTest()&lt;/c0&gt; 方法已添加到 &lt;c1&gt;PHPUnit_Framework_TestListener&lt;/c1&gt; 接口。所有实现了本方法的类必须实现此新方法。这正式 PHPStorm 7 与 PHPUnit 4 不兼容的原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Branch Coverage&lt;/e0&gt; software metric measures whether the boolean expression of each control structure evaluated to both &lt;l1&gt;true&lt;/l1&gt; and &lt;l2&gt;false&lt;/l2&gt; while running the test suite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T063119Z" creationid="Wynn" creationdate="20150309T063119Z">
        <seg>&lt;e0&gt;分支覆盖率(Branch Coverage)&lt;/e0&gt;按控制结构的分支进行计量。测试套件运行时每个控制结构的布尔表达式求值为 &lt;l1&gt;true&lt;/l1&gt; 和 &lt;l2&gt;false&lt;/l2&gt; 各自计为一个分支。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Change Risk Anti-Patterns (CRAP) Index&lt;/e0&gt; is calculated based on the cyclomatic complexity and code coverage of a unit of code. Code that is not too complex and has an adequate test coverage will have a low CRAP index. The CRAP index can be lowered by writing tests and by refactoring the code to lower its complexity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T064150Z" creationid="Wynn" creationdate="20150309T064150Z">
        <seg>&lt;e0&gt;变更风险反模式(CRAP)指数(Change Risk Anti-Patterns (CRAP) Index)&lt;/e0&gt;是基于代码单元的圈复杂度(cyclomatic complexity)与代码覆盖率计算得出的。不太复杂并具有恰当测试覆盖率的代码将得出较低的CRAP指数。可以通过编写测试或重构代码来降低其复杂性的方式来降低CRAP指数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Class and Trait Coverage&lt;/e0&gt; software metric measures whether each method of a class or trait is covered. PHP_CodeCoverage only considers a class or trait as covered when all of its methods are covered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T062345Z" creationid="Wynn" creationdate="20150309T062345Z">
        <seg>&lt;e0&gt;类与特质覆盖率(Class and Trait Coverage)&lt;/e0&gt;按单个类或特质的所有方法是否全部已覆盖进行计量。仅当一个类或性状的所有方法全部已覆盖时 PHP_CodeCoverage 才将其视为已覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Function and Method Coverage&lt;/e0&gt; software metric measures whether each function or method has been invoked. PHP_CodeCoverage only considers a function or method as covered when all of its executable lines are covered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061809Z" creationid="Wynn" creationdate="20150309T061736Z">
        <seg>&lt;e0&gt;函数与方法覆盖率(Function and Method Coverage)&lt;/e0&gt;按单个函数或方法是否已调用到进行计量。仅当函数或方法的所有可执行行全部已覆盖时 PHP_CodeCoverage 才将其视为已覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Line Coverage&lt;/e0&gt; software metric measures whether each executable line was executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061815Z" creationid="Wynn" creationdate="20150309T061649Z">
        <seg>&lt;e0&gt;行覆盖率(Line Coverage)&lt;/e0&gt;按单个可执行行是否已执行到进行计量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Opcode Coverage&lt;/e0&gt; software metric measures whether each opcode of a function or method has been executed while running the test suite. A line of code usually compiles into more than one opcode. Line Coverage regards a line of code as covered as soon as one of its opcodes is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T062733Z" creationid="Wynn" creationdate="20150309T062456Z">
        <seg>&lt;e0&gt;Opcode 覆盖率&lt;/e0&gt;按函数或方法对应的每条 opcode 在运行测试套件时是否执行到进行计量。一行（PHP的）代码通常会编译得到多条 opcode。进行行覆盖率计量时，只要其中任何一条 opcode 被执行就视为此行已覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Opcode Coverage&lt;/e0&gt;, &lt;e1&gt;Branch Coverage&lt;/e1&gt;, and &lt;e2&gt;Path Coverage&lt;/e2&gt; software metrics are not yet supported by PHP_CodeCoverage.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T064303Z" creationid="Wynn" creationdate="20150309T064303Z">
        <seg>目前 PHP_CodeCoverage 尚不支持 &lt;e0&gt;Opcode覆盖率&lt;/e0&gt;、&lt;e1&gt;分支覆盖率&lt;/e1&gt; 及 &lt;e2&gt;路径覆盖率&lt;/e2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Path Coverage&lt;/e0&gt; software metric measures whether each of the possible execution paths in a function or method has been followed while running the test suite. An execution path is a unique sequence of branches from the entry of the function or method to its exit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T063414Z" creationid="Wynn" creationdate="20150309T063414Z">
        <seg>&lt;e0&gt;路径覆盖率(Path Coverage)&lt;/e0&gt;按测试套件运行时函数或者方法内部所经历的执行路径进行计量。一个执行路径指的是从进入函数或方法一直到离开的过程中经过各个分支的特定序列。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;$GLOBALS&lt;/l0&gt; variable is a so-called &lt;e1&gt;super-global&lt;/e1&gt; variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T084637Z" creationid="Wynn" creationdate="20150319T084637Z">
        <seg>&lt;l0&gt;$GLOBALS&lt;/l0&gt;这个变量是一种被称为&lt;e1&gt;超全局&lt;/e1&gt;变量的变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;$index&lt;/l0&gt; parameter for the &lt;l1&gt;at()&lt;/l1&gt; matcher refers to the index, starting at zero, in &lt;e2&gt;all method invocations&lt;/e2&gt; for a given mock object. Exercise caution when using this matcher as it can lead to brittle tests which are too closely tied to specific implementation details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090828Z" creationid="Wynn" creationdate="20150327T090333Z">
        <seg>&lt;l1&gt;at()&lt;/l1&gt; 匹配器的 &lt;l0&gt;$index&lt;/l0&gt; 参数指的是对给定仿件对象的&lt;e2&gt;所有方法的调用&lt;/e2&gt;的索引，从零开始。使用这个匹配器要谨慎，因为它可能导致测试由于与具体的实现细节过分紧密绑定而变得脆弱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;filter&gt;&lt;/l0&gt; element and its children can be used to configure the blacklist and whitelist for the code coverage reporting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093826Z" creationid="Wynn" creationdate="20150309T093826Z">
        <seg>&lt;l0&gt;&lt;filter&gt;&lt;/l0&gt; 元素及其子元素用于为代码覆盖率报告配置黑名单与白名单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;filter&gt;&lt;/l0&gt; element and its children can be used to configure the whitelist for the code coverage reporting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151105T070139Z" creationid="Wynn" creationdate="20151105T070139Z">
        <seg>&lt;l0&gt;&lt;filter&gt;&lt;/l0&gt; 元素及其子元素用于配置代码覆盖率报告所使用的白名单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;groups&gt;&lt;/l0&gt; element and its &lt;l1&gt;&lt;include&gt;&lt;/l1&gt;, &lt;l2&gt;&lt;exclude&gt;&lt;/l2&gt;, and &lt;l3&gt;&lt;group&gt;&lt;/l3&gt; children can be used to select groups of tests marked with the &lt;l4&gt;@group&lt;/l4&gt; annotation (documented in &lt;x5/&gt;) that should (not) be run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091535Z" creationid="Wynn" creationdate="20150309T091535Z">
        <seg>&lt;l0&gt;&lt;groups&gt;&lt;/l0&gt; 元素及其 &lt;l1&gt;&lt;include&gt;&lt;/l1&gt;、&lt;l2&gt;&lt;exclude&gt;&lt;/l2&gt;、&lt;l3&gt;&lt;group&gt;&lt;/l3&gt; 子元素用于从带有 &lt;l4&gt;@group&lt;/l4&gt; 标注（相关文档参见 &lt;x5/&gt;）的测试中选择需要运行（或不运行）的分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;listeners&gt;&lt;/l0&gt; element and its &lt;l1&gt;&lt;listener&gt;&lt;/l1&gt; children can be used to attach additional test listeners to the test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075152Z" creationid="Wynn" creationdate="20150310T075152Z">
        <seg>&lt;l0&gt;&lt;listeners&gt;&lt;/l0&gt; 元素及其 &lt;l1&gt;&lt;listener&gt;&lt;/l1&gt; 子元素用于在测试执行期间附加额外的测试监听器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;logging&gt;&lt;/l0&gt; element and its &lt;l1&gt;&lt;log&gt;&lt;/l1&gt; children can be used to configure the logging of the test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095211Z" creationid="Wynn" creationdate="20150309T095211Z">
        <seg>&lt;l0&gt;&lt;logging&gt;&lt;/l0&gt; 元素及其 &lt;l1&gt;&lt;log&gt;&lt;/l1&gt; 子元素用于配置测试执行期间的日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;php&gt;&lt;/l0&gt; element and its children can be used to configure PHP settings, constants, and global variables. It can also be used to prepend the &lt;l1&gt;include_path&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075623Z" creationid="Wynn" creationdate="20150310T075623Z">
        <seg>&lt;l0&gt;&lt;php&gt;&lt;/l0&gt; 元素及其子元素用于配置 PHP 设置、常量以及全局变量。同时也可用于向 &lt;l1&gt;include_path&lt;/l1&gt; 前部置入内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;selenium&gt;&lt;/l0&gt; element and its &lt;l1&gt;&lt;browser&gt;&lt;/l1&gt; children can be used to configure a list of Selenium RC servers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075831Z" creationid="Wynn" creationdate="20150310T075831Z">
        <seg>&lt;l0&gt;&lt;selenium&gt;&lt;/l0&gt; 元素及其 &lt;l1&gt;&lt;browser&gt;&lt;/l1&gt; 子元素用于配置 Selenium RC 服务器列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;&lt;testsuites&gt;&lt;/l0&gt; element and its one or more &lt;l1&gt;&lt;testsuite&gt;&lt;/l1&gt; children can be used to compose a test suite out of test suites and test cases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T091340Z" creationid="Wynn" creationdate="20150309T083313Z">
        <seg>带有一个或多个 &lt;l1&gt;&lt;testsuite&gt;&lt;/l1&gt; 子元素的 &lt;l0&gt;&lt;testsuites&gt;&lt;/l0&gt; 元素用于将测试套件及测试用例组合出新的测试套件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@after&lt;/l0&gt; annotation can be used to specify methods that should be called after each test method in a test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T060529Z" creationid="Wynn" creationdate="20150228T060154Z">
        <seg>&lt;l0&gt;@after&lt;/l0&gt; 标注用于指明此方法应当在测试用例类中的每个测试方法运行完成之后调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@afterClass&lt;/l0&gt; annotation can be used to specify static methods that should be called after all test methods in a test class have been run to clean up shared fixtures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T062445Z" creationid="Wynn" creationdate="20150228T060523Z">
        <seg>&lt;l0&gt;@afterClass&lt;/l0&gt; 标注用于指明此静态方法应该于测试类中的所有测试方法都运行完成之后调用，用于清理共享基境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@author&lt;/l0&gt; annotation is an alias for &lt;l1&gt;@group&lt;/l1&gt; allowing to filter tests based on their authors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093834Z" creationid="Wynn" creationdate="20150327T093834Z">
        <seg>&lt;l0&gt;@author&lt;/l0&gt; 标注是 &lt;l1&gt;@group&lt;/l1&gt; 的一个别名，允许按作者来筛选测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@author&lt;/l0&gt; annotation is an alias for the &lt;l1&gt;@group&lt;/l1&gt; annotation (see &lt;x2/&gt;) and allows to filter tests based on their authors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T060020Z" creationid="Wynn" creationdate="20150228T060020Z">
        <seg>&lt;l0&gt;@author&lt;/l0&gt;  标注是 &lt;l1&gt;@group&lt;/l1&gt; 标注（参见 &lt;x2/&gt;）的别名，允许基于作者对测试进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupGlobals&lt;/l0&gt; annotation can also be used on the test method level. This allows for a fine-grained configuration of the backup and restore operations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T060805Z" creationid="Wynn" creationdate="20150228T060805Z">
        <seg>&lt;l0&gt;@backupGlobals&lt;/l0&gt; 标注也可以用在测试方法这一级别。这样可以对备份与还原操作进行更细粒度的配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupGlobals&lt;/l0&gt; annotation that is discussed in &lt;x1/&gt; can be used to control the backup and restore operations for global variables. Alternatively, you can provide a blacklist of global variables that are to be excluded from the backup and restore operations like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085822Z" creationid="Wynn" creationdate="20150319T085822Z">
        <seg>在&lt;x1/&gt;中所讨论的 &lt;l0&gt;@backupGlobals&lt;/l0&gt; 标注可以用来控制对全局变量的备份与还原操作。另外，还可以提供一个全局变量的黑名单，黑名单中的全局变量将被排除于备份与还原操作之外，就像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; annotation can also be used on the test method level. This allows for a fine-grained configuration of the backup and restore operations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025253Z" creationid="Wynn" creationdate="20150330T025253Z">
        <seg>&lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; 标注也可以用在测试方法这一级别。这样可以对备份与还原操作进行更细粒度的配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; annotation can be used to back up all static property values in all declared classes before each test and restore them afterwards. It may be used at the test case class or test method level:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T060904Z" creationid="Wynn" creationdate="20150228T060904Z">
        <seg>如果指定了 &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; 标注，那么将在每个测试之前备份所有已声明的类的静态属性的值，并在测试完成之后全部恢复。它可以用在测试用例类或测试方法级别：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; annotation discussed in &lt;x1/&gt; can be used to back up all static property values in all declared classes before each test and restore them afterwards.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090019Z" creationid="Wynn" creationdate="20150319T090004Z">
        <seg>在 &lt;x1/&gt; 中提到的 &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; 标注可以用于在每个测试之前备份所有已声明类的静态属性值并在其后恢复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; annotation that is discussed in &lt;x1/&gt; can be used to control the backup and restore operations for static attributes. Alternatively, you can provide a blacklist of static attributes that are to be excluded from the backup and restore operations like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040616Z" creationid="Wynn" creationdate="20150330T040616Z">
        <seg>在 &lt;x1/&gt; 中所讨论的 &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt;  标注可以用来控制对静态属性的备份与还原操作。另外，还可以提供一个静态属性的黑名单，黑名单中的静态属性将被排除于备份与还原操作之外，就像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; operation is executed before a test method, but only if it is enabled. If a static value was changed by a previously executed test that did not have &lt;l1&gt;@backupStaticAttributes&lt;/l1&gt; enabled, then that value will be backed up and restored — not the originally declared default value. PHP does not record the originally declared default value of any static variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090234Z" creationid="Wynn" creationdate="20150319T090234Z">
        <seg>只有启用了 &lt;l0&gt;@backupStaticAttributes&lt;/l0&gt; 的测试方法才会在方法之前执行此操作。如果在此之前运行的某个没有启用 &lt;l1&gt;@backupStaticAttributes&lt;/l1&gt; 的测试方法改变了静态属性的值，那么被备份及还原的将会是这个改变后的值——而非初始声明时提供的默认值。PHP 并不额外记录任何静态变量的声明时提供的初始默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@before&lt;/l0&gt; annotation can be used to specify methods that should be called before each test method in a test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T062412Z" creationid="Wynn" creationdate="20150228T062412Z">
        <seg>&lt;l0&gt;@before&lt;/l0&gt; 标注用于指明此方法应当在测试用例类中的每个测试方法开始运行之前调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@beforeClass&lt;/l0&gt; annotation can be used to specify static methods that should be called before any test methods in a test class are run to set up shared fixtures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T062442Z" creationid="Wynn" creationdate="20150228T062442Z">
        <seg>&lt;l0&gt;@beforeClass&lt;/l0&gt; 标注用于指明此静态方法应该于测试类中的所有测试方法都运行完成之后调用，用于建立共享基境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;, &lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; and &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; annotations can be used to exclude lines of code from the coverage analysis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080238Z" creationid="Wynn" creationdate="20150228T080238Z">
        <seg>&lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;, &lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; and &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; 标注用于从覆盖率分析中排除掉某些代码行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@covers&lt;/l0&gt; annotation (see &lt;x1/&gt;) can be used in the test code to specify which method(s) a test method wants to test. If provided, only the code coverage information for the specified method(s) will be considered. &lt;x2/&gt; shows an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070838Z" creationid="Wynn" creationdate="20150309T070838Z">
        <seg>&lt;l0&gt;@covers&lt;/l0&gt;  标注（参见 &lt;x1/&gt;）可以用在测试代码中来指明测试方法想要对哪些方法进行测试。如果提供了这个信息，则只有指定方法的代码覆盖率信息会被统计。 &lt;x2/&gt;展示了一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@covers&lt;/l0&gt; annotation can be used in the test code to specify which method(s) a test method wants to test:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080401Z" creationid="Wynn" creationdate="20150228T080401Z">
        <seg>在测试代码中用 &lt;l0&gt;@covers&lt;/l0&gt; 标注来指明测试方法想要对哪些方法进行测试：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@coversDefaultClass&lt;/l0&gt; annotation can be used to specify a default namespace or class name so long names don't need to be repeated for every &lt;l1&gt;@covers&lt;/l1&gt; annotation. See &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025359Z" creationid="Wynn" creationdate="20150330T025359Z">
        <seg>&lt;l0&gt;@coversDefaultClass&lt;/l0&gt; 标注用于指定一个默认的命名空间或类名，这样就不用在每个 &lt;l1&gt;@covers&lt;/l1&gt; 标注中重复长名称。参见&lt;x2/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@coversDefaultClass&lt;/l0&gt; annotation can be used to specify a default namespace or class name. That way long names don't need to be repeated for every &lt;l1&gt;@covers&lt;/l1&gt; annotation. See &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091539Z" creationid="Wynn" creationdate="20150228T091539Z">
        <seg>&lt;l0&gt;@coversDefaultClass&lt;/l0&gt;  标注用于指定一个默认的命名空间或类名，这样就不用在每个 &lt;l1&gt;@covers&lt;/l1&gt;  标注中重复长名称。参见&lt;x2/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@coversNothing&lt;/l0&gt; annotation can be used in the test code to specify that no code coverage information will be recorded for the annotated test case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091644Z" creationid="Wynn" creationdate="20150228T091644Z">
        <seg>在测试代码中用 &lt;l0&gt;@coversNothing&lt;/l0&gt; 标注来指明所标注的测试用例不需要记录任何代码覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@expectedExceptionCode&lt;/l0&gt; annotation, in conjunction with the &lt;l1&gt;@expectedException&lt;/l1&gt; allows making assertions on the error code of a thrown exception thus being able to narrow down a specific exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T071720Z" creationid="Wynn" creationdate="20150302T071720Z">
        <seg>将 &lt;l0&gt;@expectedExceptionCode&lt;/l0&gt;  标注与 &lt;l1&gt;@expectedException&lt;/l1&gt; 联合使用，可以对抛出异常的代码作出断言，这样可以缩小具体异常的范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; annotation works similar to &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; as it lets you make an assertion on the error message of an exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T071919Z" creationid="Wynn" creationdate="20150302T071919Z">
        <seg>&lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; 标注的运作方式类似于 &lt;l1&gt;@expectedExceptionCode&lt;/l1&gt; ，用它可以对异常的错误讯息作出断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@large&lt;/l0&gt; annotation is an alias for &lt;l1&gt;@group large&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073108Z" creationid="Wynn" creationdate="20150302T073108Z">
        <seg>&lt;l0&gt;@large&lt;/l0&gt; 标注是 &lt;l1&gt;@group large&lt;/l1&gt; 的别名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@medium&lt;/l0&gt; annotation is an alias for &lt;l1&gt;@group medium&lt;/l1&gt;. A medium test must not depend on a test marked as &lt;l2&gt;@large&lt;/l2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073244Z" creationid="Wynn" creationdate="20150302T073244Z">
        <seg>&lt;l0&gt;@medium&lt;/l0&gt; 标注是 &lt;l1&gt;@group medium&lt;/l1&gt; 的别名。中型(medium)测试不能依赖于标记为 &lt;l2&gt;@large&lt;/l2&gt; 的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@requires&lt;/l0&gt; annotation can be used skip tests when common preconditions, like the PHP Version or installed extensions, are not met.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073617Z" creationid="Wynn" creationdate="20150302T073617Z">
        <seg>&lt;l0&gt;@requires&lt;/l0&gt; 标注用于在常见前提条件（例如 PHP 版本或所安装的扩展）不满足时跳过测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@small&lt;/l0&gt; annotation is an alias for &lt;l1&gt;@group small&lt;/l1&gt;. A small test must not depend on a test marked as &lt;l2&gt;@medium&lt;/l2&gt; or &lt;l3&gt;@large&lt;/l3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T055148Z" creationid="Wynn" creationdate="20150303T055148Z">
        <seg>&lt;l0&gt;@small&lt;/l0&gt; 标注是 &lt;l1&gt;@group small&lt;/l1&gt; 的别名。小型(small)测试不能依赖于标记为 &lt;l2&gt;@medium&lt;/l2&gt; 或 &lt;l3&gt;@large&lt;/l3&gt; 的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;@uses&lt;/l0&gt; annotation specifies code which will be executed by a test, but is not intended to be covered by the test. A good example is a value object which is necessary for testing a unit of code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T055928Z" creationid="Wynn" creationdate="20150303T055928Z">
        <seg>&lt;l0&gt;@uses&lt;/l0&gt; 标注用来指明那些将会在测试中执行到但同时又不打算让其被测试所覆盖的代码。在对代码单元进行测试时所必须的值对象就是个很好的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;PHPUnit_Extensions_Selenium2TestCase&lt;/l0&gt; test case lets you use the WebDriver API (partially implemented).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T062255Z" creationid="Wynn" creationdate="20150327T062210Z">
        <seg>通过 &lt;l0&gt;PHPUnit_Extensions_Selenium2TestCase&lt;/l0&gt; 测试用例能够使用 WebDriver API（部分实现）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; test case extension implements the client/server protocol to talk to Selenium Server as well as specialized assertion methods for web testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063147Z" creationid="Wynn" creationdate="20150327T063147Z">
        <seg>&lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt;  测试用例扩展实现了客户端/服务器端协议来与 Selenium Server 沟通，同时还为 web 测试实现了一些特殊的断言方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;PHPUnit_Extensions_Story_TestCase&lt;/l0&gt; class adds a story framework that faciliates the definition of a &lt;u1&gt;Domain-Specific Language&lt;/u1&gt; for Behaviour-Driven Development. It can be installed like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031055Z" creationid="Wynn" creationdate="20150330T031055Z">
        <seg>&lt;l0&gt;PHPUnit_Extensions_Story_TestCase&lt;/l0&gt; 类添加了一个便于为行为驱动开发定义&lt;u1&gt;特定领域语言(Domain-Specific Language)&lt;/u1&gt;的故事框架。他可以这样安装：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;PHPUnit_Framework_Test&lt;/l0&gt; interface is narrow and easy to implement. You can write an implementation of &lt;l1&gt;PHPUnit_Framework_Test&lt;/l1&gt; that is simpler than &lt;l2&gt;PHPUnit_Framework_TestCase&lt;/l2&gt; and that runs &lt;e3&gt;data-driven tests&lt;/e3&gt;, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075612Z" creationid="Wynn" creationdate="20150319T075612Z">
        <seg>&lt;l0&gt;PHPUnit_Framework_Test&lt;/l0&gt;  接口是比较狭义的，十分容易实现。举例来说，你可以自行为 &lt;l1&gt;PHPUnit_Framework_Test&lt;/l1&gt;  编写一个类似于 &lt;l2&gt;PHPUnit_Framework_TestCase&lt;/l2&gt; 的实现来运行&lt;e3&gt;数据驱动测试&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;callback()&lt;/l0&gt; constraint can be used for more complex argument verification. This constraint takes a PHP callback as its only argument. The PHP callback will receive the argument to be verified as its only argument and should return &lt;l1&gt;TRUE&lt;/l1&gt; if the argument passes verification and &lt;l2&gt;FALSE&lt;/l2&gt; otherwise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090014Z" creationid="Wynn" creationdate="20150327T090014Z">
        <seg>&lt;l0&gt;callback()&lt;/l0&gt; 约束用来进行更加复杂的参数校验。此约束的唯一参数是一个 PHP 回调项(callback)。此 PHP 回调项接受需要校验的参数作为其唯一参数，并应当在参数通过校验时返回 &lt;l1&gt;TRUE&lt;/l1&gt;，否则返回 &lt;l2&gt;FALSE&lt;/l2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;charset&lt;/l0&gt;, &lt;l1&gt;highlight&lt;/l1&gt;, &lt;l2&gt;lowUpperBound&lt;/l2&gt;, &lt;l3&gt;highLowerBound&lt;/l3&gt;, &lt;l4&gt;logIncompleteSkipped&lt;/l4&gt; and &lt;l5&gt;showUncoveredFiles&lt;/l5&gt; attributes have no equivalent TextUI test runner option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040232Z" creationid="Wynn" creationdate="20150330T040232Z">
        <seg>&lt;l0&gt;charset&lt;/l0&gt;、&lt;l1&gt;highlight&lt;/l1&gt;、&lt;l2&gt;lowUpperBound&lt;/l2&gt;、&lt;l3&gt;highLowerBound&lt;/l3&gt;、&lt;l4&gt;logIncompleteSkipped&lt;/l4&gt; 和 &lt;l5&gt;showUncoveredFiles&lt;/l5&gt; 属性没有等价的 TextUI 测试执行器选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;createDataSet()&lt;/l0&gt; method creates a Database (DB) DataSet as described in the DataSet implementations section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T015523Z" creationid="Wynn" creationdate="20150318T015523Z">
        <seg>&lt;l0&gt;createDataSet()&lt;/l0&gt; 方法创建一个在数据集实现一节描述过的 Database (DB) DataSet（数据库数据集）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;createQueryTable()&lt;/l0&gt; method can be used to create instances of a QueryTable, give them a result name and SQL query. This is a handy method when it comes to result/table assertions as will be shown in the next section on the Database Assertions API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090348Z" creationid="Wynn" creationdate="20150318T090348Z">
        <seg>&lt;l0&gt;createQueryTable()&lt;/l0&gt; 方法用于创建 QueryTable 的实例，需要为其指定结果名称和所使用的 SQL 查询。当涉及到结果/表的断言（如后面关于数据库断言 API 那一节所示）时，这个方法会很方便。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getDataSet()&lt;/l0&gt; method defines how the initial state of the database should look before each test is executed. The state of a database is abstracted through the concepts DataSet and DataTable both being represented by the interfaces &lt;l1&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/l1&gt; and &lt;l2&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/l2&gt;. The next section will describe in detail how these concepts work and what the benefits are for using them in database testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095640Z" creationid="Wynn" creationdate="20150316T095640Z">
        <seg>&lt;l0&gt;getDataSet()&lt;/l0&gt; 方法定义了在每个测试执行之前的数据库初始状态应该是什么样。数据库的状态通过由 &lt;l1&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/l1&gt; 所代表的 DataSet（数据集）和由 &lt;l2&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/l2&gt;所代表的 DataTable（数据表）这两个概念进行抽象。下一节将详细讲述这些概念是如何运作的以及在数据库测试中使用它们有什么好处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getMock($className)&lt;/l0&gt; method provided by PHPUnit can be used in a test to automatically generate an object that can act as a test double for the specified original class. This test double object can be used in every context where an object of the original class is expected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043813Z" creationid="Wynn" creationdate="20150330T043813Z">
        <seg>PHPUnit 提供的 &lt;l0&gt;getMock($className)&lt;/l0&gt; 方法可以在测试中用来自动生成一个对象，它可以充当指定原版类的测试替身。在任何预期使用原始类的实例对象的上下文中都可以使用这个测试对象类来代替。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getMockBuilder($type)&lt;/l0&gt; method provided by PHPUnit can be used in a test to automatically generate an object that can act as a test double for the specified original type (interface or class name). This test double object can be used in every context where an object of the original type is expected or required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074423Z" creationid="Wynn" creationdate="20150327T074423Z">
        <seg>PHPUnit 提供的 &lt;l0&gt;getMockBuilder($type)&lt;/l0&gt; 方法可以在测试中用来自动生成对象，此对象可以充当任意指定原版类型（接口或类名）的测试替身。在任何预期或要求使用原版类的实例对象的上下文中都可以使用这个测试替身对象来代替。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getMockForAbstractClass()&lt;/l0&gt; method returns a mock object for an abstract class. All abstract methods of the given abstract class are mocked. This allows for testing the concrete methods of an abstract class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091127Z" creationid="Wynn" creationdate="20150327T091127Z">
        <seg>&lt;l0&gt;getMockForAbstractClass()&lt;/l0&gt; 方法返回一个抽象类的仿件对象。给定抽象类的所有抽象方法将都被模仿。这样就能对抽象类的具体方法进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getMockForTrait()&lt;/l0&gt; method returns a mock object that uses a specified trait. All abstract methods of the given trait are mocked. This allows for testing the concrete methods of a trait.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091055Z" creationid="Wynn" creationdate="20150327T091055Z">
        <seg>&lt;l0&gt;getMockForTrait()&lt;/l0&gt; 方法返回一个使用了特定特质(trait)的仿件对象。给定特质的所有抽象方法将都被模仿。这样就能对特质的具体方法进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;getRowCount()&lt;/l0&gt; method is a convienent way to access the number of rows in a table, optionally filtered by an additional where clause. This can be used with a simple equality assertion:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150318T090425Z" creationid="Wynn" creationdate="20150318T090425Z">
        <seg>&lt;l0&gt;getRowCount()&lt;/l0&gt; 方法提供了一种方便的方式来取得表中的行数，并且还可以选择附加一个 WHERE 子句来在计数前对数据行进行过滤。它可以和一个简单的相等断言合用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;lowUpperBound&lt;/l0&gt;, &lt;l1&gt;highLowerBound&lt;/l1&gt;, &lt;l2&gt;logIncompleteSkipped&lt;/l2&gt; and &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; attributes have no equivalent TextUI test runner option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095507Z" creationid="Wynn" creationdate="20150309T095507Z">
        <seg>&lt;l0&gt;lowUpperBound&lt;/l0&gt;、&lt;l1&gt;highLowerBound&lt;/l1&gt;、&lt;l2&gt;logIncompleteSkipped&lt;/l2&gt; 及 &lt;l3&gt;showUncoveredFiles&lt;/l3&gt; 属性没有等价的 TextUI 测试执行器选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;phpVersionOperator&lt;/l0&gt; attribute is optional and defaults to &lt;l1&gt;&gt;=&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T090249Z" creationid="Wynn" creationdate="20150309T090249Z">
        <seg>&lt;l0&gt;phpVersionOperator&lt;/l0&gt; 属性是可选的，其默认值为 &lt;l1&gt;&gt;=&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;setUp()&lt;/l0&gt; and &lt;l1&gt;tearDown()&lt;/l1&gt; template methods are run once for each test method (and on fresh instances) of the test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081131Z" creationid="Wynn" creationdate="20150319T081131Z">
        <seg> 测试类的每个测试方法都会运行一次 &lt;l0&gt;setUp()&lt;/l0&gt; 和 &lt;l1&gt;tearDown()&lt;/l1&gt; 模板方法（同时，每个测试方法都是在一个全新的测试类实例上运行的）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;with()&lt;/l0&gt; method can take any number of arguments, corresponding to the number of arguments to the method being mocked. You can specify more advanced constraints on the method's arguments than a simple match.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085534Z" creationid="Wynn" creationdate="20150327T085534Z">
        <seg>&lt;l0&gt;with()&lt;/l0&gt; 方法可以携带任何数量的参数，对应于被模仿的方法的参数数量。可以对方法的参数指定更加高等的约束而不仅是简单的匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;l0&gt;withConsecutive()&lt;/l0&gt; method can take any number of arrays of arguments, depending on the calls you want to test against. Each array is a list of constraints corresponding to the arguments of the method being mocked, like in &lt;l1&gt;with()&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085637Z" creationid="Wynn" creationdate="20150327T085637Z">
        <seg>&lt;l0&gt;withConsecutive()&lt;/l0&gt; 方法可以接受任意多个数组作为参数，具体数量取决于欲测试的调用。每个数组都都是对被仿方法的相应参数的一组约束，就像 &lt;l1&gt;with()&lt;/l1&gt; 中那样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;Doctrine 2 project&lt;/u0&gt;'s test suite, for example, currently has a test suite of about 1000 tests where nearly half of them accesses the database and still runs in 15 seconds against a MySQL database on a standard desktop computer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065200Z" creationid="Wynn" creationdate="20150313T065121Z">
        <seg>以 &lt;u0&gt;Doctrine 2 &lt;/u0&gt; 为例，此项目的测试套件目前包含了大约1000个测试，其中将近一半访问了数据库。但是在一台安装了MySQL的普通的台式机上，整个测试套件依然能在15秒钟内跑完。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;JavaScript Object Notation (JSON)&lt;/u0&gt; is a lightweight data-interchange format. The following example shows the JSON messages generated for the tests in &lt;l1&gt;ArrayTest&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101512Z" creationid="Wynn" creationdate="20150319T101512Z">
        <seg>&lt;u0&gt;JavaScript 对象表示法 (JSON)&lt;/u0&gt;是轻量级的数据交换格式。下面的例子展示了 &lt;l1&gt;ArrayTest&lt;/l1&gt; 中的测试所生成的 JSON 讯息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt; is Perl's simple text-based interface between testing modules. The following example shows the TAP logfile generated for the tests in &lt;l1&gt;ArrayTest&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101220Z" creationid="Wynn" creationdate="20150319T101220Z">
        <seg>&lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt;  是 Perl 与测试模块之间所使用的简单的基于文本的接口。下面的例子展示了 &lt;l1&gt;ArrayTest&lt;/l1&gt; 中的测试所生成的 TAP 日志文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;openssl&lt;/u0&gt; extension is required for using the &lt;l1&gt;--self-update&lt;/l1&gt; feature of the PHAR.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095136Z" creationid="Wynn" creationdate="20150319T095136Z">
        <seg>要使用 PHAR 的 &lt;l1&gt;--self-update&lt;/l1&gt; 功能需要有 &lt;u0&gt;openssl&lt;/u0&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;phar&lt;/u0&gt; extension is required for using PHP Archives (PHAR).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095059Z" creationid="Wynn" creationdate="20150319T095059Z">
        <seg>要使用 PHP档案包(PHAR)需要有 &lt;u0&gt;phar&lt;/u0&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;phar&lt;/u0&gt; extension is required for using PHPUnit from a PHP Archive (PHAR). The &lt;u1&gt;openssl&lt;/u1&gt; extension is required for the &lt;l2&gt;--self-update&lt;/l2&gt; functionality of PHPUnit's PHAR to work. You need to configure &lt;l3&gt;suhosin.executor.include.whitelist = phar&lt;/l3&gt; if you are using the &lt;u4&gt;Suhosin&lt;/u4&gt; extension and would like to use PHPUnit from a PHP Archive (PHAR).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061840Z" creationid="Wynn" creationdate="20150330T061840Z">
        <seg>要以 PHP 档案包(PHAR)方式使用 PHPUnit，需要 &lt;u0&gt;phar&lt;/u0&gt; 扩展。PHPUnit 的 PHAR 的 &lt;l2&gt;--self-update&lt;/l2&gt;  功能需要 &lt;u1&gt;openssl&lt;/u1&gt; 扩展才能工作。如果使用了 &lt;u4&gt;Suhosin&lt;/u4&gt; 扩展并同时希望以 PHP 档案包(PHAR)方式使用 PHPUnit，需要配置 &lt;l3&gt;suhosin.executor.include.whitelist = phar&lt;/l3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;u0&gt;phar&lt;/u0&gt; extension is required for using PHPUnit from a PHP Archive (PHAR). You need to configure &lt;l1&gt;suhosin.executor.include.whitelist = phar&lt;/l1&gt; if you are using the &lt;u2&gt;Suhosin&lt;/u2&gt; extension and would like to use PHPUnit from a PHP Archive (PHAR).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041602Z" creationid="Wynn" creationdate="20150330T041602Z">
        <seg>要以 PHP 档案包(PHAR)方式使用 PHPUnit，需要 &lt;u0&gt;phar&lt;/u0&gt; 扩展。如果使用了 &lt;u2&gt;Suhosin&lt;/u2&gt; 扩展并同时希望以 PHP 档案包(PHAR)方式使用 PHPUnit，需要配置 &lt;l1&gt;suhosin.executor.include.whitelist = phar&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The BankAccount class with Design-by-Contract assertions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050427Z" creationid="Wynn" creationdate="20150330T050427Z">
        <seg>带有契约式设计断言的 BankAccount 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The BowlingGameTest class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043710Z" creationid="Wynn" creationdate="20150330T043710Z">
        <seg>BowlingGameTest 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Calculator class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043143Z" creationid="Wynn" creationdate="20150330T043143Z">
        <seg>Calculator 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Calculator class with @assert annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043415Z" creationid="Wynn" creationdate="20150330T043415Z">
        <seg>带有 @assert 标注的 Calculator 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Command-Line Test Runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092647Z" creationid="Wynn" creationdate="20150327T092647Z">
        <seg>命令行测试执行器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Connection API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080134Z" creationid="Wynn" creationdate="20150317T080134Z">
        <seg>数据库连接 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CsvFileIterator class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102322Z" creationid="Wynn" creationdate="20150327T102322Z">
        <seg>CsvFileIterator 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The DbUnit extension considerably simplifies the setup of a database for testing purposes and allows you to verify the contents of a database after performing a series of operations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081558Z" creationid="Wynn" creationdate="20150310T081558Z">
        <seg>DbUnit 扩展大大简化了为测试设置数据库的操作，并且可以在对数据执行了一系列操作之后验证数据库的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PHPUnit Skeleton Generator is a tool that can generate skeleton test classes from production code classes and vice versa. It can be installed using the following command:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043117Z" creationid="Wynn" creationdate="20150330T043117Z">
        <seg> PHPUnit 骨架生成器(Skeleton Generator)是用来从成品代码类中生成骨架测试类（或反之）的工具。可以用如下命令安装：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PHPUnit command-line test runner can be invoked through the &lt;f0&gt;phpunit&lt;/f0&gt; command. The following code shows how to run tests with the PHPUnit command-line test runner:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092659Z" creationid="Wynn" creationdate="20150327T092659Z">
        <seg>PHPUnit 命令行测试执行器可通过 &lt;f0&gt;phpunit&lt;/f0&gt; 命令调用。下面的代码展示了如何用 PHPUnit 命令行测试执行器来运行测试：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PHPUnit_Framework_Constraint_IsTrue class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T065808Z" creationid="Wynn" creationdate="20150319T065808Z">
        <seg>PHPUnit_Framework_Constraint_IsTrue  类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PHPUnit_Selenium package is included in the PHAR distribution of PHPUnit. It can be installed via Composer by adding the following &lt;l0&gt;"require-dev"&lt;/l0&gt; dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T033204Z" creationid="Wynn" creationdate="20150327T033204Z">
        <seg>PHPUnit 的 PHAR 分发中已经包含了 PHPUnit_Selenium 组件包。若要通过 Composer 安装此组件包，添加如下 &lt;l0&gt;"require-dev"&lt;/l0&gt; 依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The RepeatedTest Decorator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073413Z" creationid="Wynn" creationdate="20150319T073413Z">
        <seg>RepeatedTest 修饰器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Replacement DataSet is a decorator for an existing dataset and allows you to replace values in any column of the dataset by another replacement value. To get our guestbook example working with NULL values we specify the file like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075127Z" creationid="Wynn" creationdate="20150317T075127Z">
        <seg>Replacement DataSet 是已有数据集的修饰器(decorator)，能够将数据集中任意列的值替换为其他替代值。为了让留言本的例子能够处理 NULL 值，首先指定类似这样的文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The SubSection &lt;q0&gt;Use your own Abstract Database TestCase&lt;/q0&gt; shows how you can prevent this error from happening by using a single cached PDO instance in all your tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042547Z" creationid="Wynn" creationdate="20150319T042547Z">
        <seg>子章节 &lt;q0&gt;使用你自己的抽象数据库 TestCase 类&lt;/q0&gt;展示了如何通过在所有测试中使用单个PDO实例缓存来防止发生此错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Subject and Observer classes that are part of the System under Test (SUT)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084803Z" creationid="Wynn" creationdate="20150327T084803Z">
        <seg>被测系统(SUT)中 Subject 与 Observer 类的代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML Configuration File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T073740Z" creationid="Wynn" creationdate="20150309T073740Z">
        <seg>XML 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML configuration above corresponds to attaching the &lt;l0&gt;$listener&lt;/l0&gt; object (see below) to the test execution:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075318Z" creationid="Wynn" creationdate="20150310T075318Z">
        <seg>以上 XML 配置对应于将 &lt;l0&gt;$listener&lt;/l0&gt; 对象（见下文）附到测试执行过程上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML configuration above corresponds to invoking the TextUI test runner with the following options:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095522Z" creationid="Wynn" creationdate="20150309T093612Z">
        <seg>以上 XML 配置对应于以如下选项调用 TextUI 测试执行器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML configuration above corresponds to the default behaviour of the TextUI test runner documented in &lt;x0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T095301Z" creationid="Wynn" creationdate="20150309T081234Z">
        <seg>以上 XML 配置对应于在&lt;x0/&gt;描述过的 TextUI 测试执行器的默认行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML configuration above corresponds to the following PHP code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075658Z" creationid="Wynn" creationdate="20150310T075658Z">
        <seg>以上 XML 配置对应于如下 PHP 代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML format for code coverage information logging produced by PHPUnit is loosely based upon the one used by &lt;u0&gt; Clover&lt;/u0&gt;. The following example shows the XML logfile generated for the tests in &lt;l1&gt;BankAccountTest&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101651Z" creationid="Wynn" creationdate="20150319T101651Z">
        <seg>PHPUnit 所生成的 XML 格式代码覆盖率信息日志记录不严格地基于 &lt;u0&gt; Clover&lt;/u0&gt;.  所使用的 XML 日志的。下面的例子展示了 &lt;l1&gt;BankAccountTest&lt;/l1&gt; 中的测试所生成的 XML 日志文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The XML logfile for test results produced by PHPUnit is based upon the one used by the &lt;u0&gt;JUnit task for Apache Ant&lt;/u0&gt;. The following example shows the XML logfile generated for the tests in &lt;l1&gt;ArrayTest&lt;/l1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101025Z" creationid="Wynn" creationdate="20150319T101025Z">
        <seg>PHPUnit 所生成的测试结果 XML 日志文件是基于 &lt;u0&gt;JUnit task for Apache Ant&lt;/u0&gt; 所使用的 XML 日志的。下面的例子展示了 &lt;l1&gt;ArrayTest&lt;/l1&gt; 中的测试所生成的 XML 日志文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The YAML Dataset has no factory method on the Database TestCase currently, so you have to instantiate it manually:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074330Z" creationid="Wynn" creationdate="20150317T074330Z">
        <seg>目前，数据库 TestCase 中没有 YAML DataSet 的工厂方法，因此需要手工进行实例化：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The adjusted &lt;e0&gt;expectedBook.xml&lt;/e0&gt; Flat XML file would probably have to look like the following to make the assertion pass:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042147Z" creationid="Wynn" creationdate="20150319T042147Z">
        <seg>为了让断言能得以通过， Flat XML 文件 &lt;e0&gt;expectedBook.xml&lt;/e0&gt; 需要调整成大致类似这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotation can be used on the class and the method level and will override any &lt;l0&gt;@covers&lt;/l0&gt; tags.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091801Z" creationid="Wynn" creationdate="20150228T091801Z">
        <seg>这个标注可以用在类级别或者方法级别，并且会覆盖掉任何 &lt;l0&gt;@covers&lt;/l0&gt; 标注。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The approach above has several drawbacks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092020Z" creationid="Wynn" creationdate="20150327T092020Z">
        <seg>上面的方法有几个缺点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The assertTrue() and isTrue() methods of the PHPUnit_Framework_Assert class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042915Z" creationid="Wynn" creationdate="20150319T042915Z">
        <seg>PHPUnit_Framework_Assert 类的 assertTrue() 与 isTrue() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The attributes of the &lt;l0&gt;&lt;phpunit&gt;&lt;/l0&gt; element can be used to configure PHPUnit's core functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T074233Z" creationid="Wynn" creationdate="20150309T074233Z">
        <seg>&lt;l0&gt;&lt;phpunit&gt;&lt;/l0&gt; 元素的属性用于配置 PHPUnit 的核心功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The backup and restore operations for global variables and static class attributes use &lt;l0&gt;serialize()&lt;/l0&gt; and &lt;l1&gt;unserialize()&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085622Z" creationid="Wynn" creationdate="20150319T085622Z">
        <seg>对全局变量和类的静态属性的备份与还原操作使用了 &lt;l0&gt;serialize()&lt;/l0&gt; 与 &lt;l1&gt;unserialize()&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The backup and restore operations for global variables can be completely disabled for all tests of a test case class like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T060718Z" creationid="Wynn" creationdate="20150228T060718Z">
        <seg>全局变量的备份与还原操作可以对某个测试用例类中的所有测试彻底禁用，像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The backup and restore operations for static attributes of classes can be completely disabled for all tests of a test case class like this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025236Z" creationid="Wynn" creationdate="20150330T025236Z">
        <seg>类的静态属性的备份与还原操作可以对测试用例类的所有测试彻底禁用，像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bank account's balance cannot become negative.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050047Z" creationid="Wynn" creationdate="20150330T050047Z">
        <seg>银行账户的结余不能变成负的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bank account's initial balance must be zero.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050043Z" creationid="Wynn" creationdate="20150330T050043Z">
        <seg>银行账户的初始结余应当是零。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The beauty of testing is found not in the effort but in the efficiency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032034Z" creationid="Wynn" creationdate="20150330T032034Z">
        <seg>测试之美不在力，在乎效率之间也。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The blacklist is pre-filled with all sourcecode files of PHPUnit itself as well as the tests. When the whitelist is empty (default), blacklisting is used. When the whitelist is not empty, whitelisting is used. Each file on the whitelist is added to the code coverage report regardless of whether or not it was executed. All lines of such a file, including those that are not executable, are counted as not executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032739Z" creationid="Wynn" creationdate="20150330T032739Z">
        <seg>在黑名单中，会预先填充进 PHPUnit 自身的所有源代码文件，以及测试本身的所有源代码文件。如果白名单为空（默认情况），将会使用黑名单机制。如果白名单非空，那么将会使用白名单机制。白名单中的每个文件都会加入代码覆盖率报告中，不管它是否被执行到。此类文件的所有行，包括那些非可执行文件，都按未执行进行计数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bonus for that frame is the number of pins knocked down by the next roll.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031455Z" creationid="Wynn" creationdate="20150330T031455Z">
        <seg>本轮的奖励是下一次击球所击倒的球瓶数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bonus for that frame is the value of the next two balls rolled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031512Z" creationid="Wynn" creationdate="20150330T031512Z">
        <seg>本轮的奖励是下两次击球所击倒的球瓶数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class &lt;l0&gt;PHPUnit_Extensions_OutputTestCase&lt;/l0&gt; has been removed. PHPUnit 3.6 issued a deprecation notice when it was used. To see how output can now be tested look into &lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042128Z" creationid="Wynn" creationdate="20150330T042128Z">
        <seg> 类 &lt;l0&gt;PHPUnit_Extensions_OutputTestCase&lt;/l0&gt; 已经移除。在 PHPUnit 3.6 中，用到这个类时会产生一个废弃提示。关于现在该如何测试输出参见 &lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class we want to stub</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074939Z" creationid="Wynn" creationdate="20150327T074939Z">
        <seg>需要对其上桩的类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code communicates its design principles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092505Z" creationid="Wynn" creationdate="20150327T092505Z">
        <seg>代码传达其设计原则。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code contains no redundancies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092508Z" creationid="Wynn" creationdate="20150327T092508Z">
        <seg>代码没有冗余。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code contains the minimal number of classes and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092511Z" creationid="Wynn" creationdate="20150327T092511Z">
        <seg>代码所包含的类和方法的数量降至最低。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code coverage report feature requires the &lt;u0&gt;Xdebug&lt;/u0&gt; (2.1.3 or later) and &lt;u1&gt;tokenizer&lt;/u1&gt; extensions. Generating XML reports requires the &lt;u2&gt;xmlwriter&lt;/u2&gt; extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T094934Z" creationid="Wynn" creationdate="20150319T094934Z">
        <seg>代码覆盖率分析报告功能需要 &lt;u0&gt;Xdebug&lt;/u0&gt; （2.1.3以上）与 &lt;u1&gt;tokenizer&lt;/u1&gt; 扩展。生成 XML 格式的报告需要有 &lt;u2&gt;xmlwriter&lt;/u2&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code coverage report feature requires the &lt;u0&gt;Xdebug&lt;/u0&gt; (2.2.1 or later) and &lt;u1&gt;tokenizer&lt;/u1&gt; extensions. Generating XML reports requires the &lt;u2&gt;xmlwriter&lt;/u2&gt; extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T040922Z" creationid="Wynn" creationdate="20160113T040922Z">
        <seg>代码覆盖率分析报告功能需要 &lt;u0&gt;Xdebug&lt;/u0&gt; （2.2.1以上）与 &lt;u1&gt;tokenizer&lt;/u1&gt; 扩展。生成 XML 格式的报告需要有 &lt;u2&gt;xmlwriter&lt;/u2&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code coverage report for our &lt;l0&gt;BankAccount&lt;/l0&gt; example shows that we do not have any tests yet that call the &lt;l1&gt;setBalance()&lt;/l1&gt;, &lt;l2&gt;depositMoney()&lt;/l2&gt;, and &lt;l3&gt;withdrawMoney()&lt;/l3&gt; methods with legal values. &lt;x4/&gt; shows a test that can be added to the &lt;l5&gt;BankAccountTest&lt;/l5&gt; test case class to completely cover the &lt;l6&gt;BankAccount&lt;/l6&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032602Z" creationid="Wynn" creationdate="20150330T032602Z">
        <seg>对于 &lt;l0&gt;BankAccount&lt;/l0&gt; 这个例子，代码覆盖率报告显示目前没有任何测试以合法值调用 &lt;l1&gt;setBalance()&lt;/l1&gt;、&lt;l2&gt;depositMoney()&lt;/l2&gt; 和 &lt;l3&gt;withdrawMoney()&lt;/l3&gt; 方法。&lt;x4/&gt;展示了一个可以加到 &lt;l5&gt;BankAccountTest&lt;/l5&gt; 测试用例类中来完全覆盖 &lt;l6&gt;BankAccount&lt;/l6&gt; 类的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The commands of Selenium 1 are implemented dynamically via __call. Refer also to &lt;u0&gt;the API docs for PHPUnit_Extensions_SeleniumTestCase_Driver::__call()&lt;/u0&gt; for a list of all the supported methods on the PHP side, along with arguments and return type where available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073707Z" creationid="Wynn" creationdate="20150327T073707Z">
        <seg>Selenium 1 命令是通过 __call 来动态实现的。请查看 &lt;u0&gt;PHPUnit_Extensions_SeleniumTestCase_Driver::__call() 的 API 文档&lt;/u0&gt; 来获取所有 PHP 侧所支持的所有方法的列表以及它们的参数和返回类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The commands of Selenium2TestCase are implemented via __call(). Please refer to &lt;u0&gt;the end-to-end test for PHPUnit_Extensions_Selenium2TestCase&lt;/u0&gt; for a list of every supported feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063112Z" creationid="Wynn" creationdate="20150327T063112Z">
        <seg>Selenium2TestCase 的命令是通过 __call() 来实现的。请参考 &lt;u0&gt;the end-to-end test for PHPUnit_Extensions_Selenium2TestCase&lt;/u0&gt; 以获取所有受支持的特性的列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The complete BankAccount class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050354Z" creationid="Wynn" creationdate="20150330T050354Z">
        <seg>完整的 BankAccount 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The composite DataSet is very useful for aggregating several already existing datasets into a single dataset. When several datasets contain the same table the rows are appended in the specified order. For example if we have two datasets &lt;e0&gt;fixture1.xml&lt;/e0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075425Z" creationid="Wynn" creationdate="20150317T075339Z">
        <seg>Composite DataSet 能将多个已存在的数据集聚合成单个数据集，因此非常有用。如果多个数据集中存在同样的表，其中的数据行将按照指定的顺序进行追加。例如，假设有两个数据集， &lt;e0&gt;fixture1.xml&lt;/e0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The database schema and tables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081958Z" creationid="Wynn" creationdate="20150310T081958Z">
        <seg>数据库和表</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default test name format is the equivalent of using the &lt;l0&gt;__METHOD__&lt;/l0&gt; magic constant inside the test method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093555Z" creationid="Wynn" creationdate="20150327T093555Z">
        <seg>默认的测试名称格式等价于在测试方法内使用 &lt;l0&gt;__METHOD__&lt;/l0&gt; 魔术常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to obtain PHPUnit is to download a &lt;u0&gt;PHP Archive (PHAR)&lt;/u0&gt; that has all required (as well as some optional) dependencies of PHPUnit bundled in a single file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095036Z" creationid="Wynn" creationdate="20150319T095021Z">
        <seg>要获取 PHPUnit，最简单的方法是下载 PHPUnit 的 &lt;u0&gt;PHP 档案包 (PHAR)&lt;/u0&gt;，它将 PHPUnit 所需要的所有必要组件（以及某些可选组件）捆绑在单个文件中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to obtain PHPUnit is to download a &lt;u0&gt;PHP Archive (PHAR)&lt;/u0&gt; that has all required (as well as some optional) dependencies of PHPUnit bundled in a single file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041621Z" creationid="Wynn" creationdate="20150330T041621Z">
        <seg>要获取 PHPUnit，最简单的方法是下载 PHPUnit 的 &lt;u0&gt;PHP Archive (PHAR)&lt;/u0&gt;，它将 PHPUnit 所需要的所有必要组件（以及某些可选组件）捆绑在单个文件中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The effort of implementing the &lt;l0&gt;assertTrue()&lt;/l0&gt; and &lt;l1&gt;isTrue()&lt;/l1&gt; methods as well as the &lt;l2&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/l2&gt; class yields the benefit that &lt;l3&gt;assertThat()&lt;/l3&gt; automatically takes care of evaluating the assertion and bookkeeping tasks such as counting it for statistics. Furthermore, the &lt;l4&gt;isTrue()&lt;/l4&gt; method can be used as a matcher when configuring mock objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070034Z" creationid="Wynn" creationdate="20150319T070034Z">
        <seg>在实现 &lt;l0&gt;assertTrue()&lt;/l0&gt; 和 &lt;l1&gt;isTrue()&lt;/l1&gt; 方法及 &lt;l2&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/l2&gt; 类时所付出的努力带来了一些好处，&lt;l3&gt;assertThat()&lt;/l3&gt; 能够自动负责起断言的评定与任务簿记（例如为了统计目的而对其进行计数）工作。此外， &lt;l4&gt;isTrue()&lt;/l4&gt; 方法还可以在配置仿件对象时用来作为匹配器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example below shows all template methods that are available in a test case class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081239Z" creationid="Wynn" creationdate="20150319T081229Z">
        <seg>下面这个例子中展示了测试用例类中所有可用的模板方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example shown above only works when the original class does not declare a method named "method".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085305Z" creationid="Wynn" creationdate="20150817T085305Z">
        <seg>仅当原始类中不包含名字为“method”的方法时，以上范例才能正常运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The expected message can also be specified as a regular expression using the &lt;l0&gt;@expectedExceptionMessageRegExp&lt;/l0&gt; annotation. This is helpful for situations where a substring is not adequate for matching a given message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072619Z" creationid="Wynn" creationdate="20150302T072607Z">
        <seg>预期讯息也可以通过 &lt;l0&gt;@expectedExceptionMessageRegExp&lt;/l0&gt; 标注以正则表达式来指定。当无法用子串来完成对给定讯息的匹配时，这种方式就非常有用了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The expected message can also be specified as a regular expression. This is helpful for situations where a substring is not adequate for matching a given message.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063027Z" creationid="Wynn" creationdate="20150330T063027Z">
        <seg>预期讯息也可以以正则表达式来指定。当无法用子串来完成对给定讯息的匹配时，这种方式就非常有用了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The expected message can be a substring of the exception Message. This can be useful to only assert that a certain name or parameter that was passed in shows up in the exception and not fixate the whole exception message in the test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072018Z" creationid="Wynn" creationdate="20150302T072018Z">
        <seg>预期讯息可以是异常讯息的子串。在只需要断言传入的特定名称或参数确实出现于异常中时这个特性很有用，这样就无需在测试中关注完整的异常讯息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fifth (optional) parameter can be used to disable the call to the original class' constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044932Z" creationid="Wynn" creationdate="20150330T044932Z">
        <seg>第五（可选）参数可用于禁用对原版类的构造方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file-based datasets and tables are generally used for the initial fixture and to describe the expected state of the database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070803Z" creationid="Wynn" creationdate="20150317T070803Z">
        <seg>基于文件的数据集和表一般用于初始化基境或描述数据库的预期状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fixes for &lt;u0&gt;#552&lt;/u0&gt;, &lt;u1&gt;#573&lt;/u1&gt;, and &lt;u2&gt;#582&lt;/u2&gt; required a change to how relative paths are resolved for PHPUnit's XML configuration file. All relative paths in a configuration file are now resolved relative to that configuration file. When upgrading, you may need to update relative paths for the following configurations &lt;c3&gt;testSuiteLoaderFile&lt;/c3&gt;, &lt;c4&gt;printerFile&lt;/c4&gt;, &lt;c5&gt;testsuites/file&lt;/c5&gt;, and &lt;c6&gt;testsuites/exclude&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101303Z" creationid="Wynn" creationdate="20150327T101204Z">
        <seg>为了修复 &lt;u0&gt;#552&lt;/u0&gt;、&lt;u1&gt;#573&lt;/u1&gt; 和 &lt;u2&gt;#582&lt;/u2&gt;，必须更改 PHPUnit 的 XML 配置文件中对相对路径的解析方式。现在，某个配置文件中所有相对路径都是相对于此配置文件所在路径进行解析的。在升级后，可能需要更新以下配置指令中的相对路径：&lt;c3&gt;testSuiteLoaderFile&lt;/c3&gt;、&lt;c4&gt;printerFile&lt;/c4&gt;、&lt;c5&gt;testsuites/file&lt;/c5&gt; 和 &lt;c6&gt;testsuites/exclude&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The flat xml dataset makes a crucial assumption now, defining that the attributes on the first defined row of a table define the columns of this table. In the previous example this would mean &lt;q0&gt;id&lt;/q0&gt;, &lt;q1&gt;content&lt;/q1&gt;, &lt;q2&gt;user&lt;/q2&gt; and &lt;q3&gt;created&lt;/q3&gt; are columns of the guestbook table. For the second row where &lt;q4&gt;user&lt;/q4&gt; is not defined a NULL would be inserted into the database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071655Z" creationid="Wynn" creationdate="20150317T071655Z">
        <seg>在这里，Flat XML DataSet 做了一个关键假设：一个表的列信息由此表第一行的属性定义决定。在上面这个例子里，这意味着 guestbook 有 &lt;q0&gt;id&lt;/q0&gt;、&lt;q1&gt;content&lt;/q1&gt;、&lt;q2&gt;user&lt;/q2&gt; 和 &lt;q3&gt;created&lt;/q3&gt; 这几个列。第二行中 &lt;q4&gt;user&lt;/q4&gt; 列没有定义，因此将向数据库中插入 NULL 值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The focus of &lt;u0&gt;Behaviour-Driven Development&lt;/u0&gt; is "the language and interactions used in the process of software development. Behavior-driven developers use their native language in combination with the ubiquitous language of &lt;u1&gt;Domain-Driven Design&lt;/u1&gt; to describe the purpose and benefit of their code. This allows the developers to focus on why the code should be created, rather than the technical details, and minimizes translation between the technical language in which the code is written and the domain language spoken by the" domain experts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030943Z" creationid="Wynn" creationdate="20150330T030943Z">
        <seg>&lt;u0&gt;行为驱动开发(Behaviour-Driven Development)&lt;/u0&gt;的焦点是软件开发过程中所使用的语言与交互。行为驱动的开发者使用他们的原生语言配合&lt;u1&gt;领域驱动设计(Domain-Driven Design)&lt;/u1&gt;的普遍语言来描述代码的目的与收益。这使得开发者能够将精力集中于为什么需要创建这些代码，而不是技术细节，并且能最小化编写代码所使用的技术语言和领域专家所使用的领域语言之间的转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following JSON messages were generated for two tests, &lt;l0&gt;testFailure&lt;/l0&gt; and &lt;l1&gt;testError&lt;/l1&gt;, of a test case class named &lt;l2&gt;FailureErrorTest&lt;/l2&gt; and show how failures and errors are denoted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101529Z" creationid="Wynn" creationdate="20150319T101529Z">
        <seg>以下 JSON 讯息是由名为 &lt;l2&gt;FailureErrorTest&lt;/l2&gt; 的测试用例类中的两个测试 &lt;l0&gt;testFailure&lt;/l0&gt; 和 &lt;l1&gt;testError&lt;/l1&gt; 所生成的，展示了失败和错误是如何表示的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following PHP code can be used to configure a list of Selenium RC servers:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041317Z" creationid="Wynn" creationdate="20151222T041317Z">
        <seg>可以用以下 PHP 代码来配置 Selenium RC 服务器列表：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following TAP logfile was generated for two tests, &lt;l0&gt;testFailure&lt;/l0&gt; and &lt;l1&gt;testError&lt;/l1&gt;, of a test case class named &lt;l2&gt;FailureErrorTest&lt;/l2&gt; and shows how failures and errors are denoted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101313Z" creationid="Wynn" creationdate="20150319T101313Z">
        <seg>以下 TAP 日志文件是由名为 &lt;l2&gt;FailureErrorTest&lt;/l2&gt; 的测试用例类中的两个测试 &lt;l0&gt;testFailure&lt;/l0&gt; 和 &lt;l1&gt;testError&lt;/l1&gt; 所生成的，展示了失败和错误是如何表示的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following XML logfile was generated for two tests, &lt;l0&gt;testFailure&lt;/l0&gt; and &lt;l1&gt;testError&lt;/l1&gt;, of a test case class named &lt;l2&gt;FailureErrorTest&lt;/l2&gt; and shows how failures and errors are denoted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101109Z" creationid="Wynn" creationdate="20150319T101109Z">
        <seg>以下 XML 日志文件是由名为 &lt;l2&gt;FailureErrorTest&lt;/l2&gt; 的测试用例类中的两个测试 &lt;l0&gt;testFailure&lt;/l0&gt; 和 &lt;l1&gt;testError&lt;/l1&gt; 所生成的，展示了失败和错误是如何表示的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following conditions will help you to improve the code and design of your project, while using unit tests to verify that the refactoring's transformation steps are, indeed, behavior-preserving and do not introduce errors:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092457Z" creationid="Wynn" creationdate="20150327T092457Z">
        <seg>在使用单元测试来确认重构的转换步骤中确实保持原有行为并且没有引入错误时，以下情况有助于改进项目的编码与设计：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example details how release verification works. We start by downloading &lt;f0&gt;phpunit.phar&lt;/f0&gt; as well as its detached PGP signature &lt;f1&gt;phpunit.phar.asc&lt;/f1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100052Z" creationid="Wynn" creationdate="20150319T100052Z">
        <seg>下面的例子详细说明了如何对发行包进行校验。首先下载 &lt;f0&gt;phpunit.phar&lt;/f0&gt; 和与之对应的单独 PGP 签名 &lt;f1&gt;phpunit.phar.asc&lt;/f1&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example shows how to generate a skeleton test class for a class named &lt;l0&gt;Calculator&lt;/l0&gt; (see &lt;x1/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043208Z" creationid="Wynn" creationdate="20150330T043208Z">
        <seg>下面这个例子展示了如何为名为 &lt;l0&gt;Calculator&lt;/l0&gt; 的类（参见 &lt;x1/&gt;）生成骨架测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following optional packages are available:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100639Z" creationid="Wynn" creationdate="20150319T100639Z">
        <seg>有以下可选组件包可用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The format string may contain the following placeholders:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081654Z" creationid="Wynn" creationdate="20150306T081654Z">
        <seg>格式定义字符串中可以使用如下占位符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The four stages of a database test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065208Z" creationid="Wynn" creationdate="20150313T065123Z">
        <seg>数据库测试的四个阶段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fourth (optional) parameter can be used to specify a class name for the generated test double class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044928Z" creationid="Wynn" creationdate="20150330T044928Z">
        <seg>第四（可选）参数用于指定生成的测试替身类的类名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The game consists of 10 frames.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031309Z" creationid="Wynn" creationdate="20150330T031309Z">
        <seg>一局分为10轮(frame)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The generated BowlingGame class skeleton</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043734Z" creationid="Wynn" creationdate="20150330T043734Z">
        <seg>生成的 BowlingGame 类的骨架</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The goal of using automated tests is to make fewer mistakes. While your code will still not be perfect, even with excellent tests, you will likely see a dramatic reduction in defects once you start automating tests. Automated tests give you justified confidence in your code. You can use this confidence to take more daring leaps in design (Refactoring), get along with your teammates better (Cross-Team Tests), improve relations with your customers, and go home every night with proof that the system is better now than it was this morning because of your efforts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030649Z" creationid="Wynn" creationdate="20150330T030649Z">
        <seg>使用自动化测试的目的是少犯错。虽然说就算有了极好的测试你的代码也仍然无法达到完美，但是一旦开始进行自动化测试，你很可能会发现缺陷显著减少了。自动化测试让你对自己的代码有充分的信心。这种信心将让你能够在设计上做出更大胆的跨越（重构）、同团队成员们合作地更好（跨团队测试）、与客户之间的关系有所改善，并且在每天晚上回家时都能确信，自己的努力使系统比当天早上更好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The handling of NULL values with the flat xml dataset is tedious. A NULL value is different than an empty string value in almost any database (Oracle being an exception), something that is difficult to describe in the flat xml format. You can represent a NULL's value by omitting the attribute from the row specification. If our guestbook would allow anonymous entries represented by a NULL value in the user column, a hypothetical state of the guestbook table could look like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071308Z" creationid="Wynn" creationdate="20150317T071308Z">
        <seg>在 Flat XML DataSet 中，要处理 NULL 值会非常烦。在几乎所有数据库中（Oracle 是个例外），NULL 值和空字符串值是有区别的，这一点在 Flat XML 格式中很难表述。可以在数据行的表述中省略掉对应的属性来表示NULL值。假定上面这个留言本通过在 user 列使用 NULL 值的方式来允许匿名留言，那么 guestbook 表的内容可能是这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ignored lines of code (marked as ignored using the annotations) are counted as executed (if they are executable) and will not be highlighted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070713Z" creationid="Wynn" creationdate="20150309T070713Z">
        <seg>代码中被忽略掉的行（用标注标记为忽略）将会计为已执行（如果它们是可执行的），并且不会在代码覆盖情况中被高亮标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation for this Array DataSet is simple and straightforward:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074657Z" creationid="Wynn" creationdate="20150317T074657Z">
        <seg>这个数组 DataSet 类的实现是非常简单直接的：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation of the backup and restore operations for global variables and static attributes of classes uses &lt;l0&gt;serialize()&lt;/l0&gt; and &lt;l1&gt;unserialize()&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040404Z" creationid="Wynn" creationdate="20150330T040404Z">
        <seg>对全局变量和类的静态属性的备份与还原操作其实现方案使用了 &lt;l0&gt;serialize()&lt;/l0&gt; 与 &lt;l1&gt;unserialize()&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The limited support for &lt;u0&gt;stubbing and mocking static methods&lt;/u0&gt; that was introduced in PHPUnit 3.5 has been removed. This feature only worked when the stubbed or mocked static method was invoked from another method of the same class. We believe that the limited use of this feature did not justify the increased complexity in the test doubles code generator it incurred. We apologize for any inconvenience this removal may cause and encourage refactoring the code under test to not require this feature for testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101004Z" creationid="Wynn" creationdate="20150327T101004Z">
        <seg>在 PHPUnit 3.5 中引入的&lt;u0&gt;对静态方法进行上桩或模拟&lt;/u0&gt;的有限支持已移除。此功能仅当被上桩或模拟的静态方法是从同一个类其他方法中调用时才能正常工作。我们认为，没有理由为了这个功能的这点有限的用途而在测试替身代码生成器中增加那么多代码复杂度。对这个移除动作我们表示很抱歉，有可能需要重构测试代码以使得不需要此功能来对其进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method you want to test executes a rather large JOIN operation and uses the data to calculate some important results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081319Z" creationid="Wynn" creationdate="20150310T081253Z">
        <seg>待测方法执行了一个相当大的 JOIN 操作，并且得到的数据用于计算某些重要的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common dataset is called Flat XML. It is a very simple xml format where a tag inside the root node &lt;l0&gt;&lt;dataset&gt;&lt;/l0&gt; represents exactly one row in the database. The tags name equals the table to insert the row into and an attribute represents the column. An example for a simple guestbook application could look like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070950Z" creationid="Wynn" creationdate="20150317T070950Z">
        <seg>最常见的一种数据集名叫 Flat XML。这是一种非常简单的 XML 格式，根节点为 &lt;l0&gt;&lt;dataset&gt;&lt;/l0&gt;，根节点下的每个标签就代表数据库中的一行数据。标签的名称就等于表名，而每个属性代表一个列。一个简单的留言本应用程序的例子大致上可能是这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only supported scenario of PHPUnit_Selenium is that of a Selenium 2.x server. The server can be accessed through the classic Selenium RC Api, already present in 1.x, or with the WebDriver API (partially implemented) from PHPUnit_Selenium 1.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032236Z" creationid="Wynn" creationdate="20150327T032236Z">
        <seg>PHPUnit_Selenium 只支持 Selenium 2.x 服务器的脚本。服务器可以通过从 1.x 就提供的传统 Selenium RC API 访问，也可以从 PHPUnit_Selenium 1.2 用 WebDriver API（部分实现）访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The order in which tests are executed can be made explicit:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040432Z" creationid="Wynn" creationdate="20150320T040432Z">
        <seg>可以明确指定测试的执行顺序：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The point of &lt;u0&gt;Test-Driven Development&lt;/u0&gt; is to drive out the functionality the software actually needs, rather than what the programmer thinks it probably ought to have. The way it does this seems at first counterintuitive, if not downright silly, but it not only makes sense, it also quickly becomes a natural and elegant way to develop software.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045846Z" creationid="Wynn" creationdate="20150330T045846Z">
        <seg>&lt;u0&gt;测试驱动开发&lt;/u0&gt;的要点是驱动出软件实际需要的功能，而不是程序员自认为软件应该有的功能。它实现这点的方式初看起来就算不是彻头彻尾的愚蠢也至少是有悖常理，但是它不仅是有道理的，还很快就成为一种自然而又优雅的软件开发方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The possibility to run the database tests against different database targets easily is very important if you are developing on the development machine. If several developers run the database tests against the same database connection you can easily experience test-failures because of race-conditions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T060411Z" creationid="Wynn" creationdate="20150316T101125Z">
        <seg>在开发机上进行开发时能够轻松的针对不同的目标数据库来运行数据库测试显得非常重要。如果多个开发人员在同一个数据库连接上运行数据库测试，很容易因为竞态而导致测试失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The practice of replacing an object with a test double that (optionally) returns configured return values is referred to as &lt;e0&gt;stubbing&lt;/e0&gt;. You can use a &lt;e1&gt;stub&lt;/e1&gt; to "replace a real component on which the SUT depends so that the test has a control point for the indirect inputs of the SUT. This allows the test to force the SUT down paths it might not otherwise execute".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074800Z" creationid="Wynn" creationdate="20150327T074614Z">
        <seg>将对象替换为（可选地）返回配置好的返回值的测试替身的实践方法称为&lt;e0&gt;上桩(stubbing)&lt;/e0&gt;。可以用&lt;e1&gt;桩件(stub)&lt;/e1&gt;来“替换掉被测系统所依赖的实际组件，这样测试就有了对被测系统的间接输入的控制点。这使得测试能强制安排被测系统的执行路径，否则被测系统可能无法执行”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The practice of replacing an object with a test double that verifies expectations, for instance asserting that a method has been called, is referred to as &lt;e0&gt;mocking&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084432Z" creationid="Wynn" creationdate="20150327T084432Z">
        <seg>将对象替换为能验证预期行为（例如断言某个方法必会被调用）的测试替身的实践方法称为&lt;e0&gt;模仿(mocking)&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The previous assertion is helpful, but we surely want to check the actual contents of the table to verify that all the values were written into the correct columns. This can be achieved by a table assertion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T023723Z" creationid="Wynn" creationdate="20150319T023723Z">
        <seg>前面的这个断言很有帮助，但是肯定还想要检验表的实际内容，好核实是否所有值都写到了正确的列中。可以通过表断言来做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The public interface is used internally by the &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; assertion on the Database TestCase to check for dataset quality. From the &lt;l1&gt;IteratorAggregate&lt;/l1&gt; interface the IDataSet inherits the &lt;l2&gt;getIterator()&lt;/l2&gt; method to iterate over all tables of the dataset. The reverse iterator allows PHPUnit to truncate tables opposite the order they were created to satisfy foreign key constraints.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075759Z" creationid="Wynn" creationdate="20150317T075759Z">
        <seg>这些 public 接口在数据库 TestCase 中 &lt;l0&gt;assertDataSetsEqual()&lt;/l0&gt; 断言内使用，用以检测数据集是否相等。IDataSet 中继承自 &lt;l1&gt;IteratorAggregate&lt;/l1&gt; 接口的 &lt;l2&gt;getIterator()&lt;/l2&gt; 方法用于对数据集中的所有表进行迭代。逆序迭代器让 PHPUnit 能够按照与创建时相反的顺序对所有表执行 TRUNCATE 操作，以此来保证满足外键约束。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reason behind this decision is that Selenium 2 is backward compatible and Selenium RC is not maintained anymore.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032440Z" creationid="Wynn" creationdate="20150327T032440Z">
        <seg>这个决定的原因是 Selenium 2 是向后兼容的，而 Selenium RC 已经不再维护了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The return value yielded by a producer is passed "as-is" to its consumers by default. This means that when a producer returns an object a reference to that object is passed to the consumers. When a copy should be used instead of a reference then &lt;c0&gt;@depends clone&lt;/c0&gt; should be used instead of &lt;c1&gt;@depends&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T083531Z" creationid="Wynn" creationdate="20150706T083531Z">
        <seg>默认情况下，生产者所产生的返回值将“原样”传递给相应的消费者。这意味着，如果生产者返回的是一个对象，那么传递给消费者的将是一个指向此对象的引用。如果需要传递对象的副本而非引用，则应当用 &lt;c0&gt;@depends clone&lt;/c0&gt; 替代 &lt;c1&gt;@depends&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same applies to static properties of classes that were newly loaded/declared within a test. They cannot be reset to their originally declared default value after the test, since that value is unknown. Whichever value is set will leak into subsequent tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090524Z" creationid="Wynn" creationdate="20150319T090524Z">
        <seg>同样的情况也发生于测试内部新加载/声明的类的静态属性上。它们也无法在测试结束之后复原为声明时提供的原始默认值，因为无从得知这些默认值。这些被修改过的值会泄漏到后继测试中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The score for a frame is the total number of pins knocked down, plus bonuses for strikes and spares.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031446Z" creationid="Wynn" creationdate="20150330T031446Z">
        <seg>每轮的得分是击倒的球瓶总数加上全中(strike)和补中(spare)带来的奖励。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The section &lt;q0&gt;Using the Database Connection&lt;/q0&gt; explains the API of this interface and how you can make the best use of it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095430Z" creationid="Wynn" creationdate="20150316T095430Z">
        <seg>&lt;q0&gt;使用数据库连接&lt;/q0&gt;一节解说了这个接口的API以及如何充分利用它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The section on Database Assertions will show some more details on how to make use of the Query DataSet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074915Z" creationid="Wynn" creationdate="20150317T074915Z">
        <seg>在关于数据库断言的那一节中有更多关于如何使用 Query DataSet 的细节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The seventh (optional) parameter can be used to disable &lt;l0&gt;__autoload()&lt;/l0&gt; during the generation of the test double class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044952Z" creationid="Wynn" creationdate="20150330T044952Z">
        <seg>第七（可选）参数可用于在测试替身类的生成期间禁用 &lt;l0&gt;__autoload()&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The sixth (optional) parameter can be used to disable the call to the original class' clone constructor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044937Z" creationid="Wynn" creationdate="20150330T044937Z">
        <seg>第六（可选）参数可用于禁用对原版类的克隆构造方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The standard test suite loader will look for the sourcefile in the current working directory and in each directory that is specified in PHP's &lt;l0&gt;include_path&lt;/l0&gt; configuration directive. A class name such as &lt;l1&gt;Project_Package_Class&lt;/l1&gt; is mapped to the source filename &lt;f2&gt;Project/Package/Class.php&lt;/f2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100217Z" creationid="Wynn" creationdate="20150327T100217Z">
        <seg>标准的测试套件加载器将在当前工作目录和 PHP 的 &lt;l0&gt;include_path&lt;/l0&gt; 配置指令中指定的每个目录内查找源文件。诸如 &lt;l1&gt;Project_Package_Class&lt;/l1&gt; 这样的类名对应的源文件名为 &lt;f2&gt;Project/Package/Class.php&lt;/f2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The table name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080047Z" creationid="Wynn" creationdate="20150317T080047Z">
        <seg>表的名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test for the first contract condition now passes, but the tests for the second contract condition fail because we have yet to implement the methods that these tests call.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050228Z" creationid="Wynn" creationdate="20150330T050228Z">
        <seg>针对第一个契约条件的测试现在能够通过了，不过第二个契约条件的测试依然失败，因为尚未实现其所调用的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test is now completely automated. Instead of just &lt;e0&gt;testing&lt;/e0&gt; as we did with our first version, with this version we have an &lt;e1&gt;automated test&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030645Z" creationid="Wynn" creationdate="20150330T030645Z">
        <seg>现在测试完全自动化了。在第一个版本里我们只是简单的&lt;e0&gt;测试&lt;/e0&gt;，而这个版本已经是&lt;e1&gt;自动测试&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test itself is more concise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092201Z" creationid="Wynn" creationdate="20150327T092201Z">
        <seg>测试本身更加简洁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test name for a PHPT test is the filesystem path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093659Z" creationid="Wynn" creationdate="20150327T093659Z">
        <seg>对于 PHPT 测试，其测试名称是文件系统路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test names to match will be in one of the following formats:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093538Z" creationid="Wynn" creationdate="20150327T093538Z">
        <seg>测试名称将以以下格式之一进行匹配：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests are public methods that are named &lt;l0&gt;test*&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101511Z" creationid="Wynn" creationdate="20150327T101511Z">
        <seg>测试都是命名为 &lt;l0&gt;test*&lt;/l0&gt; 的公用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests for a class &lt;l0&gt;Class&lt;/l0&gt; go into a class &lt;l1&gt;ClassTest&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101430Z" creationid="Wynn" creationdate="20150327T101430Z">
        <seg>针对类 &lt;l0&gt;Class&lt;/l0&gt; 的测试写在类 &lt;l1&gt;ClassTest&lt;/l1&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests should not affect each other. If the order in which the tests are run changes, the results of the tests should not change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041108Z" creationid="Wynn" creationdate="20150330T041108Z">
        <seg>不同测试之间应当互不影响。改变测试的运行顺序应当不影响测试的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests should run at the touch of a button and present their results in a clear and unambiguous format.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041050Z" creationid="Wynn" creationdate="20150330T041050Z">
        <seg>测试应当只要点一个按钮就能运行，并且以清晰明确的格式呈现结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests that ensure the second contract condition now pass, too:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050409Z" creationid="Wynn" creationdate="20150330T050409Z">
        <seg>用来确保第二个契约条件的测试现在也能够通过了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The third (optional) parameter may hold a parameter array that is passed to the original class' constructor (which is not replaced with a dummy implementation by default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044919Z" creationid="Wynn" creationdate="20150330T044919Z">
        <seg>第三（可选）参数持有的是传递给原版类的构造函数（默认情况下不会被替换为伪实现）的参数数组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The upgrade should be rather easy and work without any issues as it was tested against all major Open Source frameworks and there was not a single problem for them. Still every project is different and if you did not get around to trying one of the release candidates and have ran into an issue this document might provide some help.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042101Z" creationid="Wynn" creationdate="20150330T042101Z">
        <seg>升级应当是十分简单且不会遭遇任何问题的，因为这个过程已经针对所有主要的开源框架进行过测试并且不存在任何问题。但是每个项目毕竟是各有不同的，如果你已经尝试了某个候选发布版本并且遭遇到了问题，本文档也许能提供一些帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are few good reasons to share fixtures between tests, but in most cases the need to share a fixture between tests stems from an unresolved design problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082008Z" creationid="Wynn" creationdate="20150319T082008Z">
        <seg>有几个好的理由来在测试之间共享基境，但是大部分情况下，在测试之间共享基境的需求都源于某个未解决的设计问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several means to achieve this pre-condition to database testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100039Z" creationid="Wynn" creationdate="20150316T100039Z">
        <seg>有几种方法来达成这个数据库测试的先决条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three different types of datasets/datatables:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070649Z" creationid="Wynn" creationdate="20150317T070649Z">
        <seg>有三种不同类型的 DataSet/DataTable：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three interesting methods on the Connection interface which has to be returned from the &lt;l0&gt;getConnection()&lt;/l0&gt; method on the Database TestCase:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035840Z" creationid="Wynn" creationdate="20150317T080156Z">
        <seg>由数据库 TestCase 中的 &lt;l0&gt;getConnection()&lt;/l0&gt; 方法所返回的连接接口有三个很有意思的方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are three possible values for this option:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T031815Z" creationid="Wynn" creationdate="20150924T031815Z">
        <seg>本选项有三个可能的值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two main clashes between these constraints:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041122Z" creationid="Wynn" creationdate="20150330T041122Z">
        <seg>这些约束条件中有两个主要的矛盾：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a good reason why all the examples on unit testing do not include interactions with the database: these kind of tests are both complex to setup and maintain. While testing against your database you need to take care of the following variables:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082023Z" creationid="Wynn" creationdate="20150310T081946Z">
        <seg>为什么所有单元测试的范例都不包含数据库交互？这里有个很好的理由：这类测试的建立和维护都很复杂。对数据库进行测试时，需要考虑以下这些变数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is another more structured XML dataset, which is a bit more verbose to write but avoids the NULL problems of the Flat XML dataset. Inside the root node &lt;l0&gt;&lt;dataset&gt;&lt;/l0&gt; you can specify &lt;l1&gt;&lt;table&gt;&lt;/l1&gt;, &lt;l2&gt;&lt;column&gt;&lt;/l2&gt;, &lt;l3&gt;&lt;row&gt;&lt;/l3&gt;, &lt;l4&gt;&lt;value&gt;&lt;/l4&gt; and &lt;l5&gt;&lt;null /&gt;&lt;/l5&gt; tags. An equivalent dataset to the previously defined Guestbook Flat XML looks like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072649Z" creationid="Wynn" creationdate="20150317T072649Z">
        <seg>有另外一种更加结构化的 XML DataSet，它写起来有点冗长，但是规避了 Flat XML DataSet 所存在的 NULL 问题。在根节点 &lt;l0&gt;&lt;dataset&gt;&lt;/l0&gt; 内，可以指定 &lt;l1&gt;&lt;table&gt;&lt;/l1&gt;、&lt;l2&gt;&lt;column&gt;&lt;/l2&gt;、 &lt;l3&gt;&lt;row&gt;&lt;/l3&gt;、&lt;l4&gt;&lt;value&gt;&lt;/l4&gt; 和 &lt;l5&gt;&lt;null /&gt;&lt;/l5&gt; 标签。和上面用 Flat XML 所定义的留言本数据集等价的 XML DataSet 如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no Array based DataSet in PHPUnit's Database Extension (yet), but we can implement our own easily. Our guestbook example should look like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074523Z" creationid="Wynn" creationdate="20150317T074510Z">
        <seg>在 PHPUnit 的数据库扩展中，（尚）没有基于数组的 DataSet，不过很容易自行实现之。留言本的例子大致是这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This abstraction is necessary to compare the actual contents of a database against the expected contents. Expectations can be represented as XML, YAML, CSV files or PHP array for example. The DataSet and DataTable interfaces enable the comparison of these conceptually different sources, emulating relational database storage in a semantically similar approach.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084449Z" creationid="Wynn" creationdate="20150817T084449Z">
        <seg>为了能比较实际内容和预期内容，这种抽象是必须的。预期内容可以用诸如 XML、 YAML、 CSV 文件或者 PHP 数组等方式来表达。DataSet 和 DataTable 接口以语义相似的方式模拟关系数据库存储，从而能够对这些概念上完全不同的数据源进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This annotation is especially useful in strict coverage mode where unintentionally covered code will cause a test to fail. See &lt;x0/&gt; for more information regarding strict coverage mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T060112Z" creationid="Wynn" creationdate="20150303T060112Z">
        <seg>在严格覆盖模式中，意外覆盖的代码将导致测试判定为失败，这个标注就显得特别有用。关于严格覆盖模式的更多信息，参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This appendix lists the various assertion methods that are available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T061140Z" creationid="Wynn" creationdate="20150303T061140Z">
        <seg>本附录列举可用的各种断言方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This appendix shows all the varieties of annotations supported by PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T055854Z" creationid="Wynn" creationdate="20150228T055854Z">
        <seg>本附录列出了 PHPUnit 所支持的所有标注种类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This assertion would only pass on exactly one second of the universe though, on &lt;e0&gt;2010–05–01 21:47:08&lt;/e0&gt;. Dates pose a special problem to database testing and we can circumvent the failure by omitting the &lt;q1&gt;created&lt;/q1&gt; column from the assertion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042902Z" creationid="Wynn" creationdate="20150319T042123Z">
        <seg>在整个时间长河中，只有特定的一秒钟内这个断言可以通过评定，在 &lt;e0&gt;2010–05–01 21:47:08&lt;/e0&gt;。在数据库测试中，日期构成了一个特殊的问题。可以从这个断言中省略 &lt;q1&gt;created&lt;/q1&gt; 列来规避失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be used for integration testing. See &lt;x0/&gt; for an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091720Z" creationid="Wynn" creationdate="20150228T091720Z">
        <seg>这可以用于集成测试。例子可参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This file can be used in your Database TestCase by calling the &lt;l0&gt;createMySQLXMLDataSet($filename)&lt;/l0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074215Z" creationid="Wynn" creationdate="20150317T074215Z">
        <seg>可以在数据库 TestCase 中调用 &lt;l0&gt;createMySQLXMLDataSet($filename)&lt;/l0&gt; 方法来使用这个文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has several advantages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092154Z" creationid="Wynn" creationdate="20150327T092154Z">
        <seg>这有几个优点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has the database connection hardcoded in the PDO connection though. PHPUnit has another awesome feature that could make this testcase even more generic. If you use the &lt;u0&gt;XML Configuration&lt;/u0&gt; you could make the database connection configurable per test-run. First let's create a &lt;q1&gt;phpunit.xml&lt;/q1&gt; file in our tests/ directory of the application that looks like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100930Z" creationid="Wynn" creationdate="20150316T100811Z">
        <seg>这个例子里，数据库连接信息硬编码在 PDO 连接里了。PHPUnit 有另外一个绝妙的特性，可以让这个 TestCase 类更加通用。通过 &lt;u0&gt;XML 配置&lt;/u0&gt; 可以为每个测试单独配置数据库连接信息。首先，在应用程序的 tests/ 目录下创建 &lt;q1&gt;phpunit.xml&lt;/q1&gt; 文件，内容大体是这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface also has an assertion that checks if two instances of Table Metadata equal each other, which is used by the data-set equality assertion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T080132Z" creationid="Wynn" creationdate="20150317T080132Z">
        <seg>这个接口还包含有检验两个表的元数据实例是否彼此相等的断言，供数据集相等断言使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is obviously easy to write. Here &lt;l0&gt;&lt;guestbook&gt;&lt;/l0&gt; is the table name where two rows are inserted into each with four columns &lt;q1&gt;id&lt;/q1&gt;, &lt;q2&gt;content&lt;/q2&gt;, &lt;q3&gt;user&lt;/q3&gt; and &lt;q4&gt;created&lt;/q4&gt; with their respective values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071102Z" creationid="Wynn" creationdate="20150317T071102Z">
        <seg>显然，这非常易于编写。在这里，&lt;l0&gt;&lt;guestbook&gt;&lt;/l0&gt; 是表名，这个表内有两行记录，每行有四个列：&lt;q1&gt;id&lt;/q1&gt;、&lt;q2&gt;content&lt;/q2&gt;、&lt;q3&gt;user&lt;/q3&gt; 和 &lt;q4&gt;created&lt;/q4&gt;，以及各自的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is simple, convient AND it solves the NULL issue that the similar Flat XML dataset has. A NULL in YAML is just the column name without no value specified. An empty string is specified as &lt;l0&gt;column1: ""&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074321Z" creationid="Wynn" creationdate="20150317T074321Z">
        <seg>简单方便，同时还解决了和它类似的 FLat XML DataSet 所具有的 NULL 问题。在 YAML 中，只有列名而没有指定值就表示 NULL。空白字符串则这样指定：&lt;l0&gt;column1: ""&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This new XML format is specific to the &lt;u0&gt;MySQL database server&lt;/u0&gt;. Support for it was added in PHPUnit 3.5. Files in this format can be generated using the &lt;u1&gt;&lt;l2&gt;mysqldump&lt;/l2&gt;&lt;/u1&gt; utility. Unlike CSV datasets, which &lt;l3&gt;mysqldump&lt;/l3&gt; also supports, a single file in this XML format can contain data for multiple tables. You can create a file in this format by invoking &lt;l4&gt;mysqldump&lt;/l4&gt; like so:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074155Z" creationid="Wynn" creationdate="20150317T074155Z">
        <seg>这种新的 XML 格式是 &lt;u0&gt;MySQL 数据库服务器&lt;/u0&gt;专用的。PHPUnit 3.5 加入了对这种格式的支持。可以用 &lt;u1&gt;&lt;l2&gt;mysqldump&lt;/l2&gt;&lt;/u1&gt; 工具来生成这种格式的文件。与同样为 &lt;l3&gt;mysqldump&lt;/l3&gt; 所支持的 CSV 数据集不同，这种 XML 格式可以在单个文件中包含多个表的数据。要生成这种格式的文件，可以这样调用 &lt;l4&gt;mysqldump&lt;/l4&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This only happens when using assertEquals or other 'weak' comparison functions on arrays or objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025044Z" creationid="Wynn" creationdate="20150330T025044Z">
        <seg>这种情况只出现在对数组或者对象使用 assertEquals 或其他“弱”比较函数时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This package is included in the PHAR distribution of PHPUnit. It can be installed via Composer by adding the following &lt;l0&gt;"require-dev"&lt;/l0&gt; dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100717Z" creationid="Wynn" creationdate="20150319T100717Z">
        <seg>PHPUnit 的 PHAR 分发中已经包含了此组件包。若要通过 Composer 安装此组件包，添加如下 &lt;l0&gt;"require-dev"&lt;/l0&gt; 依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section lists the various assertion methods that are available.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051322Z" creationid="Wynn" creationdate="20150330T051322Z">
        <seg>本节列举可用的各种断言方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section serves as a collection of minor BC issues that one might run into when upgrading from PHPUnit 3.6 to PHPUnit 3.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042059Z" creationid="Wynn" creationdate="20150330T042059Z">
        <seg>此部分收集了从 PHPUnit 3.6 升级到 PHPUnit 3.7 时可能遭遇的一些小的向后兼容问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section shows noteworthy edge cases that lead to confusing code coverage information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T071524Z" creationid="Wynn" creationdate="20150309T071507Z">
        <seg>本节中展示了一些值得注意的边缘情况，在这些边缘情况中可能出现令人迷惑的代码覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This work is licensed under the Creative Commons Attribution 3.0 Unported License.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035755Z" creationid="Wynn" creationdate="20150309T035755Z">
        <seg>本作品依据 Creative Commons Attribution 3.0 Unported 许可协议进行授权。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tip: Use your own Abstract Database TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100330Z" creationid="Wynn" creationdate="20150316T100330Z">
        <seg>小建议：使用你自己的抽象数据库 TestCase 类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To allow the clean-up and fixture loading functionalities to work the PHPUnit Database Extension requires access to a database connection abstracted across vendors through the PDO library. It is important to note that your application does not need to be based on PDO to use PHPUnit's database extension, the connection is merely used for the clean-up and fixture setup.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095129Z" creationid="Wynn" creationdate="20150316T094722Z">
        <seg>为了让清理与载入基境的功能正常运作，PHPUnit 数据库扩展模块需要用 PDO 库来实现跨供应商抽象访问数据库连接。重要的是要注意到，使用 PHPUnit 的数据库扩展模块并不要求应用程序本身基于PDO，PDO连接仅仅用于清理和建立基境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To download from &lt;l0&gt;https://phar.phpunit.de/&lt;/l0&gt; you need a client with &lt;u1&gt;TLS/SNI support&lt;/u1&gt;, wget 1.14 (or later), for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041700Z" creationid="Wynn" creationdate="20150330T041700Z">
        <seg>要从 &lt;l0&gt;https://phar.phpunit.de/&lt;/l0&gt; 下载，需要&lt;u1&gt;支持 TLS/SNI&lt;/u1&gt;的客户端，例如 wget 1.14（或更高版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To download from &lt;l0&gt;https://phar.phpunit.de/&lt;/l0&gt; you need a client with &lt;u1&gt;TLS/SNI support&lt;/u1&gt;; e.g., wget 1.14 (or later).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095344Z" creationid="Wynn" creationdate="20150319T095344Z">
        <seg>要从 &lt;l0&gt;https://phar.phpunit.de/&lt;/l0&gt; 下载，需要&lt;u1&gt;支持 TLS/SNI&lt;/u1&gt;的客户端，例如 wget 1.14（或更高版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;l0&gt;@expectedExceptionCode&lt;/l0&gt; using the "&lt;l1&gt;@expectedExceptionCode ClassName::CONST&lt;/l1&gt;" syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072446Z" creationid="Wynn" creationdate="20150302T071805Z">
        <seg>为了方便测试并减少冗余，可以用"&lt;l1&gt;@expectedExceptionCode ClassName::CONST&lt;/l1&gt;"这样的语法将指定类常量作为 &lt;l0&gt;@expectedExceptionCode&lt;/l0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt; using the "&lt;l1&gt;@expectedExceptionMessage ClassName::CONST&lt;/l1&gt;" syntax. A sample can be found in &lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T072453Z" creationid="Wynn" creationdate="20150302T072323Z">
        <seg>为了方便测试同时减少冗余，可以用"&lt;l1&gt;@expectedExceptionMessage ClassName::CONST&lt;/l1&gt;"这样的语法将指定类常量作为 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;。在&lt;x2/&gt;中可以看到范例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To globally install the PHAR:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095350Z" creationid="Wynn" creationdate="20150319T095350Z">
        <seg>如果要全局安装 PHAR：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To quickly localize defects, we want our attention to be focussed on relevant failing tests. This is why PHPUnit skips the execution of a test when a depended-upon test has failed. This improves defect localization by exploiting the dependencies between tests as shown in &lt;x0/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101855Z" creationid="Wynn" creationdate="20150327T101855Z">
        <seg>为了快速定位缺陷，我们希望把注意力集中于相关的失败测试上。这就是为什么当某个测试所依赖的测试失败时，PHPUnit 会跳过这个测试。通过利用测试之间的依赖关系，缺陷定位得到了改进，如&lt;x0/&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run all tests for the library we just need to point the PHPUnit command-line test runner to the test directory (see &lt;u0&gt;Chapter 3&lt;/u0&gt; for various, other command-line options):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041206Z" creationid="Wynn" creationdate="20151222T041206Z">
        <seg>要运行这个库的全部测试，只要将 PHPUnit 命令行测试执行器指向测试目录即可 （其余各种命令行选项，参见&lt;u0&gt;第3章&lt;/u0&gt;）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run all tests for the library we just need to point the PHPUnit command-line test runner to the test directory:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035805Z" creationid="Wynn" creationdate="20150320T035805Z">
        <seg>要运行这个库的全部测试，只要将 PHPUnit 命令行测试执行器指向测试目录即可：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run only the tests that are declared in the &lt;l0&gt;CurrencyTest&lt;/l0&gt; test case class in &lt;f1&gt;tests/CurrencyTest.php&lt;/f1&gt; we can use the following command:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035850Z" creationid="Wynn" creationdate="20150320T035850Z">
        <seg>如果只想运行在 &lt;l0&gt;CurrencyTest&lt;/l0&gt; 文件中的 &lt;f1&gt;tests/CurrencyTest.php&lt;/f1&gt; 测试用例类中声明的测试，可以使用如下命令：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To switch back to the old behavior the setting &lt;l0&gt;&lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;&lt;/l0&gt; can be used. If you want the behavior with PHPUnit 3.6. and 3.7. it is possible to use both settings for a while.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042341Z" creationid="Wynn" creationdate="20150330T042341Z">
        <seg>如果需要切换回旧的行为方式，可以使用 &lt;l0&gt;&lt;whitelist processUncoveredFilesFromWhitelist="true"&gt;&lt;/l0&gt;。如果需要同时支持 PHPUnit 3.6 和 3.7，可以同时使用这两个设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To understand the internals of DataSets and DataTables, lets have a look at the interface of a DataSet. You can skip this part if you do not plan to implement your own DataSet or DataTable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075607Z" creationid="Wynn" creationdate="20150317T075607Z">
        <seg>为了理解 DataSet 和 DataTable 的内部实现，让我们来看看 DataSet 的接口。如果没打算自行实现 DataSet 或者 DataTable，可以直接跳过这一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Flat XML dataset effectively when NULL values are relevant the first row of each table must not contain any NULL value and only successive rows are allowed to omit attributes. This can be awkward, since the order of the rows is a relevant factor for database assertions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071818Z" creationid="Wynn" creationdate="20150317T071818Z">
        <seg>要在有 NULL 值的情况下有效地使用 Flat XML Dataset，就必须保证每个表的第一行不包含 NULL 值，只有后继的那些行才能省略属性。这就有点棘手，因为数据行的排列顺序也是数据断言的一个相关因素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Transformed to</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043527Z" creationid="Wynn" creationdate="20150330T043527Z">
        <seg>转换为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092433Z" creationid="Wynn" creationdate="20150319T092433Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, in a project that is developed using an agile process, such as Extreme Programming, the documentation cannot keep up with the frequent changes to the project's design and code. Extreme Programming demands &lt;e0&gt;collective code ownership&lt;/e0&gt;, so all developers need to know how the entire system works. If you are disciplined enough to consequently use "speaking names" for your tests that describe what a class should do, you can use PHPUnit's TestDox functionality to generate automated documentation for your project based on its tests. This documentation gives developers an overview of what each class of the project is supposed to do.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T023612Z" creationid="Wynn" creationdate="20150327T023612Z">
        <seg>通常，在使用了诸如极限编程之类的敏捷流程的项目中，文档往往无法跟上项目设计与代码的频繁变更。极限编程要求&lt;e0&gt;群体代码所有权(collective code ownership)&lt;/e0&gt;，因此所有开发者都需要知道整个系统是如何工作的。如果你足够训练有素，为测试使用了“能说明问题的名称(speaking names)”来描述各个类应当干什么，那么就可以用 PHPUnit 的 TestDox 功能来基于项目的测试生成项目的自动文档。这个文档能够就项目中的各个类应当起什么作用给开发者一份概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding DataSets and DataTables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T060402Z" creationid="Wynn" creationdate="20150317T060402Z">
        <seg>理解 DataSet（数据集）和 DataTable（数据表）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unintentionally Covered Code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031506Z" creationid="Wynn" creationdate="20150327T031334Z">
        <seg>意外的代码覆盖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unit Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025644Z" creationid="Wynn" creationdate="20150330T025644Z">
        <seg>Unit Test （单元测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unit Tests are a vital part of several software development practices and processes such as Test-First Programming, &lt;u0&gt;Extreme Programming&lt;/u0&gt;, and &lt;u1&gt;Test-Driven Development&lt;/u1&gt;. They also allow for &lt;u2&gt;Design-by-Contract&lt;/u2&gt; in programming languages that do not support this methodology with language constructs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045813Z" creationid="Wynn" creationdate="20150330T045813Z">
        <seg>单元测试是一些软件开发实践与流程的至关重要的组成部分，比如测试优先编程(Test-First Programming)、&lt;u0&gt;极限编程(Extreme Programming)&lt;/u0&gt;、&lt;u1&gt;测试驱动开发(Test-Driven Development)&lt;/u1&gt;。它们还使得将&lt;u2&gt;契约式设计(Design-by-Contract)&lt;/u2&gt;应用到语言结构上未支持这套方法的编程语言中成为可能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unit Tests are primarily written as a good practice to help developers identify and fix bugs, to refactor code and to serve as documentation for a unit of software under test. To achieve these benefits, unit tests ideally should cover all the possible paths in a program. One unit test usually covers one specific path in one function or method. However a test method is not necessary an encapsulated, independent entity. Often there are implicit dependencies between test methods, hidden in the implementation scenario of a test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101636Z" creationid="Wynn" creationdate="20150327T101636Z">
        <seg>单元测试主要是作为一种良好实践来编写的，它能帮助开发人员识别并修复 bug、重构代码，还可以看作被测软件单元的文档。要实现这些好处，理想的单元测试应当覆盖程序中所有可能的路径。一个单元测试通常覆盖一个函数或方法中的一个特定路径。但是，测试方法并不一定非要是一个封装良好的独立实体。测试方法之间经常有隐含的依赖关系暗藏在测试的实现方案中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unit testing offers many advantages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092550Z" creationid="Wynn" creationdate="20150327T092550Z">
        <seg>进行单元测试带来了很多好处：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unit tests provide working examples for how to use an API and can significantly aid documentation efforts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092619Z" creationid="Wynn" creationdate="20150327T092619Z">
        <seg>单元测试就如何使用 API 提供了可正常工作的范例，能够大大帮助文档编制工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike with the &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; class, test case classes that extend &lt;l1&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l1&gt; have to provide a &lt;l2&gt;setUp()&lt;/l2&gt; method. This method is used to configure the Selenium Server session. See &lt;x3/&gt; for the list of methods that are available for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063520Z" creationid="Wynn" creationdate="20150327T063520Z">
        <seg>与 &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; 类不同，扩展自 &lt;l1&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l1&gt; 的测试用例类必须提供 &lt;l2&gt;setUp()&lt;/l2&gt; 方法。这个方法用来配置 Selenium Server 会话。&lt;x3/&gt; 中列出了所有用于这方面的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unzip the distribution archive and copy &lt;f0&gt;selenium-server-standalone-2.9.0.jar&lt;/f0&gt; (check the version suffix) to &lt;f1&gt;/usr/local/bin&lt;/f1&gt;, for instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032613Z" creationid="Wynn" creationdate="20150327T032613Z">
        <seg>将分发档解压，然后将 &lt;f0&gt;selenium-server-standalone-2.9.0.jar&lt;/f0&gt;（注意版本后缀） 复制到合适的位置，比如说 &lt;f1&gt;/usr/local/bin&lt;/f1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upgrading</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100909Z" creationid="Wynn" creationdate="20150327T100909Z">
        <seg>升级</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upgrading from PHPUnit 3.7 to PHPUnit 4.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100915Z" creationid="Wynn" creationdate="20150327T100915Z">
        <seg>从 PHPUnit 3.7 升级到 PHPUnit 4.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage example for PHPUnit_Extensions_Selenium2TestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T062943Z" creationid="Wynn" creationdate="20150327T062943Z">
        <seg>PHPUnit_Extensions_Selenium2TestCase 的用法示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage example for PHPUnit_Extensions_SeleniumTestCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063422Z" creationid="Wynn" creationdate="20150327T063422Z">
        <seg>PHPUnit_Extensions_SeleniumTestCase 的用法示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertArrayHasKey()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063343Z" creationid="Wynn" creationdate="20150303T063343Z">
        <seg>assertArrayHasKey() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertArraySubset()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075341Z" creationid="Wynn" creationdate="20150706T075341Z">
        <seg>assertArraySubset() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertClassHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063533Z" creationid="Wynn" creationdate="20150303T063533Z">
        <seg>assertClassHasAttribute() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertClassHasStaticAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T063706Z" creationid="Wynn" creationdate="20150303T063706Z">
        <seg>assertClassHasStaticAttribute() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T064006Z" creationid="Wynn" creationdate="20150303T064006Z">
        <seg>assertContains() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertContains() with $ignoreCase</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T064247Z" creationid="Wynn" creationdate="20150303T064247Z">
        <seg>带有 $ignoreCase 参数的 assertContains() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertContainsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T082255Z" creationid="Wynn" creationdate="20150303T082255Z">
        <seg>assertContainsOnly() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertContainsOnlyInstancesOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T083109Z" creationid="Wynn" creationdate="20150303T083109Z">
        <seg>assertContainsOnlyInstancesOf() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084111Z" creationid="Wynn" creationdate="20150303T084111Z">
        <seg>assertCount() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEmpty()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T084942Z" creationid="Wynn" creationdate="20150303T084942Z">
        <seg>assertEmpty() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEqualXMLStructure()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085126Z" creationid="Wynn" creationdate="20150303T085126Z">
        <seg>assertEqualXMLStructure() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085452Z" creationid="Wynn" creationdate="20150303T085452Z">
        <seg>assertEquals() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEquals() with DOMDocument objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T090100Z" creationid="Wynn" creationdate="20150303T090100Z">
        <seg>assertEquals()应用于 DOMDocument 对象时的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEquals() with arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030507Z" creationid="Wynn" creationdate="20150305T030507Z">
        <seg>assertEquals() 应用于数组时的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEquals() with floats</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T085924Z" creationid="Wynn" creationdate="20150303T085924Z">
        <seg>将assertEquals()用于浮点数时的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertEquals() with objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150303T090214Z" creationid="Wynn" creationdate="20150303T090214Z">
        <seg>assertEquals()应用于对象时的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertFalse()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030654Z" creationid="Wynn" creationdate="20150305T030654Z">
        <seg>assertFalse() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertFileEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030849Z" creationid="Wynn" creationdate="20150305T030849Z">
        <seg>assertFileEquals() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertFileExists()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T030954Z" creationid="Wynn" creationdate="20150305T030954Z">
        <seg>assertFileExists() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertGreaterThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031212Z" creationid="Wynn" creationdate="20150305T031212Z">
        <seg>assertGreaterThan() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertGreaterThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T031316Z" creationid="Wynn" creationdate="20150305T031316Z">
        <seg>assertGreaterThanOrEqual() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertInfinite()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075852Z" creationid="Wynn" creationdate="20150706T075852Z">
        <seg>assertInfinite() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T061502Z" creationid="Wynn" creationdate="20150305T061502Z">
        <seg>assertInstanceOf() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertInternalType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T064146Z" creationid="Wynn" creationdate="20150305T064146Z">
        <seg>assertInternalType() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertJsonFileEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065107Z" creationid="Wynn" creationdate="20150305T065107Z">
        <seg>assertJsonFileEqualsJsonFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertJsonStringEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065243Z" creationid="Wynn" creationdate="20150305T065243Z">
        <seg>assertJsonStringEqualsJsonFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertJsonStringEqualsJsonString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065350Z" creationid="Wynn" creationdate="20150305T065350Z">
        <seg>assertJsonStringEqualsJsonString() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertLessThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065447Z" creationid="Wynn" creationdate="20150305T065447Z">
        <seg>assertLessThan() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertLessThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065530Z" creationid="Wynn" creationdate="20150305T065530Z">
        <seg>assertLessThanOrEqual() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertNan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080047Z" creationid="Wynn" creationdate="20150706T080047Z">
        <seg>assertNan() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertNull()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065623Z" creationid="Wynn" creationdate="20150305T065623Z">
        <seg>assertNull() 的使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertObjectHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150305T065716Z" creationid="Wynn" creationdate="20150305T065716Z">
        <seg>assertObjectHasAttribute() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081345Z" creationid="Wynn" creationdate="20150306T081345Z">
        <seg>assertRegExp() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertSame()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082247Z" creationid="Wynn" creationdate="20150306T082247Z">
        <seg>assertSame() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertSame() with objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082346Z" creationid="Wynn" creationdate="20150306T082346Z">
        <seg>assertSame() 应用于对象时的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertSelectCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053938Z" creationid="Wynn" creationdate="20150330T053938Z">
        <seg>assertSelectCount() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertSelectEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054145Z" creationid="Wynn" creationdate="20150330T054145Z">
        <seg>assertSelectEquals() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertSelectRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054239Z" creationid="Wynn" creationdate="20150330T054239Z">
        <seg>assertSelectRegExp() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertStringEndsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082454Z" creationid="Wynn" creationdate="20150306T082454Z">
        <seg>assertStringEndsWith() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertStringEqualsFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082613Z" creationid="Wynn" creationdate="20150306T082613Z">
        <seg>assertStringEqualsFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertStringMatchesFormat()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T081552Z" creationid="Wynn" creationdate="20150306T081552Z">
        <seg>assertStringMatchesFormat() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertStringMatchesFormatFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082121Z" creationid="Wynn" creationdate="20150306T082121Z">
        <seg>assertStringMatchesFormatFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertStringStartsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T082704Z" creationid="Wynn" creationdate="20150306T082704Z">
        <seg>assertStringStartsWith() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertTag()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054919Z" creationid="Wynn" creationdate="20150330T054919Z">
        <seg>assertTag() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertThat()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083027Z" creationid="Wynn" creationdate="20150306T082959Z">
        <seg>assertThat() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertTrue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T034214Z" creationid="Wynn" creationdate="20150309T034214Z">
        <seg>assertTrue() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertXmlFileEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035249Z" creationid="Wynn" creationdate="20150309T035249Z">
        <seg>assertXmlFileEqualsXmlFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertXmlStringEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035412Z" creationid="Wynn" creationdate="20150309T035412Z">
        <seg>assertXmlStringEqualsXmlFile() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage of assertXmlStringEqualsXmlString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T035634Z" creationid="Wynn" creationdate="20150309T035634Z">
        <seg>assertXmlStringEqualsXmlString() 的用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use a directory of Selenese/HTML files as tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073940Z" creationid="Wynn" creationdate="20150327T073940Z">
        <seg>用包含 Selenese/HTML 文件的目录作为测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use colors in output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062602Z" creationid="Wynn" creationdate="20150330T062602Z">
        <seg>使用彩色输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use colors in output. On Windows, use &lt;u0&gt;ANSICON&lt;/u0&gt; or &lt;u1&gt;ConEmu&lt;/u1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095831Z" creationid="Wynn" creationdate="20150327T095831Z">
        <seg>使用彩色输出。Windows下，用 &lt;u0&gt;ANSICON&lt;/u0&gt; 或 &lt;u1&gt;ConEmu&lt;/u1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useless Tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T031050Z" creationid="Wynn" creationdate="20150327T031050Z">
        <seg>无用测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using @coversDefaultClass to shorten annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T091600Z" creationid="Wynn" creationdate="20150228T091600Z">
        <seg>用 @coversDefaultClass 缩短标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a data provider that returns an Iterator object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102158Z" creationid="Wynn" creationdate="20150327T102158Z">
        <seg>使用返回迭代器对象的数据供给器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a data provider that returns an array of arrays</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102141Z" creationid="Wynn" creationdate="20150327T102141Z">
        <seg>使用返回数组的数组的数据供给器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a data provider with named datasets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090939Z" creationid="Wynn" creationdate="20150817T090939Z">
        <seg>使用带有命名数据集的数据供给器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using an assertion function to test array operations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030217Z" creationid="Wynn" creationdate="20150330T030217Z">
        <seg>使用断言函数测试数组操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using base test listener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070330Z" creationid="Wynn" creationdate="20150319T070330Z">
        <seg>使用测试监听器基类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using print to test array operations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030105Z" creationid="Wynn" creationdate="20150330T030105Z">
        <seg>使用 print 测试数组操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using setUp() to create the stack fixture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081032Z" creationid="Wynn" creationdate="20150319T081032Z">
        <seg>用 setUp() 建立栈的基境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;, &lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; and &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T070611Z" creationid="Wynn" creationdate="20150309T070611Z">
        <seg>使用 &lt;l0&gt;@codeCoverageIgnore&lt;/l0&gt;、&lt;l1&gt;@codeCoverageIgnoreStart&lt;/l1&gt; 与 &lt;l2&gt;@codeCoverageIgnoreEnd&lt;/l2&gt; 标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;l0&gt;@depends&lt;/l0&gt; annotation to express dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101727Z" creationid="Wynn" creationdate="20150327T101727Z">
        <seg>用 &lt;l0&gt;@depends&lt;/l0&gt; 标注来表达依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;, &lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; and &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt; annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102946Z" creationid="Wynn" creationdate="20150327T102946Z">
        <seg>使用 &lt;l0&gt;@expectedExceptionMessage&lt;/l0&gt;、&lt;l1&gt;@expectedExceptionMessageRegExp&lt;/l1&gt; 和 &lt;l2&gt;@expectedExceptionCode&lt;/l2&gt; 标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;l0&gt;phpVersion&lt;/l0&gt; and &lt;l1&gt;phpVersionOperator&lt;/l1&gt; attributes, a required PHP version can be specified. The example below will only add the &lt;f2&gt;/path/to/*Test.php&lt;/f2&gt; files and &lt;f3&gt;/path/to/MyTest.php&lt;/f3&gt; file if the PHP version is at least 5.3.0.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T090224Z" creationid="Wynn" creationdate="20150309T090224Z">
        <seg>可以用 &lt;l0&gt;phpVersion&lt;/l0&gt; 和 &lt;l1&gt;phpVersionOperator&lt;/l1&gt; 属性来指定 PHP 版本需求。在以下例子中，仅当 PHP 版本至少为 5.3.0 时才会将 &lt;f2&gt;/path/to/*Test.php&lt;/f2&gt; 文件与 &lt;f3&gt;/path/to/MyTest.php&lt;/f3&gt; 文件添加到测试套件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;l0&gt;runSelenese($filename)&lt;/l0&gt; method, you can also run a Selenium test from its Selenese/HTML specification. Furthermore, using the static attribute &lt;l1&gt;$seleneseDirectory&lt;/l1&gt;, you can automatically create test objects from a directory that contains Selenese/HTML files. The specified directory is recursively searched for &lt;l2&gt;.htm&lt;/l2&gt; files that are expected to contain Selenese/HTML. &lt;x3/&gt; shows an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073815Z" creationid="Wynn" creationdate="20150327T073815Z">
        <seg>通过使用 &lt;l0&gt;runSelenese($filename)&lt;/l0&gt; 方法，可以从 Selenese/HTML 规格来运行 Selenium 测试。此外，通过使用静态属性 &lt;l1&gt;$seleneseDirectory&lt;/l1&gt;，可以从包含 Selenese/HTML 文件的目录里自动创建测试对象。PHPUnit 会在指定的目录中的递归查找 &lt;l2&gt;.htm&lt;/l2&gt; 文件，并预期这些文件内含 Selenese/HTML。&lt;x3/&gt; 展示了例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the @expectedException annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102814Z" creationid="Wynn" creationdate="20150327T102814Z">
        <seg>使用 @expectedException 标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the @expectedExceptionMessage and @expectedExceptionCode annotations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T051142Z" creationid="Wynn" creationdate="20150330T051142Z">
        <seg>使用 @expectedExceptionMessage 和 @expectedExceptionCode 标注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Composite DataSet we can aggregate both fixture files:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075448Z" creationid="Wynn" creationdate="20150317T075448Z">
        <seg>通过 Composite DataSet 可以把这两个基境文件聚合在一起：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Mock Builder API can be used to configure the generated test double class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075239Z" creationid="Wynn" creationdate="20150327T075239Z">
        <seg>使用可用于配置生成的测试替身类的仿件生成器 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the expectException() method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041306Z" creationid="Wynn" creationdate="20160113T041306Z">
        <seg>使用 expectException() 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually when using PHPUnit your testcases would extend the &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; class in the following way:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T094512Z" creationid="Wynn" creationdate="20150316T094512Z">
        <seg>一般而言，使用 PHPUnit 时，测试用例都是按如下方式扩展自 &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; 类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081730Z" creationid="Wynn" creationdate="20150319T081730Z">
        <seg>变体</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various software metrics exist to measure code coverage:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T061418Z" creationid="Wynn" creationdate="20150309T061340Z">
        <seg>目前存在多种软件衡量标准用于衡量代码覆盖率：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verify outcome</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T065846Z" creationid="Wynn" creationdate="20150313T065846Z">
        <seg>验证结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verify that you can reproduce the defect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092528Z" creationid="Wynn" creationdate="20150327T092528Z">
        <seg>确认能够重现此缺陷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verifying PHPUnit PHAR Releases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100005Z" creationid="Wynn" creationdate="20150319T100005Z">
        <seg>校验 PHPUnit PHAR 发行包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verifying the state of the database after your test has run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082030Z" creationid="Wynn" creationdate="20150310T082030Z">
        <seg>测试运行完毕后验证数据库的状态</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Warning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074541Z" creationid="Wynn" creationdate="20150327T074541Z">
        <seg>警告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can now modify our test-case to look like:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100944Z" creationid="Wynn" creationdate="20150316T100944Z">
        <seg>现在可以修改 TestCase 类了，像这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can now run the database test suite using different configurations from the command-line interface:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T101025Z" creationid="Wynn" creationdate="20150316T101025Z">
        <seg>现在可以从命令行界面以不同的配置来运行数据库测试套件了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We don't have the release manager's public key (&lt;l0&gt;6372C20A&lt;/l0&gt;) in our local system. In order to proceed with the verification we need to retrieve the release manager's public key from a key server. One such server is &lt;f1&gt;pgp.uni-mainz.de&lt;/f1&gt;. The public key servers are linked together, so you should be able to connect to any key server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100218Z" creationid="Wynn" creationdate="20150319T100218Z">
        <seg>在本地系统中没有发行包管理器的公钥(&lt;l0&gt;6372C20A&lt;/l0&gt;)。为了能进行校验，必须从某个密钥服务器上取得发行包管理器的公钥。其中一个服务器是 &lt;f1&gt;pgp.uni-mainz.de&lt;/f1&gt;。所有密钥服务器是链接在一起的，因此连接到任一密钥服务器都可以。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We first use the &lt;l0&gt;getMock()&lt;/l0&gt; method that is provided by the &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; class to set up a mock object for the &lt;l2&gt;Observer&lt;/l2&gt;. Since we give an array as the second (optional) parameter for the &lt;l3&gt;getMock()&lt;/l3&gt; method, only the &lt;l4&gt;update()&lt;/l4&gt; method of the &lt;l5&gt;Observer&lt;/l5&gt; class is replaced by a mock implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T085059Z" creationid="Wynn" creationdate="20150327T085059Z">
        <seg>首先用 &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; 类提供的 &lt;l0&gt;getMock()&lt;/l0&gt; 方法建立 &lt;l2&gt;Observer&lt;/l2&gt; 的仿件对象。由于给出了一个数组做为 &lt;l3&gt;getMock()&lt;/l3&gt; 方法的第二（可选）参数，&lt;l5&gt;Observer&lt;/l5&gt; 类只有 &lt;l4&gt;update()&lt;/l4&gt; 方法会被替换为仿实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have to fix up the Query Table call:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042155Z" creationid="Wynn" creationdate="20150319T042155Z">
        <seg>还得修正一下 QueryTable 的调用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We now factor out the comparison of expected and actual values into a function that raises an Exception when there is a discrepancy (&lt;x0/&gt;). This gives us two benefits: the writing of tests becomes easier and we only get output when something is wrong.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030215Z" creationid="Wynn" creationdate="20150330T030215Z">
        <seg>现在我们把对预期值和实际值进行比较的部分提取出来，成为独立的函数，在二个值存在差异时这个函数会抛出异常（&lt;x0/&gt;）。这有两个好处：编写测试更容易了，并且只在出错时产生输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We now write the minimal amount of code needed for the first test, &lt;l0&gt;testBalanceIsInitiallyZero()&lt;/l0&gt;, to pass. In our example this amounts to implementing the &lt;l1&gt;getBalance()&lt;/l1&gt; method of the &lt;l2&gt;BankAccount&lt;/l2&gt; class, as shown in &lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050213Z" creationid="Wynn" creationdate="20150330T050213Z">
        <seg>现在编写最少量的代码来让第一个测试 &lt;l0&gt;testBalanceIsInitiallyZero()&lt;/l0&gt;能够通过。在这个例子里，这个实现 &lt;l2&gt;BankAccount&lt;/l2&gt; 类的 &lt;l1&gt;getBalance()&lt;/l1&gt; 方法的代码量如&lt;x3/&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We should be able to run any number or combination of tests together. This is a corollary of isolation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041118Z" creationid="Wynn" creationdate="20150330T041118Z">
        <seg>应当能将任意数量的测试以任意组合方式运行。这是相互独立的必然结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We then wrap the Flat XML DataSet into a Replacement DataSet:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075137Z" creationid="Wynn" creationdate="20150317T075137Z">
        <seg>然后将 Flat XML DataSet 包装在 Replacement DataSet 中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want to verify PHPUnit's PHP Archive (&lt;f0&gt;phpunit.phar&lt;/f0&gt;) against its detached signature (&lt;f1&gt;phpunit.phar.asc&lt;/f1&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100125Z" creationid="Wynn" creationdate="20150319T100125Z">
        <seg>用单独的签名(&lt;f0&gt;phpunit.phar&lt;/f0&gt;)对 PHPUnit 的 PHP 档案包(&lt;f1&gt;phpunit.phar.asc&lt;/f1&gt;)进行校验：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We write the tests for the &lt;l0&gt;BankAccount&lt;/l0&gt; class before we write the code for the class itself. We use the contract conditions as the basis for the tests and name the test methods accordingly, as shown in &lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T050113Z" creationid="Wynn" creationdate="20150330T050113Z">
        <seg>在编写 &lt;l0&gt;BankAccount&lt;/l0&gt; 类的实际代码之前先来编写针对它的测试。以合约条件作为测试的基础，并据此的命名测试方法，如&lt;x1/&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What PHPUnit cannot help you with is the fact that database tests are very slow compared to tests not using the database. Depending on how large the interactions with your database are your tests could run a considerable amount of time. However if you keep the amount of data used for each test small and try to test as much code using non-database tests you can easily get away in under a minute even for large test suites.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T064914Z" creationid="Wynn" creationdate="20150313T064914Z">
        <seg>PHPUnit 无法帮你解决的问题是，相对于不使用数据的测试而言，数据库测试是非常慢的。随着数据库交互规模的增大，运行测试可能需要耗费可观的时间。然而，只要保持每个测试所使用的数据量较小并且尽可能用非数据库测试来对代码进行测试，即使很大的测试套件也能轻松在一分钟内跑完。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What PHPUnit cannot help you with is the fact that database tests are very slow compared to tests not using the database. Depending on how large the interactions with your database are your tests could run a considerable amount of time. However, if you keep the amount of data used for each test small and try to test as much code using non-database tests you can easily get away in under a minute even for large test suites.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T084213Z" creationid="Wynn" creationdate="20150817T084213Z">
        <seg>PHPUnit 无法帮你解决的问题是，相对于不使用数据的测试而言，数据库测试是非常慢的。随着数据库交互规模的增大，运行测试可能需要耗费可观的时间。然而，只要保持每个测试所使用的数据量较小并且尽可能用非数据库测试来对代码进行测试，即使很大的测试套件也能轻松在一分钟内跑完。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What about the Database Schema (DDL)?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095937Z" creationid="Wynn" creationdate="20150316T095937Z">
        <seg>数据库构架(DDL)怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What can I do, when I get a &lt;q0&gt;Too much Connections&lt;/q0&gt; Error?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042458Z" creationid="Wynn" creationdate="20150319T042458Z">
        <seg>如果看到 &lt;q0&gt;Too much Connections&lt;/q0&gt; 错误该怎么办？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What follows is necessarily an abbreviated introduction to Test-Driven Development. You can explore the topic further in other books, such as &lt;e0&gt;Test-Driven Development&lt;/e0&gt; &lt;x1/&gt; by Kent Beck or Dave Astels' &lt;e2&gt;A Practical Guide to Test-Driven Development&lt;/e2&gt; &lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045933Z" creationid="Wynn" creationdate="20150330T045933Z">
        <seg>接下来应当是对测试驱动开发的简短介绍。可以在其他书里深入探索这个主题，例如 Kent Beck 写的&lt;e0&gt;《测试驱动开发(Test-Driven Development)》&lt;/e0&gt; &lt;x1/&gt;，或者 Dave Astels 写的&lt;e2&gt;《测试驱动开发实践指南(A Practical Guide to Test-Driven Development)》&lt;/e2&gt; &lt;x3/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What happens when you have two tests with slightly different setups? There are two possibilities:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081808Z" creationid="Wynn" creationdate="20150319T081808Z">
        <seg>如果两个基境建立工作略有不同的测试该怎么办？有两种可能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is a Fixture?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150313T070256Z" creationid="Wynn" creationdate="20150313T070224Z">
        <seg>什么是基境(fixture)？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When &lt;l0&gt;--colors&lt;/l0&gt; is used without any value, &lt;l1&gt;auto&lt;/l1&gt; is the chosen value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150924T034003Z" creationid="Wynn" creationdate="20150924T034003Z">
        <seg>当使用了 &lt;l0&gt;--colors&lt;/l0&gt; 选项但未指定任何值时，将选择 &lt;l1&gt;auto&lt;/l1&gt; 做为其值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a comparison fails PHPUnit creates textual representations of the input values and compares those. Due to that implementation a diff might show more problems than actually exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025036Z" creationid="Wynn" creationdate="20150330T025036Z">
        <seg>当比较失败时，PHPUnit 为输入值建立文本表示，然后以此进行对比。这种实现导致在差异指示中显示出来的问题可能比实际上存在的多。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a test depends on a test that uses data providers, the depending test will be executed when the test it depends upon is successful for at least one data set. The result of a test that uses data providers cannot be injected into a depending test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102437Z" creationid="Wynn" creationdate="20150327T102437Z">
        <seg>如果一个测试依赖于另外一个使用了数据供给器的测试，仅当被依赖的测试至少能在一组数据上成功时，依赖于它的测试才会运行。使用了数据供给器的测试，其运行结果是无法注入到依赖于此测试的其他测试中的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a test has a data provider that uses named sets, each iteration of the data gets the current name appended to the end of the default test name. See &lt;x0/&gt; for an example of named data sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093632Z" creationid="Wynn" creationdate="20150327T093632Z">
        <seg> 当测试拥有使用命名数据集的数据供给器时，数据的每轮迭代都会将当前名称附加在默认测试名称结尾处。命名数据集的例子参见&lt;x0/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a test has a data provider, each iteration of the data gets the current index appended to the end of the default test name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093605Z" creationid="Wynn" creationdate="20150327T093605Z">
        <seg>当测试拥有数据供给器时，数据的每轮迭代都会将其当前索引附加在默认测试名称结尾处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a test is run in a separate process, PHPUnit will attempt to preserve the global state from the parent process by serializing all globals in the parent process and unserializing them in the child process. This can cause problems if the parent process contains globals that are not serializable. To fix this, you can prevent PHPUnit from preserving global state with the &lt;l0&gt;@preserveGlobalState&lt;/l0&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T073451Z" creationid="Wynn" creationdate="20150302T073451Z">
        <seg>在单独的进程中运行测试时，PHPUnit 会尝试保持来自父进程的全局状态（通过在父进程序列化全局状态然后在子进程反序列化的方式）。这当父进程包含非可序列化的全局内容时可能会导致问题。为了修正这种问题，可以用 &lt;l0&gt;@preserveGlobalState&lt;/l0&gt; 标注来禁止 PHPUnit 保持全局状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a test receives input from both a &lt;l0&gt;@dataProvider&lt;/l0&gt; method and from one or more tests it &lt;l1&gt;@depends&lt;/l1&gt; on, the arguments from the data provider will come before the ones from depended-upon tests. The arguments from depended-upon tests will be the same for each data set. See</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T102400Z" creationid="Wynn" creationdate="20150327T102400Z">
        <seg>如果测试同时从 &lt;l0&gt;@dataProvider&lt;/l0&gt; 方法和一个或多个 &lt;l1&gt;@depends&lt;/l1&gt; 测试接收数据，那么来自于数据供给器的参数将先于来自所依赖的测试的。来自于所依赖的测试的参数对于每个数据集都是一样的。参见</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When generating code coverage and using &lt;l0&gt;&lt;whitelist addUncoveredFilesFromWhitelist="true"&gt;&lt;/l0&gt; all uncovered files got included by PHPUnit. This was an issue for people with executable code in those files. PHPUnit will now scan the file and guess what code is executable and what code is not without including it. This might lead to different code coverage reports.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042322Z" creationid="Wynn" creationdate="20150330T042322Z">
        <seg>在生成代码覆盖率时，如果使用了 &lt;l0&gt;&lt;whitelist addUncoveredFilesFromWhitelist="true"&gt;&lt;/l0&gt;，PHPUnit 将会对所有无覆盖的文件进行包含(include)操作。对于这些文件中包含可执行代码的人而言这会是个问题。PHPUnit 现在将扫描文件并在不执行包含操作的情况下尝试猜测确定哪些代码是可执行的哪些代码是不可执行的。这有可能导致代码覆盖率报告有所不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When invoked as shown above, the PHPUnit command-line test runner will look for a &lt;f0&gt;ArrayTest.php&lt;/f0&gt; sourcefile in the current working directory, load it, and expect to find a &lt;l1&gt;ArrayTest&lt;/l1&gt; test case class. It will then execute the tests of that class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092731Z" creationid="Wynn" creationdate="20150327T092731Z">
        <seg>上面这个调用例子中，PHPUnit 命令行测试执行器将在当前工作目录中寻找 &lt;f0&gt;ArrayTest.php&lt;/f0&gt; 源文件并加载之。而在此源文件中应当能找到 &lt;l1&gt;ArrayTest&lt;/l1&gt; 测试用例类，此类中的测试将被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When set to &lt;l0&gt;false&lt;/l0&gt;, the error handler installed by &lt;l1&gt;convertErrorsToExceptions&lt;/l1&gt; will not convert &lt;l2&gt;E_NOTICE&lt;/l2&gt;, &lt;l3&gt;E_USER_NOTICE&lt;/l3&gt;, or &lt;l4&gt;E_STRICT&lt;/l4&gt; errors to exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T081925Z" creationid="Wynn" creationdate="20150309T081850Z">
        <seg>此选项设置为 &lt;l0&gt;false&lt;/l0&gt; 时，由 &lt;l1&gt;convertErrorsToExceptions&lt;/l1&gt; 安插的错误处理函数不会将 &lt;l2&gt;E_NOTICE&lt;/l2&gt;、&lt;l3&gt;E_USER_NOTICE&lt;/l3&gt;、&lt;l4&gt;E_STRICT&lt;/l4&gt; 错误转换为异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When set to &lt;l0&gt;false&lt;/l0&gt;, the error handler installed by &lt;l1&gt;convertErrorsToExceptions&lt;/l1&gt; will not convert &lt;l2&gt;E_WARNING&lt;/l2&gt; or &lt;l3&gt;E_USER_WARNING&lt;/l3&gt; errors to exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T082036Z" creationid="Wynn" creationdate="20150309T081918Z">
        <seg>此选项设置为 &lt;l0&gt;false&lt;/l0&gt; 时，由 &lt;l1&gt;convertErrorsToExceptions&lt;/l1&gt; 安插的错误处理函数不会将 &lt;l2&gt;E_WARNING&lt;/l2&gt; 或 &lt;l3&gt;E_USER_WARNING&lt;/l3&gt; 错误转换为异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When testing a fluent interface, it is sometimes useful to have a stubbed method return a reference to the stubbed object. &lt;x0/&gt; shows how you can use &lt;l1&gt;returnSelf()&lt;/l1&gt; to achieve this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083654Z" creationid="Wynn" creationdate="20150327T083654Z">
        <seg>在用流畅式接口进行测试时，让某个已上桩的方法返回对桩件对象的引用有时会很有用。&lt;x0/&gt;展示了如何用 &lt;l1&gt;returnSelf()&lt;/l1&gt; 来做到这点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When testing that relies on php functions that trigger errors like &lt;l0&gt;fopen&lt;/l0&gt; it can sometimes be useful to use error suppression while testing. This allows you to check the return values by suppressing notices that would lead to a phpunit &lt;l1&gt;PHPUnit_Framework_Error_Notice&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024318Z" creationid="Wynn" creationdate="20150330T024318Z">
        <seg>如果测试依靠会触发错误的 PHP 函数，例如 &lt;l0&gt;fopen&lt;/l0&gt; ，有时候在测试中使用错误抑制符会很有用。通过抑制住错误通知，就能对返回值进行检查，否则错误通知将会导致抛出 &lt;l1&gt;PHPUnit_Framework_Error_Notice&lt;/l1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the first guestbook entry is deleted from the dataset only &lt;q0&gt;id&lt;/q0&gt;, &lt;q1&gt;content&lt;/q1&gt; and &lt;q2&gt;created&lt;/q2&gt; would be columns of the guestbook table, since &lt;q3&gt;user&lt;/q3&gt; is not specified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T071742Z" creationid="Wynn" creationdate="20150317T071742Z">
        <seg>如果从数据集中删掉第一行，因为没有指定 &lt;q3&gt;user&lt;/q3&gt;，guestbook 表拥有的列就只剩下 &lt;q0&gt;id&lt;/q0&gt;、&lt;q1&gt;content&lt;/q1&gt; 和 &lt;q2&gt;created&lt;/q2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the generated output would be long to read PHPUnit will split it up and provide a few lines of context around every difference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025008Z" creationid="Wynn" creationdate="20150330T025008Z">
        <seg>当生成的输出很长而难以阅读时，PHPUnit 将对其进行分割，并在每个差异附近提供少数几行上下文信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the second (optional) parameter is provided, only the methods whose names are in the array are replaced with a configurable test double. The behavior of the other methods is not changed. Providing &lt;l0&gt;NULL&lt;/l0&gt; as the parameter means that no methods will be replaced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T044903Z" creationid="Wynn" creationdate="20150330T044903Z">
        <seg>如果提供了第二个（可选）参数，那么只有名称在数组中的方法会被替换为可配置的测试替身。其他方法的行为不会有所改变。如果以 &lt;l0&gt;NULL&lt;/l0&gt; 作为（第二）参数，意味着不会有方法被替换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the stubbed method call should return a calculated value instead of a fixed one (see &lt;l0&gt;returnValue()&lt;/l0&gt;) or an (unchanged) argument (see &lt;l1&gt;returnArgument()&lt;/l1&gt;), you can use &lt;l2&gt;returnCallback()&lt;/l2&gt; to have the stubbed method return the result of a callback function or method. See &lt;x3/&gt; for an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084053Z" creationid="Wynn" creationdate="20150327T084053Z">
        <seg>如果上桩的方法需要返回计算得到的值而不是固定值（参见 &lt;l0&gt;returnValue()&lt;/l0&gt;）或某个（未改变的）参数（参见 &lt;l1&gt;returnArgument()&lt;/l1&gt;），可以用 &lt;l2&gt;returnCallback()&lt;/l2&gt; 来让上桩的方法返回回调函数或方法的结果。范例参见&lt;x3/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the test execution terminates before the &lt;l0&gt;tearDown()&lt;/l0&gt; method is invoked the directory will stay in the filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092127Z" creationid="Wynn" creationdate="20150327T092127Z">
        <seg>如果测试在 &lt;l0&gt;tearDown()&lt;/l0&gt; 方法被调用之前就终止了，这个目录就会遗留在文件系统中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using a large number of datasets it's useful to name each one with string key instead of default numeric. Output will be more verbose as it'll contain that name of a dataset that breaks a test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T090856Z" creationid="Wynn" creationdate="20150817T090856Z">
        <seg>当使用到大量数据集时，最好逐个用字符串键名对其命名，避免用默认的数字键名。这样输出信息会更加详细些，其中将包含打断测试的数据集所对应的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using custom test listeners as described in &lt;x0/&gt; PHPUnit silently ignored missing test listeners and it was quite hard to debug that issues for the user. Now one autoload call will be triggered trying to locate the class. If your autoloader produces an error when it doesn't find a test listener you might run into an issue here. Removing the listener or making sure it's loaded in your &lt;l1&gt;bootstrap.php&lt;/l1&gt; will solve this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T042216Z" creationid="Wynn" creationdate="20150330T042216Z">
        <seg>当像&lt;x0/&gt;中描述的那样使用自定义测试监听器时，PHPUnit 静默地忽略掉缺失的测试监听器。对于用户来说，这方面的问题极其难于调试。现在，在尝试定位这些类时会触发一次对自动加载(autoload)的调用。如果你所使用的自动加载器在找不到测试监听器时生成一个错误，就可能让你在这里碰到问题。要这个问题，移除这个监听器或者在  &lt;l1&gt;bootstrap.php&lt;/l1&gt; 中确保这个类已被加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we are writing a test in which we cannot (or chose not to) use a real depended-on component (DOC), we can replace it with a Test Double. The Test Double doesn't have to behave exactly like the real DOC; it merely has to provide the same API as the real one so that the SUT thinks it is the real one!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074356Z" creationid="Wynn" creationdate="20150327T074356Z">
        <seg>如果在编写测试时无法使用（或选择不使用）实际的依赖组件(DOC)，可以用测试替身来代替。测试替身不需要和真正的依赖组件有完全一样的的行为方式；他只需要提供和真正的组件同样的 API 即可，这样被测系统就会以为它是真正的组件！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When writing custom assertions it is the best practice to follow how PHPUnit's own assertions are implemented. As you can see in &lt;x0/&gt;, the &lt;l1&gt;assertTrue()&lt;/l1&gt; method is just a wrapper around the &lt;l2&gt;isTrue()&lt;/l2&gt; and &lt;l3&gt;assertThat()&lt;/l3&gt; methods: &lt;l4&gt;isTrue()&lt;/l4&gt; creates a matcher object that is passed on to &lt;l5&gt;assertThat()&lt;/l5&gt; for evaluation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042809Z" creationid="Wynn" creationdate="20150319T042809Z">
        <seg>编写自定义断言时，最佳实践是遵循 PHPUnit 自有断言的实现方式。正如 &lt;x0/&gt;中所示，&lt;l1&gt;assertTrue()&lt;/l1&gt; 方法只是对 &lt;l2&gt;isTrue()&lt;/l2&gt; 和 &lt;l3&gt;assertThat()&lt;/l3&gt; 方法的外包覆：&lt;l4&gt;isTrue()&lt;/l4&gt; 创建了一个匹配器对象，将其传递给 &lt;l5&gt;assertThat()&lt;/l5&gt; 进行评定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you agree on coordinating your activities with the supplier of a package, you can write the tests together. Do this in such a way that the tests reveal as many assumptions as possible. Hidden assumptions are the death of cooperation. With the tests, you document exactly what you expect from the supplied package. The supplier will know the package is complete when all the tests run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024747Z" creationid="Wynn" creationdate="20150327T024747Z">
        <seg>当你愿意和包的提供着协调你的活动时，你们可以共同编写测试。通过这样的方式，测试能够展现出尽可能多的假设。隐藏的假设是在给合作判死刑。利用测试，你精确的将对所提供的包的预期文档化。提供者在所有测试顺利运行时就知道包已经完整了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you are doing Test-Driven Development (see &lt;x0/&gt;) and write your tests before the code that the tests exercise, PHPUnit can help you generate class skeletons from test case classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043555Z" creationid="Wynn" creationdate="20150330T043555Z">
        <seg>在进行测试驱动开发（参见&lt;x0/&gt;）并在编写代码之前先编写其测试时，PHPUnit 能够帮你从测试用例类生成类的骨架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you are using the skeleton generator to generate code based on a class that is declared in a &lt;u0&gt;namespace&lt;/u0&gt; you have to provide the qualified name of the class as well as the path to the source file it is declared in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043256Z" creationid="Wynn" creationdate="20150330T043256Z">
        <seg>如果打算用骨架生成器来为声明在&lt;u0&gt;命名空间&lt;/u0&gt;中的类生成代码，必须提供和其所在的源文件路径一致的类限定名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you are working on a new test case class, you might want to begin by writing empty test methods such as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090907Z" creationid="Wynn" creationdate="20150319T090907Z">
        <seg>开始写新的测试用例类时，可能想从写下空测试方法开始，比如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you are writing tests for existing code, you have to write the same code fragments such as</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043129Z" creationid="Wynn" creationdate="20150330T043129Z">
        <seg>为已存在的代码编写测试时，不得不反复写下类似这样的代码片段：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you document assumptions with tests, you own the tests. The supplier of the package -- who you make assumptions about -- knows nothing about your tests. If you want to have a closer relationship with the supplier of a package, you can use the tests to communicate and coordinate your activities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T024521Z" creationid="Wynn" creationdate="20150327T024521Z">
        <seg>一旦用测试将假设文档化，你就拥有了测试。包的提供者——你做假设的对象——对你的测试一无所知。如果打算与包的提供者有更亲密的关系，可以用测试来沟通与协调你的活动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you first write the test it cannot possibly run, because you are calling on objects and methods that have not been programmed yet. This might feel strange at first, but after a while you will get used to it. Think of Test-First Programming as a pragmatic approach to following the object-oriented programming principle of programming to an interface instead of programming to an implementation: while you are writing the test you are thinking about the interface of the object you are testing -- what does this object look like from the outside. When you go to make the test really work, you are thinking about pure implementation. The interface is fixed by the failing test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045824Z" creationid="Wynn" creationdate="20150330T045824Z">
        <seg>如果首先编写测试，它是无法运行的，因为调用了尚未进行编程的类和方法。在一开始可能会觉得这很诡异，但是很快就会习惯。请将测试优先编程视为一种务实的实践方法，它遵从对接口编程而不是对实现编程的面向对象编程原则：当你编写测试时，你正是在考虑被测对象的接口——这个对象从外部看是什么样的。当考虑如何能让测试真正运作起来是，你所考虑的则是纯粹的实现。那些失败的测试已经确定了接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you get a defect report, your impulse might be to fix the defect as quickly as possible. Experience shows that this impulse will not serve you well; it is likely that the fix for the defect causes another defect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092523Z" creationid="Wynn" creationdate="20150327T092523Z">
        <seg>当看到缺陷报告时，你可能会有尽快修复错误的冲动。经验表明，这种冲动不是好事，因为修复一个缺陷时很可能导致另外一个缺陷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you need to add new functionality to the system, write the tests first. Then, you will be done developing when the test runs. This practice will be discussed in detail in the next chapter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092514Z" creationid="Wynn" creationdate="20150327T092514Z">
        <seg>当需要向系统内添加新的功能时，首先为其编写测试。然后，当测试能够正常运行就标志着开发完成了。下一章将详细讨论这种做法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you need to make a change to the internal structure of the software you are working on to make it easier to understand and cheaper to modify without changing its observable behavior, a test suite is invaluable in applying these so called &lt;u0&gt;refactorings&lt;/u0&gt; safely. Otherwise, you might not notice the system breaking while you are carrying out the restructuring.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092451Z" creationid="Wynn" creationdate="20150327T092433Z">
        <seg>当需要对软件的内部结构进行更改时，你实际上是要在不影响其可见行为的情况下让它更加容易理解、更加易于修改，测试套件对于安全地进行这些所谓的&lt;u0&gt;重构&lt;/u0&gt;而言是非常宝贵的。否则，你可能在重组过程中将系统搞坏而不自知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you realize that it's all about specifying behaviour and not writing tests, your point of view shifts. Suddenly the idea of having a Test class for each of your production classes is ridiculously limiting. And the thought of testing each of your methods with its own test method (in a 1-1 relationship) will be laughable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030825Z" creationid="Wynn" creationdate="20150330T030825Z">
        <seg>当你认识到它完全是关于指定行为而非编写测试时，你的观点就提升了。突然间，为每个生产类编写对应的测试类的想法就变成一种可笑的限制。同时，每个方法都用对应的测试方法（以一一对应关系）来测试的想法也一样变得很可笑。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you set &lt;l0&gt;processUncoveredFilesFromWhitelist="true"&lt;/l0&gt; in your PHPUnit configuration (see &lt;x1/&gt;) then these files will be included by PHP_CodeCoverage to properly calculate the number of executable lines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T033012Z" creationid="Wynn" creationdate="20150330T033012Z">
        <seg>如果在 PHPUnit 配置信息（参见&lt;x1/&gt;）中设置 &lt;l0&gt;processUncoveredFilesFromWhitelist="true"&lt;/l0&gt;，那么所有这些文件将会由 PHP_CodeCoverage  进行包含，并正确计算其可执行行数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you test an object with PHPUnit, you do so only through the object's public interface. Testing based only on publicly visible behaviour encourages you to confront and solve difficult design problems earlier, before the results of poor design can infect large parts of the system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041233Z" creationid="Wynn" creationdate="20150330T041233Z">
        <seg>使用 PHPUnit 测试一个对象时，只能利用对象的公共接口。只基于公共可见行为进行测试，有助于让你差劲的设计造成的后果在系统中广为蔓延之前就尽早面对并解决困难的设计问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When your application interacts with a web service you want to test it without actually interacting with the web service. To make the stubbing and mocking of web services easy, the &lt;l0&gt;getMockFromWsdl()&lt;/l0&gt; can be used just like &lt;l1&gt;getMock()&lt;/l1&gt; (see above). The only difference is that &lt;l2&gt;getMockFromWsdl()&lt;/l2&gt; returns a stub or mock based on a web service description in WSDL and &lt;l3&gt;getMock()&lt;/l3&gt; returns a stub or mock based on a PHP class or interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091257Z" creationid="Wynn" creationdate="20150327T091257Z">
        <seg>当应用程序需要和 web 服务进行交互时，会想要在不与 web 服务进行实际交互的情况下对其进行测试。为了简单地对 web 服务进行上桩或模仿，可以像使用 &lt;l1&gt;getMock()&lt;/l1&gt; （见上文）那样使用 &lt;l0&gt;getMockFromWsdl()&lt;/l0&gt;。唯一的区别是 &lt;l2&gt;getMockFromWsdl()&lt;/l2&gt; 所返回的桩件或者仿件是基于以 WSDL 描述的 web 服务，而 &lt;l3&gt;getMock()&lt;/l3&gt; 返回的桩件或者仿件是基于 PHP 类或接口的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever a test fails PHPUnit tries its best to provide you with as much context as possible that can help to identify the problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024945Z" creationid="Wynn" creationdate="20150330T024945Z">
        <seg>当有测试失败时，PHPUnit 全力提供尽可能多的有助于找出问题所在的上下文信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever you are tempted to type something into a &lt;l0&gt;print&lt;/l0&gt; statement or a debugger expression, write it as a test instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101625Z" creationid="Wynn" creationdate="20150327T101625Z">
        <seg>当你想把一些东西写到 &lt;l0&gt;print&lt;/l0&gt; 语句或者调试表达式中时，别这么做，将其写成一个测试来代替。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While this is very convenient for editing with Excel or OpenOffice, you cannot specify NULL values with the CSV dataset. An empty column will lead to the database default empty value being inserted into the column.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074443Z" creationid="Wynn" creationdate="20150317T074443Z">
        <seg>用 Excel 或者 OpenOffice 来对这种格式进行编辑是非常方便的，但是在 CSV DataSet 中无法指定 NULL 值。给出一个空白列的结果是往这个列中插入数据库的默认空值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whitelist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093722Z" creationid="Wynn" creationdate="20150309T093722Z">
        <seg>Whitelist （白名单）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whitelisting Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151105T065610Z" creationid="Wynn" creationdate="20151105T065314Z">
        <seg>将文件列入白名单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whitelisting Files for Code Coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151105T065546Z" creationid="Wynn" creationdate="20151105T065546Z">
        <seg>Whitelisting Files for Code Coverage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wikipedia</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093350Z" creationid="Wynn" creationdate="20150309T093350Z">
        <seg>Wikipedia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Will PHPUnit (re-)create the database schema for each test?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042325Z" creationid="Wynn" creationdate="20150319T042325Z">
        <seg>PHPUnit 会为每个测试（重新）创建数据库吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095408Z" creationid="Wynn" creationdate="20150319T095408Z">
        <seg>Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without a virtual filesystem such as vfsStream we cannot test the &lt;l0&gt;setDirectory()&lt;/l0&gt; method in isolation from external influence (see &lt;x1/&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091748Z" creationid="Wynn" creationdate="20150327T091748Z">
        <seg>如果不使用诸如 vfsStream 这样的虚拟文件系统，就无法在隔离外部影响的情况下对 &lt;l0&gt;setDirectory()&lt;/l0&gt; 方法进行测试（参见 &lt;x1/&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without the error suppression the test would fail reporting &lt;l0&gt;fopen(/is-not-writeable/file): failed to open stream: No such file or directory&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024350Z" creationid="Wynn" creationdate="20150330T024350Z">
        <seg>如果不使用错误抑制符，此测试将会失败，并报告 &lt;l0&gt;fopen(/is-not-writeable/file): failed to open stream: No such file or directory&lt;/l0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write all the rows in the data-tables into the database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T070633Z" creationid="Wynn" creationdate="20150317T070633Z">
        <seg>将数据集内数据表中的所有行写入数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write an automated test that fails now but will succeed when the defect is fixed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092537Z" creationid="Wynn" creationdate="20150327T092537Z">
        <seg>编写一个目前会失败而缺陷修复后将会成功的自动测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write custom assertions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042657Z" creationid="Wynn" creationdate="20150319T042657Z">
        <seg>编写自定义断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write custom assertions and utility methods in an abstract subclass of &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; and derive your test case classes from that class. This is one of the easiest ways to extend PHPUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042649Z" creationid="Wynn" creationdate="20150319T042649Z">
        <seg>将自定义的断言和工具方法写在 &lt;l0&gt;PHPUnit_Framework_TestCase&lt;/l0&gt; 的一个抽象子类中，然后从这个抽象子类派生你的测试用例类。这是扩展 PHPUnit 的最容易的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Tests for PHPUnit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101401Z" creationid="Wynn" creationdate="20150310T082807Z">
        <seg>编写 PHPUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040011Z" creationid="Wynn" creationdate="20150320T040011Z">
        <seg>XML Configuration （XML 配置）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XML DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072510Z" creationid="Wynn" creationdate="20150317T072510Z">
        <seg>XML DataSet （XML 数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Xdebug</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093351Z" creationid="Wynn" creationdate="20150309T093351Z">
        <seg>Xdebug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Xdebug is not distributed as part of PHPUnit. If you receive a notice while running tests that the Xdebug extension is not loaded, it means that Xdebug is either not installed or not configured properly. Before you can use the code coverage analysis features in PHPUnit, you should read &lt;u0&gt;the Xdebug installation guide&lt;/u0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T060605Z" creationid="Wynn" creationdate="20150309T060605Z">
        <seg>Xdebug 不随 PHPUnit 分发。如果在运行测试时收到了 Xdebug 扩展未加载的提示，就意味着 Xdebug 未安装或者未正确配置。在使用 PHPUnit 的代码覆盖率分析功能之前，需要阅读下 &lt;u0&gt;Xdebug 安装指南&lt;/u0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>YAML DataSet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074228Z" creationid="Wynn" creationdate="20150317T074228Z">
        <seg>YAML DataSet （YAML 数据集）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also assert the result of complex queries with the Query Table approach, just specify a result name with a query and compare it to a dataset:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042215Z" creationid="Wynn" creationdate="20150319T042215Z">
        <seg>利用 QueryTable，也可以对复杂查询的结果作出断言，只需要指定查询以及结果名称，并随后将其与某个数据集进行比较：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also immediately use the PHAR after you have downloaded it, of course:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041702Z" creationid="Wynn" creationdate="20150330T041702Z">
        <seg>当然，也可以下载后直接使用这个 PHAR：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use the approach shown in &lt;x0/&gt; to test exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103328Z" creationid="Wynn" creationdate="20150327T103328Z">
        <seg>可以用 &lt;x0/&gt; 中所示方法来对异常进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can always write more tests. However, you will quickly find that only a fraction of the tests you can imagine are actually useful. What you want is to write tests that fail even though you think they should work, or tests that succeed even though you think they should fail. Another way to think of it is in cost/benefit terms. You want to write tests that will pay you back with information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092423Z" creationid="Wynn" creationdate="20150327T092243Z">
        <seg>你总能编写更多测试。但是很快就会发现，在所有想得出来的测试中只有很小一部分是真正有用的。需要编写的是那些觉得能运作但却失败或觉得必将失败但却成功的测试。另外一种思考方式是从成本/收益的关系上去考量。需要编写的是能够给出反馈信息的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can construct the DataSet on your own:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042304Z" creationid="Wynn" creationdate="20150319T042304Z">
        <seg>也可以自行构造数据集：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a CSV DataSet by calling:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074449Z" creationid="Wynn" creationdate="20150317T074449Z">
        <seg>可以这样创建 CSV DataSet：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a flat xml dataset instance from within your Database TestCase by calling the &lt;l0&gt;createFlatXmlDataSet($filename)&lt;/l0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T072020Z" creationid="Wynn" creationdate="20150317T072020Z">
        <seg>可以在数据库 TestCase 中调用 &lt;l0&gt;createFlatXmlDataSet($filename)&lt;/l0&gt; 方法来创建 Flat XML Dataset 实例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a xml dataset instance from within your Database TestCase by calling the &lt;l0&gt;createXmlDataSet($filename)&lt;/l0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T073014Z" creationid="Wynn" creationdate="20150317T073014Z">
        <seg>可以在数据库 TestCase 中调用 &lt;l0&gt;createXmlDataSet($filename)&lt;/l0&gt; 方法来创建 XML DataSet 实例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can either create a dataset for the complete database as shown in &lt;l0&gt;testGuestbook()&lt;/l0&gt;, or restrict it to a set of specified table names with a whitelist as shown in &lt;l1&gt;testFilteredGuestbook()&lt;/l1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075031Z" creationid="Wynn" creationdate="20150317T075031Z">
        <seg>可以像 &lt;l0&gt;testGuestbook()&lt;/l0&gt; 中那样创建整个数据库所对应的 DataSet，或者像 &lt;l1&gt;testFilteredGuestbook()&lt;/l1&gt; 方法中那样用一个白名单来将 DataSet 限制在若干表名的集合上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can hold your impulse in check by doing the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092526Z" creationid="Wynn" creationdate="20150327T092526Z">
        <seg>下列操作可以帮你压住冲动：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can make use of this by specifying arbitrary queries for your tables, for example restricting rows, column or adding &lt;l0&gt;ORDER BY&lt;/l0&gt; clauses:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074850Z" creationid="Wynn" creationdate="20150317T074850Z">
        <seg>可以在这种用法中为你的表任意指定查询，例如限定行、列，或者加上 &lt;l0&gt;ORDER BY&lt;/l0&gt; 子句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can provide a blacklist of static attributes that are to be excluded from the backup and restore operations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090605Z" creationid="Wynn" creationdate="20150319T090605Z">
        <seg>可以提供黑名单来将静态属性从备份与还原操作中排除出去：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run each test using a set of browsers: Instead of using &lt;l0&gt;setBrowser()&lt;/l0&gt; to set up one browser you declare a &lt;l1&gt;public static&lt;/l1&gt; array named &lt;l2&gt;$browsers&lt;/l2&gt; in your test case class. Each item in this array describes one browser configuration. Each of these browsers can be hosted by different Selenium Server servers. &lt;x3/&gt; shows an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064109Z" creationid="Wynn" creationdate="20150327T064109Z">
        <seg>可以对每个测试都用一组浏览器运行：不要用 &lt;l0&gt;setBrowser()&lt;/l0&gt; 来设定单个浏览器，而是在测试用例类里声明一个名称为&lt;l2&gt;$browsers&lt;/l2&gt; 的 &lt;l1&gt;public static&lt;/l1&gt; 数组。这个数组里的每个项目都描述了一个浏览器配置。这些浏览器可以各自由不同的 Selenium Server 服务器承载。&lt;x3/&gt; 展示了例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;l0&gt;@assert&lt;/l0&gt; annotation in the documentation block of a method to automatically generate simple, yet meaningful tests instead of incomplete test cases. &lt;x1/&gt; shows an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043413Z" creationid="Wynn" creationdate="20150330T043413Z">
        <seg>可以在方法的文档注释块中使用 &lt;l0&gt;@assert&lt;/l0&gt; 标注来让生成器自动生成简单却有意义的测试而非不完整的测试用例。&lt;x1/&gt;展示了一个范例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use PHPUnit to write tests once you are done programming. However, the sooner a test is written after an error has been introduced, the more valuable the test is. So instead of writing tests months after the code is "complete", we can write tests days or hours or minutes after the possible introduction of a defect. Why stop there? Why not write the tests a little before the possible introduction of a defect?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045818Z" creationid="Wynn" creationdate="20150330T045818Z">
        <seg>可以在编程完成之后再用 PHPUnit 来编写测试。然而，在引入错误之后尽早编写测试其价值就更高。因此，与其在编码“完成”之后若干个月才编写测试，不如在可能引入缺陷之后几天、几小时甚至几分钟之内就编写测试。到此为止吗？为何不在可能引入缺陷之前就编写测试呢？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a &lt;e0&gt;mock object&lt;/e0&gt; "as an observation point that is used to verify the indirect outputs of the SUT as it is exercised. Typically, the mock object also includes the functionality of a test stub in that it must return values to the SUT if it hasn't already failed the tests but the emphasis is on the verification of the indirect outputs. Therefore, a mock object is a lot more than just a test stub plus assertions; it is used in a fundamentally different way" (Gerard Meszaros).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150817T085503Z" creationid="Wynn" creationdate="20150817T085503Z">
        <seg>可以用 &lt;e0&gt;仿件对象(mock object)&lt;/e0&gt;“作为观察点来核实被测试系统在测试中的间接输出。通常，仿件对象还需要包括桩件的功能，因为如果测试尚未失败则仿件对象需要向被测系统返回一些值，但是其重点还是在对间接输出的核实上。因此，仿件对象远不止是桩件加断言，它是以一种从根本上完全不同的方式来使用的”(Gerard Meszaros)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a &lt;e0&gt;mock object&lt;/e0&gt; "as an observation point that is used to verify the indirect outputs of the SUT as it is exercised. Typically, the mock object also includes the functionality of a test stub in that it must return values to the SUT if it hasn't already failed the tests but the emphasis is on the verification of the indirect outputs. Therefore, a mock object is lot more than just a test stub plus assertions; it is used a fundamentally different way".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084538Z" creationid="Wynn" creationdate="20150327T084538Z">
        <seg>可以用 &lt;e0&gt;仿件对象(mock object)&lt;/e0&gt;“作为观察点来核实被测试系统在测试中的间接输出。通常，仿件对象还需要包括桩件的功能，因为如果测试尚未失败则仿件对象需要向被测系统返回一些值，但是其重点还是在对间接输出的核实上。因此，仿件对象远不止是桩件加断言，它是以一种从根本上完全不同的方式来使用的。”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the Database (DB) DataSet from the Connection and compare it to a File-Based DataSet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042254Z" creationid="Wynn" creationdate="20150319T042254Z">
        <seg>可以从自数据库连接建立数据库数据集，并将其与基于文件的数据集进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can wrap test cases or test suites in a subclass of &lt;l0&gt;PHPUnit_Extensions_TestDecorator&lt;/l0&gt; and use the Decorator design pattern to perform some actions before and after the test runs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070643Z" creationid="Wynn" creationdate="20150319T070643Z">
        <seg>可以将测试用例或者测试套件包装在 &lt;l0&gt;PHPUnit_Extensions_TestDecorator&lt;/l0&gt; 的子类中并运用 Decorator（修饰器）设计模式来在测试运行前后执行一些动作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do not want to modify considerable amount of test code for little changes in your production code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082244Z" creationid="Wynn" creationdate="20150310T082131Z">
        <seg>你不希望因为生产代码的小变更而需要对测试代码进行数量可观的修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also use the downloaded PHAR file directly:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095359Z" creationid="Wynn" creationdate="20150319T095359Z">
        <seg>也可以直接使用下载的 PHAR 文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to setup test data in (possibly much) more than two tables to get reasonable initial data for the methods you want to test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081456Z" creationid="Wynn" creationdate="20150310T081456Z">
        <seg>为了给待测方法建立合理的初始数据，需要在两个以上（可能远超过）表里设置测试数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You probably know this scenario from your daily work and projects, where you want to put your fresh or experienced PHPUnit skills to work and get stuck by one of the following problems:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081141Z" creationid="Wynn" creationdate="20150310T081141Z">
        <seg>你大概会在日常工作面对的项目中经历这一幕。你打算把你那或生疏或纯熟的 PHPUnit 技能用到工作中去，结果被以下问题之一卡住了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should be as specific as possible when testing exceptions. Testing for classes that are too generic might lead to undesirable side-effects. Accordingly, testing for the &lt;l0&gt;Exception&lt;/l0&gt; class with &lt;l1&gt;@expectedException&lt;/l1&gt; or &lt;l2&gt;setExpectedException()&lt;/l2&gt; is no longer permitted.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040809Z" creationid="Wynn" creationdate="20150330T024243Z">
        <seg>对异常进行测试是越明确越好的。对太笼统的类进行测试有可能导致不良副作用。因此，不再允许用 &lt;l1&gt;@expectedException&lt;/l1&gt; 或 &lt;l2&gt;setExpectedException()&lt;/l2&gt; 对 &lt;l0&gt;Exception&lt;/l0&gt; 类进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to be able to read and understand the test code easily, even months after writing it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T082803Z" creationid="Wynn" creationdate="20150310T082228Z">
        <seg>你希望在哪怕好几个月以后也能轻松地阅读并理解测试代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to use &lt;u0&gt;Behat&lt;/u0&gt; for Behaviour-Driven Development instead of the &lt;l1&gt;PHPUnit_Extensions_Story_TestCase&lt;/l1&gt; extension to PHPUnit that is discussed in the remainder of this chapter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031020Z" creationid="Wynn" creationdate="20150330T031020Z">
        <seg>你要用 &lt;u0&gt;Behat&lt;/u0&gt; 来进行行为驱动开发，而非本章其余部分所讨论的 PHPUnit 的 &lt;l1&gt;PHPUnit_Extensions_Story_TestCase&lt;/l1&gt; 扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You won't need additional files for assertions and can specify them directly in the TestCase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074616Z" creationid="Wynn" creationdate="20150317T074616Z">
        <seg>不需要为断言提供任何额外文件，可以直接在 TestCase 中指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your business logic performs a mix of SELECT, INSERT, UPDATE and DELETE statements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081331Z" creationid="Wynn" creationdate="20150310T081304Z">
        <seg>业务逻辑中混合执行了 SELECT、INSERT、UPDATE 和 DELETE 语句。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and &lt;e0&gt;fixture2.xml&lt;/e0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T075431Z" creationid="Wynn" creationdate="20150317T075431Z">
        <seg>和 &lt;e0&gt;fixture2.xml&lt;/e0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>anything()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093239Z" creationid="Wynn" creationdate="20150309T093239Z">
        <seg>anything()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appendixes.configuration.html#appendixes.configuration.php-ini-constants-variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T100815Z" creationid="Wynn" creationdate="20150316T100815Z">
        <seg>appendixes.configuration.html#appendixes.configuration.php-ini-constants-variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>arrayHasKey()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093240Z" creationid="Wynn" creationdate="20150309T093240Z">
        <seg>arrayHasKey()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArrayHasKey($key, $array, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025426Z" creationid="Wynn" creationdate="20150330T025426Z">
        <seg>assertArrayHasKey($key, $array, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArrayHasKey()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092758Z" creationid="Wynn" creationdate="20150309T092758Z">
        <seg>assertArrayHasKey()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArrayHasKey(mixed $key, array $array[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092800Z" creationid="Wynn" creationdate="20150309T092800Z">
        <seg>assertArrayHasKey(mixed $key, array $array[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArrayNotHasKey($key, $array, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025428Z" creationid="Wynn" creationdate="20150330T025428Z">
        <seg>assertArrayNotHasKey($key, $array, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArrayNotHasKey()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092759Z" creationid="Wynn" creationdate="20150309T092759Z">
        <seg>assertArrayNotHasKey()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArraySubset()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T073105Z" creationid="Wynn" creationdate="20150706T073105Z">
        <seg>assertArraySubset()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertArraySubset(array $subset, array $array[, bool $strict = '', string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T073110Z" creationid="Wynn" creationdate="20150706T073110Z">
        <seg>assertArraySubset(array $subset, array $array[, bool $strict = '', string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025431Z" creationid="Wynn" creationdate="20150330T025431Z">
        <seg>assertAttributeContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092818Z" creationid="Wynn" creationdate="20150309T092818Z">
        <seg>assertAttributeContains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025432Z" creationid="Wynn" creationdate="20150330T025432Z">
        <seg>assertAttributeContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeContainsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092908Z" creationid="Wynn" creationdate="20150309T092908Z">
        <seg>assertAttributeContainsOnly()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025436Z" creationid="Wynn" creationdate="20150330T025436Z">
        <seg>assertAttributeCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025433Z" creationid="Wynn" creationdate="20150330T025433Z">
        <seg>assertAttributeCount()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025438Z" creationid="Wynn" creationdate="20150330T025438Z">
        <seg>assertAttributeEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeEmpty()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092938Z" creationid="Wynn" creationdate="20150309T092938Z">
        <seg>assertAttributeEmpty()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025444Z" creationid="Wynn" creationdate="20150330T025444Z">
        <seg>assertAttributeEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093008Z" creationid="Wynn" creationdate="20150309T093008Z">
        <seg>assertAttributeEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeGreaterThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025447Z" creationid="Wynn" creationdate="20150330T025447Z">
        <seg>assertAttributeGreaterThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeGreaterThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093118Z" creationid="Wynn" creationdate="20150309T093118Z">
        <seg>assertAttributeGreaterThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeGreaterThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025451Z" creationid="Wynn" creationdate="20150330T025451Z">
        <seg>assertAttributeGreaterThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeGreaterThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093122Z" creationid="Wynn" creationdate="20150309T093122Z">
        <seg>assertAttributeGreaterThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeInstanceOf($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025452Z" creationid="Wynn" creationdate="20150330T025452Z">
        <seg>assertAttributeInstanceOf($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093126Z" creationid="Wynn" creationdate="20150309T093126Z">
        <seg>assertAttributeInstanceOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeInternalType($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025458Z" creationid="Wynn" creationdate="20150330T025458Z">
        <seg>assertAttributeInternalType($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeInternalType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093131Z" creationid="Wynn" creationdate="20150309T093131Z">
        <seg>assertAttributeInternalType()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeLessThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025456Z" creationid="Wynn" creationdate="20150330T025456Z">
        <seg>assertAttributeLessThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeLessThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093147Z" creationid="Wynn" creationdate="20150309T093147Z">
        <seg>assertAttributeLessThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeLessThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025455Z" creationid="Wynn" creationdate="20150330T025455Z">
        <seg>assertAttributeLessThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeLessThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093151Z" creationid="Wynn" creationdate="20150309T093151Z">
        <seg>assertAttributeLessThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025454Z" creationid="Wynn" creationdate="20150330T025454Z">
        <seg>assertAttributeNotContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092819Z" creationid="Wynn" creationdate="20150309T092819Z">
        <seg>assertAttributeNotContains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025453Z" creationid="Wynn" creationdate="20150330T025453Z">
        <seg>assertAttributeNotContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotContainsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092910Z" creationid="Wynn" creationdate="20150309T092910Z">
        <seg>assertAttributeNotContainsOnly()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025500Z" creationid="Wynn" creationdate="20150330T025500Z">
        <seg>assertAttributeNotCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025459Z" creationid="Wynn" creationdate="20150330T025459Z">
        <seg>assertAttributeNotCount()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025501Z" creationid="Wynn" creationdate="20150330T025501Z">
        <seg>assertAttributeNotEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotEmpty()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092939Z" creationid="Wynn" creationdate="20150309T092939Z">
        <seg>assertAttributeNotEmpty()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025502Z" creationid="Wynn" creationdate="20150330T025502Z">
        <seg>assertAttributeNotEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093008Z" creationid="Wynn" creationdate="20150309T093008Z">
        <seg>assertAttributeNotEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotInstanceOf($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025503Z" creationid="Wynn" creationdate="20150330T025503Z">
        <seg>assertAttributeNotInstanceOf($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093127Z" creationid="Wynn" creationdate="20150309T093127Z">
        <seg>assertAttributeNotInstanceOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotInternalType($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025506Z" creationid="Wynn" creationdate="20150330T025506Z">
        <seg>assertAttributeNotInternalType($expected, $attributeName, $classOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotInternalType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093131Z" creationid="Wynn" creationdate="20150309T093131Z">
        <seg>assertAttributeNotInternalType()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025513Z" creationid="Wynn" creationdate="20150330T025513Z">
        <seg>assertAttributeNotSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeNotSame()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093212Z" creationid="Wynn" creationdate="20150309T093212Z">
        <seg>assertAttributeNotSame()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025511Z" creationid="Wynn" creationdate="20150330T025511Z">
        <seg>assertAttributeSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertAttributeSame()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093211Z" creationid="Wynn" creationdate="20150309T093211Z">
        <seg>assertAttributeSame()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025510Z" creationid="Wynn" creationdate="20150330T025510Z">
        <seg>assertClassHasAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092803Z" creationid="Wynn" creationdate="20150309T092803Z">
        <seg>assertClassHasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasAttribute(string $attributeName, string $className[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092806Z" creationid="Wynn" creationdate="20150309T092806Z">
        <seg>assertClassHasAttribute(string $attributeName, string $className[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasStaticAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025509Z" creationid="Wynn" creationdate="20150330T025509Z">
        <seg>assertClassHasStaticAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasStaticAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092810Z" creationid="Wynn" creationdate="20150309T092810Z">
        <seg>assertClassHasStaticAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassHasStaticAttribute(string $attributeName, string $className[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092811Z" creationid="Wynn" creationdate="20150309T092811Z">
        <seg>assertClassHasStaticAttribute(string $attributeName, string $className[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassNotHasAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025508Z" creationid="Wynn" creationdate="20150330T025508Z">
        <seg>assertClassNotHasAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassNotHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092804Z" creationid="Wynn" creationdate="20150309T092804Z">
        <seg>assertClassNotHasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassNotHasStaticAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025507Z" creationid="Wynn" creationdate="20150330T025507Z">
        <seg>assertClassNotHasStaticAttribute($attributeName, $className, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertClassNotHasStaticAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092810Z" creationid="Wynn" creationdate="20150309T092810Z">
        <seg>assertClassNotHasStaticAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025519Z" creationid="Wynn" creationdate="20150330T025519Z">
        <seg>assertContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092815Z" creationid="Wynn" creationdate="20150309T092815Z">
        <seg>assertContains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContains(mixed $needle, Iterator|array $haystack[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092819Z" creationid="Wynn" creationdate="20150309T092819Z">
        <seg>assertContains(mixed $needle, Iterator|array $haystack[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContains(string $needle, string $haystack[, string $message = '', boolean $ignoreCase = FALSE])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092836Z" creationid="Wynn" creationdate="20150309T092836Z">
        <seg>assertContains(string $needle, string $haystack[, string $message = '', boolean $ignoreCase = FALSE])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025521Z" creationid="Wynn" creationdate="20150330T025521Z">
        <seg>assertContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092906Z" creationid="Wynn" creationdate="20150309T092906Z">
        <seg>assertContainsOnly()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnly(string $type, Iterator|array $haystack[, boolean $isNativeType = NULL, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092911Z" creationid="Wynn" creationdate="20150309T092911Z">
        <seg>assertContainsOnly(string $type, Iterator|array $haystack[, boolean $isNativeType = NULL, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnlyInstancesOf($classname, $haystack, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025522Z" creationid="Wynn" creationdate="20150330T025522Z">
        <seg>assertContainsOnlyInstancesOf($classname, $haystack, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnlyInstancesOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092921Z" creationid="Wynn" creationdate="20150309T092921Z">
        <seg>assertContainsOnlyInstancesOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertContainsOnlyInstancesOf(string $classname, Traversable|array $haystack[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092924Z" creationid="Wynn" creationdate="20150309T092924Z">
        <seg>assertContainsOnlyInstancesOf(string $classname, Traversable|array $haystack[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertCount($expectedCount, $haystack, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025518Z" creationid="Wynn" creationdate="20150330T025518Z">
        <seg>assertCount($expectedCount, $haystack, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertCount($expectedCount, $haystack[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092932Z" creationid="Wynn" creationdate="20150309T092932Z">
        <seg>assertCount($expectedCount, $haystack[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092930Z" creationid="Wynn" creationdate="20150309T092930Z">
        <seg>assertCount()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEmpty($actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025516Z" creationid="Wynn" creationdate="20150330T025516Z">
        <seg>assertEmpty($actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEmpty()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092936Z" creationid="Wynn" creationdate="20150309T092936Z">
        <seg>assertEmpty()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEmpty(mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092939Z" creationid="Wynn" creationdate="20150309T092939Z">
        <seg>assertEmpty(mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEqualXMLStructure()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092945Z" creationid="Wynn" creationdate="20150309T092945Z">
        <seg>assertEqualXMLStructure()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement, $checkAttributes = FALSE, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025517Z" creationid="Wynn" creationdate="20150330T025517Z">
        <seg>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement, $checkAttributes = FALSE, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement[, boolean $checkAttributes = FALSE, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092947Z" creationid="Wynn" creationdate="20150309T092947Z">
        <seg>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement[, boolean $checkAttributes = FALSE, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025515Z" creationid="Wynn" creationdate="20150330T025515Z">
        <seg>assertEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093005Z" creationid="Wynn" creationdate="20150309T093005Z">
        <seg>assertEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(DOMDocument $expected, DOMDocument $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093027Z" creationid="Wynn" creationdate="20150309T093027Z">
        <seg>assertEquals(DOMDocument $expected, DOMDocument $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043529Z" creationid="Wynn" creationdate="20150330T043529Z">
        <seg>assertEquals(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(array $expected, array $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093052Z" creationid="Wynn" creationdate="20150309T093052Z">
        <seg>assertEquals(array $expected, array $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(float $expected, float $actual[, string $message = '', float $delta = 0])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093019Z" creationid="Wynn" creationdate="20150309T093019Z">
        <seg>assertEquals(float $expected, float $actual[, string $message = '', float $delta = 0])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093009Z" creationid="Wynn" creationdate="20150309T093009Z">
        <seg>assertEquals(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertEquals(object $expected, object $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093040Z" creationid="Wynn" creationdate="20150309T093040Z">
        <seg>assertEquals(object $expected, object $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFalse($condition, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025514Z" creationid="Wynn" creationdate="20150330T025514Z">
        <seg>assertFalse($condition, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFalse()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093058Z" creationid="Wynn" creationdate="20150309T093058Z">
        <seg>assertFalse()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFalse(bool $condition[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093059Z" creationid="Wynn" creationdate="20150309T093059Z">
        <seg>assertFalse(bool $condition[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025513Z" creationid="Wynn" creationdate="20150330T025513Z">
        <seg>assertFileEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093105Z" creationid="Wynn" creationdate="20150309T093105Z">
        <seg>assertFileEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileEquals(string $expected, string $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093107Z" creationid="Wynn" creationdate="20150309T093107Z">
        <seg>assertFileEquals(string $expected, string $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileExists($filename, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025523Z" creationid="Wynn" creationdate="20150330T025523Z">
        <seg>assertFileExists($filename, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileExists()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093111Z" creationid="Wynn" creationdate="20150309T093111Z">
        <seg>assertFileExists()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileExists(string $filename[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093115Z" creationid="Wynn" creationdate="20150309T093115Z">
        <seg>assertFileExists(string $filename[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileNotEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025524Z" creationid="Wynn" creationdate="20150330T025524Z">
        <seg>assertFileNotEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileNotEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093106Z" creationid="Wynn" creationdate="20150309T093106Z">
        <seg>assertFileNotEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileNotExists($filename, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025527Z" creationid="Wynn" creationdate="20150330T025527Z">
        <seg>assertFileNotExists($filename, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFileNotExists()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093114Z" creationid="Wynn" creationdate="20150309T093114Z">
        <seg>assertFileNotExists()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertFinite()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075757Z" creationid="Wynn" creationdate="20150706T075757Z">
        <seg>assertFinite()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThan($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025528Z" creationid="Wynn" creationdate="20150330T025528Z">
        <seg>assertGreaterThan($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093118Z" creationid="Wynn" creationdate="20150309T093118Z">
        <seg>assertGreaterThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThan(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>assertGreaterThan(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThan(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093119Z" creationid="Wynn" creationdate="20150309T093119Z">
        <seg>assertGreaterThan(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThanOrEqual($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025529Z" creationid="Wynn" creationdate="20150330T025529Z">
        <seg>assertGreaterThanOrEqual($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093122Z" creationid="Wynn" creationdate="20150309T093122Z">
        <seg>assertGreaterThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThanOrEqual(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043531Z" creationid="Wynn" creationdate="20150330T043531Z">
        <seg>assertGreaterThanOrEqual(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertGreaterThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093123Z" creationid="Wynn" creationdate="20150309T093123Z">
        <seg>assertGreaterThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInfinite()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075756Z" creationid="Wynn" creationdate="20150706T075756Z">
        <seg>assertInfinite()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInfinite(mixed $variable[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075759Z" creationid="Wynn" creationdate="20150706T075759Z">
        <seg>assertInfinite(mixed $variable[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInstanceOf($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025529Z" creationid="Wynn" creationdate="20150330T025529Z">
        <seg>assertInstanceOf($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInstanceOf($expected, $actual[, $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093128Z" creationid="Wynn" creationdate="20150309T093128Z">
        <seg>assertInstanceOf($expected, $actual[, $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093126Z" creationid="Wynn" creationdate="20150309T093126Z">
        <seg>assertInstanceOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInternalType($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025530Z" creationid="Wynn" creationdate="20150330T025530Z">
        <seg>assertInternalType($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInternalType($expected, $actual[, $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093132Z" creationid="Wynn" creationdate="20150309T093132Z">
        <seg>assertInternalType($expected, $actual[, $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertInternalType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093131Z" creationid="Wynn" creationdate="20150309T093131Z">
        <seg>assertInternalType()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonFileEqualsJsonFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025530Z" creationid="Wynn" creationdate="20150330T025530Z">
        <seg>assertJsonFileEqualsJsonFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonFileEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093134Z" creationid="Wynn" creationdate="20150309T093134Z">
        <seg>assertJsonFileEqualsJsonFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonFileEqualsJsonFile(mixed $expectedFile, mixed $actualFile[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093135Z" creationid="Wynn" creationdate="20150309T093135Z">
        <seg>assertJsonFileEqualsJsonFile(mixed $expectedFile, mixed $actualFile[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonFileNotEqualsJsonFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025531Z" creationid="Wynn" creationdate="20150330T025531Z">
        <seg>assertJsonFileNotEqualsJsonFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonFileNotEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093135Z" creationid="Wynn" creationdate="20150309T093135Z">
        <seg>assertJsonFileNotEqualsJsonFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonFile($expectedFile, $actualJson, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025531Z" creationid="Wynn" creationdate="20150330T025531Z">
        <seg>assertJsonStringEqualsJsonFile($expectedFile, $actualJson, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093138Z" creationid="Wynn" creationdate="20150309T093138Z">
        <seg>assertJsonStringEqualsJsonFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonFile(mixed $expectedFile, mixed $actualJson[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093139Z" creationid="Wynn" creationdate="20150309T093139Z">
        <seg>assertJsonStringEqualsJsonFile(mixed $expectedFile, mixed $actualJson[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonString($expectedJson, $actualJson, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025532Z" creationid="Wynn" creationdate="20150330T025532Z">
        <seg>assertJsonStringEqualsJsonString($expectedJson, $actualJson, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093143Z" creationid="Wynn" creationdate="20150309T093143Z">
        <seg>assertJsonStringEqualsJsonString()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringEqualsJsonString(mixed $expectedJson, mixed $actualJson[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093144Z" creationid="Wynn" creationdate="20150309T093144Z">
        <seg>assertJsonStringEqualsJsonString(mixed $expectedJson, mixed $actualJson[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringNotEqualsJsonFile($expectedFile, $actualJson, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025533Z" creationid="Wynn" creationdate="20150330T025533Z">
        <seg>assertJsonStringNotEqualsJsonFile($expectedFile, $actualJson, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringNotEqualsJsonFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093138Z" creationid="Wynn" creationdate="20150309T093138Z">
        <seg>assertJsonStringNotEqualsJsonFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringNotEqualsJsonString($expectedJson, $actualJson, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025534Z" creationid="Wynn" creationdate="20150330T025534Z">
        <seg>assertJsonStringNotEqualsJsonString($expectedJson, $actualJson, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertJsonStringNotEqualsJsonString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093143Z" creationid="Wynn" creationdate="20150309T093143Z">
        <seg>assertJsonStringNotEqualsJsonString()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThan($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025535Z" creationid="Wynn" creationdate="20150330T025535Z">
        <seg>assertLessThan($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093146Z" creationid="Wynn" creationdate="20150309T093146Z">
        <seg>assertLessThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThan(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043533Z" creationid="Wynn" creationdate="20150330T043533Z">
        <seg>assertLessThan(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThan(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093148Z" creationid="Wynn" creationdate="20150309T093148Z">
        <seg>assertLessThan(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThanOrEqual($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025535Z" creationid="Wynn" creationdate="20150330T025535Z">
        <seg>assertLessThanOrEqual($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093151Z" creationid="Wynn" creationdate="20150309T093151Z">
        <seg>assertLessThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThanOrEqual(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043533Z" creationid="Wynn" creationdate="20150330T043533Z">
        <seg>assertLessThanOrEqual(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertLessThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093152Z" creationid="Wynn" creationdate="20150309T093152Z">
        <seg>assertLessThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080016Z" creationid="Wynn" creationdate="20150706T080016Z">
        <seg>assertNan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNan(mixed $variable[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080017Z" creationid="Wynn" creationdate="20150706T080017Z">
        <seg>assertNan(mixed $variable[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025536Z" creationid="Wynn" creationdate="20150330T025536Z">
        <seg>assertNotContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092816Z" creationid="Wynn" creationdate="20150309T092816Z">
        <seg>assertNotContains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025537Z" creationid="Wynn" creationdate="20150330T025537Z">
        <seg>assertNotContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotContainsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092907Z" creationid="Wynn" creationdate="20150309T092907Z">
        <seg>assertNotContainsOnly()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotCount($expectedCount, $haystack, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025537Z" creationid="Wynn" creationdate="20150330T025537Z">
        <seg>assertNotCount($expectedCount, $haystack, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092931Z" creationid="Wynn" creationdate="20150309T092931Z">
        <seg>assertNotCount()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotEmpty($actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025538Z" creationid="Wynn" creationdate="20150330T025538Z">
        <seg>assertNotEmpty($actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotEmpty()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092937Z" creationid="Wynn" creationdate="20150309T092937Z">
        <seg>assertNotEmpty()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025540Z" creationid="Wynn" creationdate="20150330T025540Z">
        <seg>assertNotEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093006Z" creationid="Wynn" creationdate="20150309T093006Z">
        <seg>assertNotEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotEquals(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043529Z" creationid="Wynn" creationdate="20150330T043529Z">
        <seg>assertNotEquals(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotInstanceOf($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025540Z" creationid="Wynn" creationdate="20150330T025540Z">
        <seg>assertNotInstanceOf($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093126Z" creationid="Wynn" creationdate="20150309T093126Z">
        <seg>assertNotInstanceOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotInternalType($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025541Z" creationid="Wynn" creationdate="20150330T025541Z">
        <seg>assertNotInternalType($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotInternalType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093131Z" creationid="Wynn" creationdate="20150309T093131Z">
        <seg>assertNotInternalType()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotNull($actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025541Z" creationid="Wynn" creationdate="20150330T025541Z">
        <seg>assertNotNull($actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotNull()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093154Z" creationid="Wynn" creationdate="20150309T093154Z">
        <seg>assertNotNull()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotRegExp($pattern, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025542Z" creationid="Wynn" creationdate="20150330T025542Z">
        <seg>assertNotRegExp($pattern, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093159Z" creationid="Wynn" creationdate="20150309T093159Z">
        <seg>assertNotRegExp()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotSame($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025542Z" creationid="Wynn" creationdate="20150330T025542Z">
        <seg>assertNotSame($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotSame()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093211Z" creationid="Wynn" creationdate="20150309T093211Z">
        <seg>assertNotSame()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotSame(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>assertNotSame(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotSameSize($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025543Z" creationid="Wynn" creationdate="20150330T025543Z">
        <seg>assertNotSameSize($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotSameSize()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025543Z" creationid="Wynn" creationdate="20150330T025543Z">
        <seg>assertNotSameSize()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotTag($matcher, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025544Z" creationid="Wynn" creationdate="20150330T025544Z">
        <seg>assertNotTag($matcher, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNotTag()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025544Z" creationid="Wynn" creationdate="20150330T025544Z">
        <seg>assertNotTag()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNull($actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025545Z" creationid="Wynn" creationdate="20150330T025545Z">
        <seg>assertNull($actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNull()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093154Z" creationid="Wynn" creationdate="20150309T093154Z">
        <seg>assertNull()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertNull(mixed $variable[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093155Z" creationid="Wynn" creationdate="20150309T093155Z">
        <seg>assertNull(mixed $variable[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertObjectHasAttribute($attributeName, $object, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025601Z" creationid="Wynn" creationdate="20150330T025601Z">
        <seg>assertObjectHasAttribute($attributeName, $object, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertObjectHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093157Z" creationid="Wynn" creationdate="20150309T093157Z">
        <seg>assertObjectHasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertObjectHasAttribute(string $attributeName, object $object[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093157Z" creationid="Wynn" creationdate="20150309T093157Z">
        <seg>assertObjectHasAttribute(string $attributeName, object $object[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertObjectNotHasAttribute($attributeName, $object, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025602Z" creationid="Wynn" creationdate="20150330T025602Z">
        <seg>assertObjectNotHasAttribute($attributeName, $object, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertObjectNotHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093157Z" creationid="Wynn" creationdate="20150309T093157Z">
        <seg>assertObjectNotHasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertPostConditions()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081137Z" creationid="Wynn" creationdate="20150319T081137Z">
        <seg>assertPostConditions()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertPreConditions()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081132Z" creationid="Wynn" creationdate="20150319T081132Z">
        <seg>assertPreConditions()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertRegExp($pattern, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025602Z" creationid="Wynn" creationdate="20150330T025602Z">
        <seg>assertRegExp($pattern, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093158Z" creationid="Wynn" creationdate="20150309T093158Z">
        <seg>assertRegExp()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertRegExp(string $pattern, string $string[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093159Z" creationid="Wynn" creationdate="20150309T093159Z">
        <seg>assertRegExp(string $pattern, string $string[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSame($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025602Z" creationid="Wynn" creationdate="20150330T025602Z">
        <seg>assertSame($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSame()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093210Z" creationid="Wynn" creationdate="20150309T093210Z">
        <seg>assertSame()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSame(X, method(...))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043530Z" creationid="Wynn" creationdate="20150330T043530Z">
        <seg>assertSame(X, method(...))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSame(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093213Z" creationid="Wynn" creationdate="20150309T093213Z">
        <seg>assertSame(mixed $expected, mixed $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSame(object $expected, object $actual[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093217Z" creationid="Wynn" creationdate="20150309T093217Z">
        <seg>assertSame(object $expected, object $actual[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSameSize($expected, $actual, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025603Z" creationid="Wynn" creationdate="20150330T025603Z">
        <seg>assertSameSize($expected, $actual, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSameSize()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025603Z" creationid="Wynn" creationdate="20150330T025603Z">
        <seg>assertSameSize()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectCount($selector, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025604Z" creationid="Wynn" creationdate="20150330T025604Z">
        <seg>assertSelectCount($selector, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectCount()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025603Z" creationid="Wynn" creationdate="20150330T025603Z">
        <seg>assertSelectCount()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectCount(array $selector, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053541Z" creationid="Wynn" creationdate="20150330T053541Z">
        <seg>assertSelectCount(array $selector, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectEquals($selector, $content, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025607Z" creationid="Wynn" creationdate="20150330T025607Z">
        <seg>assertSelectEquals($selector, $content, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectEquals()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025606Z" creationid="Wynn" creationdate="20150330T025606Z">
        <seg>assertSelectEquals()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectEquals(array $selector, string $content, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T053948Z" creationid="Wynn" creationdate="20150330T053948Z">
        <seg>assertSelectEquals(array $selector, string $content, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectRegExp($selector, $pattern, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025608Z" creationid="Wynn" creationdate="20150330T025608Z">
        <seg>assertSelectRegExp($selector, $pattern, $count, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025607Z" creationid="Wynn" creationdate="20150330T025607Z">
        <seg>assertSelectRegExp()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertSelectRegExp(array $selector, string $pattern, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054156Z" creationid="Wynn" creationdate="20150330T054156Z">
        <seg>assertSelectRegExp(array $selector, string $pattern, integer $count, mixed $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEndsNotWith($suffix, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025609Z" creationid="Wynn" creationdate="20150330T025609Z">
        <seg>assertStringEndsNotWith($suffix, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEndsNotWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093223Z" creationid="Wynn" creationdate="20150309T093223Z">
        <seg>assertStringEndsNotWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEndsWith($suffix, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025609Z" creationid="Wynn" creationdate="20150330T025609Z">
        <seg>assertStringEndsWith($suffix, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEndsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093222Z" creationid="Wynn" creationdate="20150309T093222Z">
        <seg>assertStringEndsWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEndsWith(string $suffix, string $string[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093224Z" creationid="Wynn" creationdate="20150309T093224Z">
        <seg>assertStringEndsWith(string $suffix, string $string[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025610Z" creationid="Wynn" creationdate="20150330T025610Z">
        <seg>assertStringEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEqualsFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093227Z" creationid="Wynn" creationdate="20150309T093227Z">
        <seg>assertStringEqualsFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringEqualsFile(string $expectedFile, string $actualString[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093229Z" creationid="Wynn" creationdate="20150309T093229Z">
        <seg>assertStringEqualsFile(string $expectedFile, string $actualString[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormat($format, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025611Z" creationid="Wynn" creationdate="20150330T025611Z">
        <seg>assertStringMatchesFormat($format, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormat()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093201Z" creationid="Wynn" creationdate="20150309T093201Z">
        <seg>assertStringMatchesFormat()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormat(string $format, string $string[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093201Z" creationid="Wynn" creationdate="20150309T093201Z">
        <seg>assertStringMatchesFormat(string $format, string $string[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormatFile($formatFile, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025612Z" creationid="Wynn" creationdate="20150330T025612Z">
        <seg>assertStringMatchesFormatFile($formatFile, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormatFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093205Z" creationid="Wynn" creationdate="20150309T093205Z">
        <seg>assertStringMatchesFormatFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringMatchesFormatFile(string $formatFile, string $string[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093207Z" creationid="Wynn" creationdate="20150309T093207Z">
        <seg>assertStringMatchesFormatFile(string $formatFile, string $string[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025612Z" creationid="Wynn" creationdate="20150330T025612Z">
        <seg>assertStringNotEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotEqualsFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093228Z" creationid="Wynn" creationdate="20150309T093228Z">
        <seg>assertStringNotEqualsFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotMatchesFormat($format, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025613Z" creationid="Wynn" creationdate="20150330T025613Z">
        <seg>assertStringNotMatchesFormat($format, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotMatchesFormat()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093201Z" creationid="Wynn" creationdate="20150309T093201Z">
        <seg>assertStringNotMatchesFormat()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotMatchesFormatFile($formatFile, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025614Z" creationid="Wynn" creationdate="20150330T025614Z">
        <seg>assertStringNotMatchesFormatFile($formatFile, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringNotMatchesFormatFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093206Z" creationid="Wynn" creationdate="20150309T093206Z">
        <seg>assertStringNotMatchesFormatFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringStartsNotWith($prefix, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025615Z" creationid="Wynn" creationdate="20150330T025615Z">
        <seg>assertStringStartsNotWith($prefix, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringStartsNotWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093232Z" creationid="Wynn" creationdate="20150309T093232Z">
        <seg>assertStringStartsNotWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringStartsWith($prefix, $string, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025615Z" creationid="Wynn" creationdate="20150330T025615Z">
        <seg>assertStringStartsWith($prefix, $string, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringStartsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093231Z" creationid="Wynn" creationdate="20150309T093231Z">
        <seg>assertStringStartsWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertStringStartsWith(string $prefix, string $string[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093233Z" creationid="Wynn" creationdate="20150309T093233Z">
        <seg>assertStringStartsWith(string $prefix, string $string[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTag($matcher, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025618Z" creationid="Wynn" creationdate="20150330T025618Z">
        <seg>assertTag($matcher, $actual, $message = '', $isHtml = TRUE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTag()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025616Z" creationid="Wynn" creationdate="20150330T025616Z">
        <seg>assertTag()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTag(array $matcher, string $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T054254Z" creationid="Wynn" creationdate="20150330T054254Z">
        <seg>assertTag(array $matcher, string $actual[, string $message = '', boolean $isHtml = TRUE])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertThat($value, PHPUnit_Framework_Constraint $constraint, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025619Z" creationid="Wynn" creationdate="20150330T025619Z">
        <seg>assertThat($value, PHPUnit_Framework_Constraint $constraint, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertThat()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093236Z" creationid="Wynn" creationdate="20150309T093236Z">
        <seg>assertThat()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertThat(mixed $value, PHPUnit_Framework_Constraint $constraint[, $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093237Z" creationid="Wynn" creationdate="20150309T093237Z">
        <seg>assertThat(mixed $value, PHPUnit_Framework_Constraint $constraint[, $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTrue($condition, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025619Z" creationid="Wynn" creationdate="20150330T025619Z">
        <seg>assertTrue($condition, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTrue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093322Z" creationid="Wynn" creationdate="20150309T093322Z">
        <seg>assertTrue()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertTrue(bool $condition[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093323Z" creationid="Wynn" creationdate="20150309T093323Z">
        <seg>assertTrue(bool $condition[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlFileEqualsXmlFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025619Z" creationid="Wynn" creationdate="20150330T025619Z">
        <seg>assertXmlFileEqualsXmlFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlFileEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093324Z" creationid="Wynn" creationdate="20150309T093324Z">
        <seg>assertXmlFileEqualsXmlFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlFileEqualsXmlFile(string $expectedFile, string $actualFile[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093325Z" creationid="Wynn" creationdate="20150309T093325Z">
        <seg>assertXmlFileEqualsXmlFile(string $expectedFile, string $actualFile[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlFileNotEqualsXmlFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025619Z" creationid="Wynn" creationdate="20150330T025619Z">
        <seg>assertXmlFileNotEqualsXmlFile($expectedFile, $actualFile, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlFileNotEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093324Z" creationid="Wynn" creationdate="20150309T093324Z">
        <seg>assertXmlFileNotEqualsXmlFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlFile($expectedFile, $actualXml, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025619Z" creationid="Wynn" creationdate="20150330T025619Z">
        <seg>assertXmlStringEqualsXmlFile($expectedFile, $actualXml, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093327Z" creationid="Wynn" creationdate="20150309T093327Z">
        <seg>assertXmlStringEqualsXmlFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlFile(string $expectedFile, string $actualXml[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093328Z" creationid="Wynn" creationdate="20150309T093328Z">
        <seg>assertXmlStringEqualsXmlFile(string $expectedFile, string $actualXml[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlString($expectedXml, $actualXml, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025620Z" creationid="Wynn" creationdate="20150330T025620Z">
        <seg>assertXmlStringEqualsXmlString($expectedXml, $actualXml, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093330Z" creationid="Wynn" creationdate="20150309T093330Z">
        <seg>assertXmlStringEqualsXmlString()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringEqualsXmlString(string $expectedXml, string $actualXml[, string $message = ''])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093331Z" creationid="Wynn" creationdate="20150309T093331Z">
        <seg>assertXmlStringEqualsXmlString(string $expectedXml, string $actualXml[, string $message = ''])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringNotEqualsXmlFile($expectedFile, $actualXml, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025620Z" creationid="Wynn" creationdate="20150330T025620Z">
        <seg>assertXmlStringNotEqualsXmlFile($expectedFile, $actualXml, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringNotEqualsXmlFile()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093327Z" creationid="Wynn" creationdate="20150309T093327Z">
        <seg>assertXmlStringNotEqualsXmlFile()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringNotEqualsXmlString($expectedXml, $actualXml, $message = '')</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025621Z" creationid="Wynn" creationdate="20150330T025621Z">
        <seg>assertXmlStringNotEqualsXmlString($expectedXml, $actualXml, $message = '')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assertXmlStringNotEqualsXmlString()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093330Z" creationid="Wynn" creationdate="20150309T093330Z">
        <seg>assertXmlStringNotEqualsXmlString()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093238Z" creationid="Wynn" creationdate="20150309T093238Z">
        <seg>attribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributeEqualTo()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093247Z" creationid="Wynn" creationdate="20150309T093247Z">
        <seg>attributeEqualTo()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bool setOutputCallback(callable $callback)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024706Z" creationid="Wynn" creationdate="20150330T024706Z">
        <seg>bool setOutputCallback(callable $callback)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException              MyException
      * @expectedExceptionMessageRegExp /Argument \d+ can not be an? \w+/
      */
     public function testExceptionHasRightMessage()
     {
         throw new MyException('Argument 2 can not be an integer');
     }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092634Z" creationid="Wynn" creationdate="20150309T092634Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException              MyException
      * @expectedExceptionMessageRegExp /Argument \d+ can not be an? \w+/
      */
     public function testExceptionHasRightMessage()
     {
         throw new MyException('Argument 2 can not be an integer');
     }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException        MyException
      * @expectedExceptionMessage /Argument \d+ can not be an? \w+/
      */
     public function testExceptionHasRightMessage()
     {
         throw new MyException('Argument 2 can not be an integer');
     }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063028Z" creationid="Wynn" creationdate="20150330T063028Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException        MyException
      * @expectedExceptionMessage /Argument \d+ can not be an? \w+/
      */
     public function testExceptionHasRightMessage()
     {
         throw new MyException('Argument 2 can not be an integer');
     }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException        MyException
      * @expectedExceptionMessage broken
      */
     public function testExceptionHasRightMessage()
     {
         $param = "broken";
         throw new MyException('Invalid parameter "'.$param.'".', 20);
     }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092630Z" creationid="Wynn" creationdate="20150309T092630Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
     /**
      * @expectedException        MyException
      * @expectedExceptionMessage broken
      */
     public function testExceptionHasRightMessage()
     {
         $param = "broken";
         throw new MyException('Invalid parameter "'.$param.'".', 20);
     }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
      * @expectedException     MyException
      * @expectedExceptionCode MyClass::ERRORCODE
      */
    public function testExceptionHasErrorcode20()
    {
      throw new MyException('Some Message', 20);
    }
}
class MyClass
{
    const ERRORCODE = 20;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092618Z" creationid="Wynn" creationdate="20150309T092618Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
      * @expectedException     MyException
      * @expectedExceptionCode MyClass::ERRORCODE
      */
    public function testExceptionHasErrorcode20()
    {
      throw new MyException('Some Message', 20);
    }
}
class MyClass
{
    const ERRORCODE = 20;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @after
     */
    public function tearDownSomeFixtures()
    {
        // ...
    }

    /**
     * @after
     */
    public function tearDownSomeOtherFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092141Z" creationid="Wynn" creationdate="20150309T092141Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @after
     */
    public function tearDownSomeFixtures()
    {
        // ...
    }

    /**
     * @after
     */
    public function tearDownSomeOtherFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @afterClass
     */
    public static function tearDownSomeSharedFixtures()
    {
        // ...
    }

    /**
     * @afterClass
     */
    public static function tearDownSomeOtherSharedFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092120Z" creationid="Wynn" creationdate="20150309T092120Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @afterClass
     */
    public static function tearDownSomeSharedFixtures()
    {
        // ...
    }

    /**
     * @afterClass
     */
    public static function tearDownSomeOtherSharedFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @before
     */
    public function setupSomeFixtures()
    {
        // ...
    }

    /**
     * @before
     */
    public function setupSomeOtherFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092318Z" creationid="Wynn" creationdate="20150309T092255Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @before
     */
    public function setupSomeFixtures()
    {
        // ...
    }

    /**
     * @before
     */
    public function setupSomeOtherFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @beforeClass
     */
    public static function setUpSomeSharedFixtures()
    {
        // ...
    }

    /**
     * @beforeClass
     */
    public static function setUpSomeOtherSharedFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092411Z" creationid="Wynn" creationdate="20150309T092411Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @beforeClass
     */
    public static function setUpSomeSharedFixtures()
    {
        // ...
    }

    /**
     * @beforeClass
     */
    public static function setUpSomeOtherSharedFixtures()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        MyException
     * @expectedExceptionMessage Some Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new MyException('Some Message', 20);
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092628Z" creationid="Wynn" creationdate="20150309T092628Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException        MyException
     * @expectedExceptionMessage Some Message
     */
    public function testExceptionHasRightMessage()
    {
        throw new MyException('Some Message', 20);
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException     MyException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasErrorcode20()
    {
        throw new MyException('Some Message', 20);
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092608Z" creationid="Wynn" creationdate="20150309T092608Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @expectedException     MyException
     * @expectedExceptionCode 20
     */
    public function testExceptionHasErrorcode20()
    {
        throw new MyException('Some Message', 20);
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @group specification
     */
    public function testSomething()
    {
    }

    /**
     * @group regresssion
     * @group bug2204
     */
    public function testSomethingElse()
    {
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092637Z" creationid="Wynn" creationdate="20150309T092637Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @group specification
     */
    public function testSomething()
    {
    }

    /**
     * @group regresssion
     * @group bug2204
     */
    public function testSomethingElse()
    {
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @runInSeparateProcess
     * @preserveGlobalState disabled
     */
    public function testInSeparateProcess()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092733Z" creationid="Wynn" creationdate="20150309T092733Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @runInSeparateProcess
     * @preserveGlobalState disabled
     */
    public function testInSeparateProcess()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @runInSeparateProcess
     */
    public function testInSeparateProcess()
    {
        // ...
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092740Z" creationid="Wynn" creationdate="20150309T092740Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @runInSeparateProcess
     */
    public function testInSeparateProcess()
    {
        // ...
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    protected $backupGlobalsBlacklist = array('globalVariable');

    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T085830Z" creationid="Wynn" creationdate="20150319T085830Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    protected $backupGlobalsBlacklist = array('globalVariable');

    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    protected $backupStaticAttributesBlacklist = array(
      'className' =&gt; array('attributeName')
    );

    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090606Z" creationid="Wynn" creationdate="20150319T090606Z">
        <seg>class MyTest extends PHPUnit_Framework_TestCase
{
    protected $backupStaticAttributesBlacklist = array(
      'className' =&gt; array('attributeName')
    );

    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $browsers = array(
      array(
        'name'    =&gt; 'Firefox on Linux',
        'browser' =&gt; '*firefox /usr/lib/firefox/firefox-bin',
        'host'    =&gt; 'my.linux.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000
      )
    );

    // ...
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075845Z" creationid="Wynn" creationdate="20150310T075845Z">
        <seg>class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $browsers = array(
      array(
        'name'    =&gt; 'Firefox on Linux',
        'browser' =&gt; '*firefox /usr/lib/firefox/firefox-bin',
        'host'    =&gt; 'my.linux.box',
        'port'    =&gt; 4444,
        'timeout' =&gt; 30000
      )
    );

    // ...
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classHasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093251Z" creationid="Wynn" creationdate="20150309T093251Z">
        <seg>classHasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classHasStaticAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093252Z" creationid="Wynn" creationdate="20150309T093252Z">
        <seg>classHasStaticAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=3.7.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041757Z" creationid="Wynn" creationdate="20150330T041757Z">
        <seg>composer global require "phpunit/phpunit=3.7.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.0.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061904Z" creationid="Wynn" creationdate="20150330T061904Z">
        <seg>composer global require "phpunit/phpunit=4.0.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.1.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062829Z" creationid="Wynn" creationdate="20150330T062829Z">
        <seg>composer global require "phpunit/phpunit=4.1.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.2.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063208Z" creationid="Wynn" creationdate="20150330T063208Z">
        <seg>composer global require "phpunit/phpunit=4.2.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.3.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063400Z" creationid="Wynn" creationdate="20150330T063400Z">
        <seg>composer global require "phpunit/phpunit=4.3.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.4.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063533Z" creationid="Wynn" creationdate="20150330T063533Z">
        <seg>composer global require "phpunit/phpunit=4.4.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.5.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063703Z" creationid="Wynn" creationdate="20150330T063703Z">
        <seg>composer global require "phpunit/phpunit=4.5.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.6.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100514Z" creationid="Wynn" creationdate="20150319T100514Z">
        <seg>composer global require "phpunit/phpunit=4.6.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.7.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075611Z" creationid="Wynn" creationdate="20150706T075611Z">
        <seg>composer global require "phpunit/phpunit=4.7.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=4.8.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075645Z" creationid="Wynn" creationdate="20150706T075645Z">
        <seg>composer global require "phpunit/phpunit=4.8.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=5.0.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080217Z" creationid="Wynn" creationdate="20150706T080217Z">
        <seg>composer global require "phpunit/phpunit=5.0.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>composer global require "phpunit/phpunit=5.1.*"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041434Z" creationid="Wynn" creationdate="20151222T041434Z">
        <seg>composer global require "phpunit/phpunit=5.1.*"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>contains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093242Z" creationid="Wynn" creationdate="20150309T093242Z">
        <seg>contains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>containsOnly()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093244Z" creationid="Wynn" creationdate="20150309T093244Z">
        <seg>containsOnly()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>containsOnlyInstancesOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093245Z" creationid="Wynn" creationdate="20150309T093245Z">
        <seg>containsOnlyInstancesOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>convertErrorsToExceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093412Z" creationid="Wynn" creationdate="20150309T093412Z">
        <seg>convertErrorsToExceptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>convertNoticesToExceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093417Z" creationid="Wynn" creationdate="20150309T093417Z">
        <seg>convertNoticesToExceptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>convertWarningsToExceptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093417Z" creationid="Wynn" creationdate="20150309T093417Z">
        <seg>convertWarningsToExceptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>en</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093344Z" creationid="Wynn" creationdate="20150309T093344Z">
        <seg>en</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>equalTo()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093246Z" creationid="Wynn" creationdate="20150309T093246Z">
        <seg>equalTo()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expectException()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041132Z" creationid="Wynn" creationdate="20160113T041132Z">
        <seg>expectException()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expectExceptionCode()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041314Z" creationid="Wynn" creationdate="20160113T041314Z">
        <seg>expectExceptionCode()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expectExceptionMessage()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041359Z" creationid="Wynn" creationdate="20160113T041359Z">
        <seg>expectExceptionMessage()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expectExceptionMessageRegExp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041400Z" creationid="Wynn" creationdate="20160113T041400Z">
        <seg>expectExceptionMessageRegExp()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expects()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043929Z" creationid="Wynn" creationdate="20150330T043929Z">
        <seg>expects()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092625Z" creationid="Wynn" creationdate="20150319T092625Z">
        <seg>extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileExists()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093248Z" creationid="Wynn" creationdate="20150309T093248Z">
        <seg>fileExists()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>forceCoversAnnotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093418Z" creationid="Wynn" creationdate="20150309T093418Z">
        <seg>forceCoversAnnotation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092537Z" creationid="Wynn" creationdate="20150319T092537Z">
        <seg>function</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getMock()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T081259Z" creationid="Wynn" creationdate="20150327T081259Z">
        <seg>getMock()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getMockBuilder()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074950Z" creationid="Wynn" creationdate="20150327T074950Z">
        <seg>getMockBuilder()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getMockForAbstractClass()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091117Z" creationid="Wynn" creationdate="20150327T091117Z">
        <seg>getMockForAbstractClass()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getMockForTrait()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091031Z" creationid="Wynn" creationdate="20150327T091031Z">
        <seg>getMockForTrait()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getMockFromWsdl()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091154Z" creationid="Wynn" creationdate="20150327T091154Z">
        <seg>getMockFromWsdl()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greaterThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093250Z" creationid="Wynn" creationdate="20150309T093250Z">
        <seg>greaterThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greaterThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093251Z" creationid="Wynn" creationdate="20150309T093251Z">
        <seg>greaterThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>guestbook:
  -
    id: 1
    content: "Hello buddy!"
    user: "joe"
    created: 2010-04-24 17:15:23
  -
    id: 2
    content: "I like it!"
    user:
    created: 2010-04-26 12:14:20</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074244Z" creationid="Wynn" creationdate="20150317T074244Z">
        <seg>guestbook:
  -
    id: 1
    content: "Hello buddy!"
    user: "joe"
    created: 2010-04-24 17:15:23
  -
    id: 2
    content: "I like it!"
    user:
    created: 2010-04-26 12:14:20</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hasAttribute()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093253Z" creationid="Wynn" creationdate="20150309T093253Z">
        <seg>hasAttribute()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://ant.apache.org/manual/Tasks/junit.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100953Z" creationid="Wynn" creationdate="20150319T100953Z">
        <seg>http://ant.apache.org/manual/Tasks/junit.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://behat.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030946Z" creationid="Wynn" creationdate="20150330T030946Z">
        <seg>http://behat.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T073953Z" creationid="Wynn" creationdate="20150317T073953Z">
        <seg>http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093023Z" creationid="Wynn" creationdate="20150309T093023Z">
        <seg>http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Behavior_driven_development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030904Z" creationid="Wynn" creationdate="20150330T030904Z">
        <seg>http://en.wikipedia.org/wiki/Behavior_driven_development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Design_by_Contract</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045725Z" creationid="Wynn" creationdate="20150330T045725Z">
        <seg>http://en.wikipedia.org/wiki/Design_by_Contract</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Domain-specific_programming_language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031021Z" creationid="Wynn" creationdate="20150330T031021Z">
        <seg>http://en.wikipedia.org/wiki/Domain-specific_programming_language</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Domain_driven_design</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030905Z" creationid="Wynn" creationdate="20150330T030905Z">
        <seg>http://en.wikipedia.org/wiki/Domain_driven_design</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Extreme_Programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030720Z" creationid="Wynn" creationdate="20150330T030720Z">
        <seg>http://en.wikipedia.org/wiki/Extreme_Programming</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Server_Name_Indication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095313Z" creationid="Wynn" creationdate="20150319T095313Z">
        <seg>http://en.wikipedia.org/wiki/Server_Name_Indication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Test-driven_development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030721Z" creationid="Wynn" creationdate="20150330T030721Z">
        <seg>http://en.wikipedia.org/wiki/Test-driven_development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Virtual_file_system</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091402Z" creationid="Wynn" creationdate="20150327T091402Z">
        <seg>http://en.wikipedia.org/wiki/Virtual_file_system</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://framework.zend.com</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081611Z" creationid="Wynn" creationdate="20150310T081611Z">
        <seg>http://framework.zend.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://getcomposer.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041731Z" creationid="Wynn" creationdate="20150330T041731Z">
        <seg>http://getcomposer.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://github.com/sebastianbergmann/money/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035705Z" creationid="Wynn" creationdate="20150320T035705Z">
        <seg>http://github.com/sebastianbergmann/money/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://github.com/sebastianbergmann/php-code-coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032247Z" creationid="Wynn" creationdate="20150330T032247Z">
        <seg>http://github.com/sebastianbergmann/php-code-coverage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://googletesting.blogspot.com/2008/05/tott-using-dependancy-injection-to.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082505Z" creationid="Wynn" creationdate="20150319T082505Z">
        <seg>http://googletesting.blogspot.com/2008/05/tott-using-dependancy-injection-to.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://martinfowler.com/bliki/DefinitionOfRefactoring.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092434Z" creationid="Wynn" creationdate="20150327T092434Z">
        <seg>http://martinfowler.com/bliki/DefinitionOfRefactoring.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://martinfowler.com/bliki/FluentInterface.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074811Z" creationid="Wynn" creationdate="20150327T074811Z">
        <seg>http://martinfowler.com/bliki/FluentInterface.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/function_exists</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092538Z" creationid="Wynn" creationdate="20150319T092538Z">
        <seg>http://php.net/function_exists</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/ctype.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041305Z" creationid="Wynn" creationdate="20150330T041305Z">
        <seg>http://php.net/manual/en/ctype.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/dom.setup.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093625Z" creationid="Wynn" creationdate="20150319T093625Z">
        <seg>http://php.net/manual/en/dom.setup.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/json.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093626Z" creationid="Wynn" creationdate="20150319T093626Z">
        <seg>http://php.net/manual/en/json.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/language.operators.comparison.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035941Z" creationid="Wynn" creationdate="20151222T035941Z">
        <seg>http://php.net/manual/en/language.operators.comparison.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/language.types.type-juggling.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T035955Z" creationid="Wynn" creationdate="20151222T035955Z">
        <seg>http://php.net/manual/en/language.types.type-juggling.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/openssl.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095100Z" creationid="Wynn" creationdate="20150319T095100Z">
        <seg>http://php.net/manual/en/openssl.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/pcre.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093715Z" creationid="Wynn" creationdate="20150319T093715Z">
        <seg>http://php.net/manual/en/pcre.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/phar.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095038Z" creationid="Wynn" creationdate="20150319T095038Z">
        <seg>http://php.net/manual/en/phar.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/reflection.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093716Z" creationid="Wynn" creationdate="20150319T093716Z">
        <seg>http://php.net/manual/en/reflection.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/reserved.constants.php#constant.php-os</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092510Z" creationid="Wynn" creationdate="20150319T092510Z">
        <seg>http://php.net/manual/en/reserved.constants.php#constant.php-os</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/spl.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T093717Z" creationid="Wynn" creationdate="20150319T093717Z">
        <seg>http://php.net/manual/en/spl.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/tokenizer.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T094856Z" creationid="Wynn" creationdate="20150319T094856Z">
        <seg>http://php.net/manual/en/tokenizer.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/manual/en/xmlwriter.installation.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T094857Z" creationid="Wynn" creationdate="20150319T094857Z">
        <seg>http://php.net/manual/en/xmlwriter.installation.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/namespace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043231Z" creationid="Wynn" creationdate="20150330T043231Z">
        <seg>http://php.net/namespace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://php.net/phar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095002Z" creationid="Wynn" creationdate="20150319T095002Z">
        <seg>http://php.net/phar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://release.seleniumhq.org/selenium-core/1.0.1/reference.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073555Z" creationid="Wynn" creationdate="20150327T073555Z">
        <seg>http://release.seleniumhq.org/selenium-core/1.0.1/reference.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://sebastian-bergmann.de/blog/883-Stubbing-and-Mocking-Static-Methods.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100917Z" creationid="Wynn" creationdate="20150327T100917Z">
        <seg>http://sebastian-bergmann.de/blog/883-Stubbing-and-Mocking-Static-Methods.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://seleniumhq.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032124Z" creationid="Wynn" creationdate="20150327T032124Z">
        <seg>http://seleniumhq.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://seleniumhq.org/download/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T032451Z" creationid="Wynn" creationdate="20150327T032451Z">
        <seg>http://seleniumhq.org/download/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://stackoverflow.com/questions/6318156/adding-python-path-on-windows-7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095445Z" creationid="Wynn" creationdate="20150319T095445Z">
        <seg>http://stackoverflow.com/questions/6318156/adding-python-path-on-windows-7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://suhosin.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095143Z" creationid="Wynn" creationdate="20150319T095143Z">
        <seg>http://suhosin.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testanything.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101134Z" creationid="Wynn" creationdate="20150319T101134Z">
        <seg>http://testanything.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.atlassian.com/software/clover/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101541Z" creationid="Wynn" creationdate="20150319T101541Z">
        <seg>http://www.atlassian.com/software/clover/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.doctrine-project.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T081611Z" creationid="Wynn" creationdate="20150310T081611Z">
        <seg>http://www.doctrine-project.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.ezcomponents.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T042337Z" creationid="Wynn" creationdate="20150319T042337Z">
        <seg>http://www.ezcomponents.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.json.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101443Z" creationid="Wynn" creationdate="20150319T101443Z">
        <seg>http://www.json.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.mysql.com</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T073953Z" creationid="Wynn" creationdate="20150317T073953Z">
        <seg>http://www.mysql.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.php.net/manual/en/ref.outcontrol.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024359Z" creationid="Wynn" creationdate="20150330T024359Z">
        <seg>http://www.php.net/manual/en/ref.outcontrol.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.php.net/streams</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091400Z" creationid="Wynn" creationdate="20150327T091400Z">
        <seg>http://www.php.net/streams</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.phpunit.de/manual/current/en/appendixes.configuration.html#appendixes.configuration.php-ini-constants-variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040306Z" creationid="Wynn" creationdate="20150330T040306Z">
        <seg>http://www.phpunit.de/manual/current/en/appendixes.configuration.html#appendixes.configuration.php-ini-constants-variables</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.phpunit.de/manual/current/en/textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T040258Z" creationid="Wynn" creationdate="20150330T040258Z">
        <seg>http://www.phpunit.de/manual/current/en/textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.propelorm.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095441Z" creationid="Wynn" creationdate="20150316T095441Z">
        <seg>http://www.propelorm.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.xdebug.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032248Z" creationid="Wynn" creationdate="20150330T032248Z">
        <seg>http://www.xdebug.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://xdebug.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093352Z" creationid="Wynn" creationdate="20150309T093352Z">
        <seg>http://xdebug.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://xdebug.org/docs/install</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093353Z" creationid="Wynn" creationdate="20150309T093353Z">
        <seg>http://xdebug.org/docs/install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://getcomposer.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100348Z" creationid="Wynn" creationdate="20150319T100348Z">
        <seg>https://getcomposer.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://getcomposer.org/doc/00-intro.md#installation-windows</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095410Z" creationid="Wynn" creationdate="20150319T095410Z">
        <seg>https://getcomposer.org/doc/00-intro.md#installation-windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/Maximus5/ConEmu</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095749Z" creationid="Wynn" creationdate="20150327T095749Z">
        <seg>https://github.com/Maximus5/ConEmu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/adoxa/ansicon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T095748Z" creationid="Wynn" creationdate="20150327T095748Z">
        <seg>https://github.com/adoxa/ansicon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/mikey179/vfsStream</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091359Z" creationid="Wynn" creationdate="20150327T091359Z">
        <seg>https://github.com/mikey179/vfsStream</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/phpspec/prophecy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090837Z" creationid="Wynn" creationdate="20150327T090837Z">
        <seg>https://github.com/phpspec/prophecy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/phpspec/prophecy#how-to-use-it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090952Z" creationid="Wynn" creationdate="20150327T090952Z">
        <seg>https://github.com/phpspec/prophecy#how-to-use-it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/php-code-coverage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093351Z" creationid="Wynn" creationdate="20150309T093351Z">
        <seg>https://github.com/sebastianbergmann/php-code-coverage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit-selenium/blob/master/PHPUnit/Extensions/SeleniumTestCase/Driver.php#L410</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073621Z" creationid="Wynn" creationdate="20150327T073621Z">
        <seg>https://github.com/sebastianbergmann/phpunit-selenium/blob/master/PHPUnit/Extensions/SeleniumTestCase/Driver.php#L410</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit-selenium/blob/master/Tests/Selenium2TestCaseTest.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063014Z" creationid="Wynn" creationdate="20150327T063014Z">
        <seg>https://github.com/sebastianbergmann/phpunit-selenium/blob/master/Tests/Selenium2TestCaseTest.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit/commit/f5df97cda0b25f2b7368395344da095ac529de62</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100925Z" creationid="Wynn" creationdate="20150327T100925Z">
        <seg>https://github.com/sebastianbergmann/phpunit/commit/f5df97cda0b25f2b7368395344da095ac529de62</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/552</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100918Z" creationid="Wynn" creationdate="20150327T100918Z">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/552</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/573</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100918Z" creationid="Wynn" creationdate="20150327T100918Z">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/573</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/582</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100920Z" creationid="Wynn" creationdate="20150327T100920Z">
        <seg>https://github.com/sebastianbergmann/phpunit/issues/582</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phar.phpunit.de/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100009Z" creationid="Wynn" creationdate="20150319T100009Z">
        <seg>https://phar.phpunit.de/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phar.phpunit.de/phpunit.phar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095529Z" creationid="Wynn" creationdate="20150319T095529Z">
        <seg>https://phar.phpunit.de/phpunit.phar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phpunit.de/manual/4.8/en/textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T040957Z" creationid="Wynn" creationdate="20151222T040957Z">
        <seg>https://phpunit.de/manual/4.8/en/textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phpunit.de/manual/5.0/en/textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041321Z" creationid="Wynn" creationdate="20151222T041321Z">
        <seg>https://phpunit.de/manual/5.0/en/textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phpunit.de/manual/5.1/en/textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041435Z" creationid="Wynn" creationdate="20151222T041435Z">
        <seg>https://phpunit.de/manual/5.1/en/textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://phpunit.de/manual/5.2/en/textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041601Z" creationid="Wynn" creationdate="20151222T041601Z">
        <seg>https://phpunit.de/manual/5.2/en/textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>id,content,user,created
1,"Hello buddy!","joe","2010-04-24 17:15:23"
2,"I like it!","nancy","2010-04-26 12:14:20"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074425Z" creationid="Wynn" creationdate="20150317T074425Z">
        <seg>id,content,user,created
1,"Hello buddy!","joe","2010-04-24 17:15:23"
2,"I like it!","nancy","2010-04-26 12:14:20"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>identicalTo()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093254Z" creationid="Wynn" creationdate="20150309T093254Z">
        <seg>identicalTo()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include_path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100633Z" creationid="Wynn" creationdate="20150327T100633Z">
        <seg>include_path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ini_set('foo', 'bar');
define('foo', 'bar');
$GLOBALS['foo'] = 'bar';
$_ENV['foo'] = 'bar';
$_POST['foo'] = 'bar';
$_GET['foo'] = 'bar';
$_COOKIE['foo'] = 'bar';
$_SERVER['foo'] = 'bar';
$_FILES['foo'] = 'bar';
$_REQUEST['foo'] = 'bar';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075721Z" creationid="Wynn" creationdate="20150310T075721Z">
        <seg>ini_set('foo', 'bar');
define('foo', 'bar');
$GLOBALS['foo'] = 'bar';
$_ENV['foo'] = 'bar';
$_POST['foo'] = 'bar';
$_GET['foo'] = 'bar';
$_COOKIE['foo'] = 'bar';
$_SERVER['foo'] = 'bar';
$_FILES['foo'] = 'bar';
$_REQUEST['foo'] = 'bar';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isFalse()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093256Z" creationid="Wynn" creationdate="20150309T093256Z">
        <seg>isFalse()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isInstanceOf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093258Z" creationid="Wynn" creationdate="20150309T093258Z">
        <seg>isInstanceOf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isNull()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093300Z" creationid="Wynn" creationdate="20150309T093300Z">
        <seg>isNull()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isTrue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093300Z" creationid="Wynn" creationdate="20150309T093300Z">
        <seg>isTrue()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>isType()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093302Z" creationid="Wynn" creationdate="20150309T093302Z">
        <seg>isType()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lessThan()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093303Z" creationid="Wynn" creationdate="20150309T093303Z">
        <seg>lessThan()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lessThanOrEqual()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093304Z" creationid="Wynn" creationdate="20150309T093304Z">
        <seg>lessThanOrEqual()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lists the various assertion methods that &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; provides.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064347Z" creationid="Wynn" creationdate="20150327T064347Z">
        <seg> 列出了 &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; 所提供的各种断言方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logicalAnd()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093306Z" creationid="Wynn" creationdate="20150309T093306Z">
        <seg>logicalAnd()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logicalNot()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093306Z" creationid="Wynn" creationdate="20150309T093306Z">
        <seg>logicalNot()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logicalNot(PHPUnit_Framework_Constraint $constraint)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093307Z" creationid="Wynn" creationdate="20150309T093307Z">
        <seg>logicalNot(PHPUnit_Framework_Constraint $constraint)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logicalOr()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093308Z" creationid="Wynn" creationdate="20150309T093308Z">
        <seg>logicalOr()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logicalXor()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093311Z" creationid="Wynn" creationdate="20150309T093311Z">
        <seg>logicalXor()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>matchesRegularExpression()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093317Z" creationid="Wynn" creationdate="20150309T093317Z">
        <seg>matchesRegularExpression()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>method()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074952Z" creationid="Wynn" creationdate="20150327T074952Z">
        <seg>method()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mysqldump --xml -t -u [username] --password=[password] [database] &gt; /path/to/file.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150317T074156Z" creationid="Wynn" creationdate="20150317T074156Z">
        <seg>mysqldump --xml -t -u [username] --password=[password] [database] &gt; /path/to/file.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ok
ok</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030153Z" creationid="Wynn" creationdate="20150330T030153Z">
        <seg>ok
ok</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>onConsecutiveCalls()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084142Z" creationid="Wynn" creationdate="20150327T084142Z">
        <seg>onConsecutiveCalls()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>onNotSuccessfulTest()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081145Z" creationid="Wynn" creationdate="20150319T081145Z">
        <seg>onNotSuccessfulTest()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>over and over again. The PHPUnit Skeleton Generator can help you by analyzing the code of the existing class and generating a skeleton test case class for it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043140Z" creationid="Wynn" creationdate="20150330T043140Z">
        <seg>PHPUnit 骨架生成器能够分析现有类的代码并帮你生成测试用例类的骨架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pear install phpunit/PHPUnit_SkeletonGenerator</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043119Z" creationid="Wynn" creationdate="20150330T043119Z">
        <seg>pear install phpunit/PHPUnit_SkeletonGenerator</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pear install phpunit/PHPUnit_Story</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031108Z" creationid="Wynn" creationdate="20150330T031108Z">
        <seg>pear install phpunit/PHPUnit_Story</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>php.ini</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150310T075429Z" creationid="Wynn" creationdate="20150310T075429Z">
        <seg>php.ini</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>phpunit UnitTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093032Z" creationid="Wynn" creationdate="20150327T093032Z">
        <seg>phpunit UnitTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>phpunit UnitTest UnitTest.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T093134Z" creationid="Wynn" creationdate="20150327T093134Z">
        <seg>phpunit UnitTest UnitTest.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>protected $coverageScriptUrl = 'http://host/phpunit_coverage.php';</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064323Z" creationid="Wynn" creationdate="20150327T064323Z">
        <seg>protected $coverageScriptUrl = 'http://host/phpunit_coverage.php';</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public function testMethod()
{
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043130Z" creationid="Wynn" creationdate="20150330T043130Z">
        <seg>public function testMethod()
{
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>public function testSomething()
{
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090910Z" creationid="Wynn" creationdate="20150319T090910Z">
        <seg>public function testSomething()
{
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnArgument()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T081305Z" creationid="Wynn" creationdate="20150327T081305Z">
        <seg>returnArgument()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnCallback()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084056Z" creationid="Wynn" creationdate="20150327T084056Z">
        <seg>returnCallback()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnSelf()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083656Z" creationid="Wynn" creationdate="20150327T083656Z">
        <seg>returnSelf()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnValue()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043931Z" creationid="Wynn" creationdate="20150330T043931Z">
        <seg>returnValue()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>returnValueMap()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T083905Z" creationid="Wynn" creationdate="20150327T083905Z">
        <seg>returnValueMap()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runGiven(&amp;$world, $action, $arguments)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031241Z" creationid="Wynn" creationdate="20150330T031241Z">
        <seg>runGiven(&amp;$world, $action, $arguments)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runThen(&amp;$world, $action, $arguments)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031241Z" creationid="Wynn" creationdate="20150330T031241Z">
        <seg>runThen(&amp;$world, $action, $arguments)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runWhen(&amp;$world, $action, $arguments)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031241Z" creationid="Wynn" creationdate="20150330T031241Z">
        <seg>runWhen(&amp;$world, $action, $arguments)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>setUp()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075836Z" creationid="Wynn" creationdate="20150319T075836Z">
        <seg>setUp()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>setUpBeforeClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082144Z" creationid="Wynn" creationdate="20150319T082144Z">
        <seg>setUpBeforeClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>setUpBeforeClass()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081048Z" creationid="Wynn" creationdate="20150319T081048Z">
        <seg>setUpBeforeClass()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a class that interacts with the filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091706Z" creationid="Wynn" creationdate="20150327T091706Z">
        <seg>展示了一个与文件系统交互的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a cut-down version of the &lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt; test decorator that illustrates how to write your own test decorators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T073359Z" creationid="Wynn" creationdate="20150319T073359Z">
        <seg>展示了测试修饰器 &lt;l0&gt;PHPUnit_Extensions_RepeatedTest&lt;/l0&gt; 的一个删减版本，用以说明如何编写你自己的测试修饰器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a data-driven test case class that compares values from a file with Comma-Separated Values (CSV). Each line of such a file looks like &lt;l0&gt;foo;bar&lt;/l0&gt;, where the first value is the one we expect and the second value is the actual one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075631Z" creationid="Wynn" creationdate="20150319T075631Z">
        <seg>展示了一个数据驱动的测试用例类，对来自 CSV 文件内的值进行比较。这个文件内的每个行看起来类似于 &lt;l0&gt;foo;bar&lt;/l0&gt;，第一个值是期望值，第二个值则是实际值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a simple implementation of the &lt;l0&gt;PHPUnit_Framework_TestListener&lt;/l0&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070127Z" creationid="Wynn" creationdate="20150319T070127Z">
        <seg>展示了 &lt;l0&gt;PHPUnit_Framework_TestListener&lt;/l0&gt; 接口的一个简单实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a test case class, &lt;l0&gt;DatabaseTest&lt;/l0&gt;, that contains one test method, &lt;l1&gt;testConnection()&lt;/l1&gt;. In the test case class' &lt;l2&gt;setUp()&lt;/l2&gt; template method we check whether the MySQLi extension is available and use the &lt;l3&gt;markTestSkipped()&lt;/l3&gt; method to skip the test if it is not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092136Z" creationid="Wynn" creationdate="20150319T092136Z">
        <seg> 展示了一个测试用例类 &lt;l0&gt;DatabaseTest&lt;/l0&gt;，它有一个测试方法 &lt;l1&gt;testConnection()&lt;/l1&gt;。在测试用例类的 &lt;l2&gt;setUp()&lt;/l2&gt;模板方法中，检查了 MySQLi 扩展是否可用，并且在扩展不可用时用 &lt;l3&gt;markTestSkipped()&lt;/l3&gt; 方法来跳过此测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows a test case class, &lt;l0&gt;SampleTest&lt;/l0&gt;, that contains one test method, &lt;l1&gt;testSomething()&lt;/l1&gt;. By calling the convenience method &lt;l2&gt;markTestIncomplete()&lt;/l2&gt; (which automatically raises an &lt;l3&gt;PHPUnit_Framework_IncompleteTestError&lt;/l3&gt; exception) in the test method, we mark the test as being incomplete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091622Z" creationid="Wynn" creationdate="20150319T091319Z">
        <seg>展示了一个测试用例类 &lt;l0&gt;SampleTest&lt;/l0&gt;，它有一个测试方法 &lt;l1&gt;testSomething()&lt;/l1&gt;。通过在测试方法中调用便捷方法 &lt;l2&gt;markTestIncomplete()&lt;/l2&gt;（会自动抛出一个 &lt;l3&gt;PHPUnit_Framework_IncompleteTestError&lt;/l3&gt; 异常）将这个测试标记为未完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows all the varieties of assertions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T025402Z" creationid="Wynn" creationdate="20150330T025402Z">
        <seg>shows all the varieties of assertions.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows an example of how to use the Mock Builder's fluent interface to configure the creation of the test double.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T075208Z" creationid="Wynn" creationdate="20150327T075208Z">
        <seg>这个例子展示了如何用仿件生成器的流畅式接口来配置测试替身的生成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows an excerpt from a Code Coverage report. Lines of code that were executed while running the tests are highlighted green, lines of code that are executable but were not executed are highlighted red, and "dead code" is highlighted grey. The number left to the actual line of code indicates how many tests cover that line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032412Z" creationid="Wynn" creationdate="20150330T032412Z">
        <seg>是代码覆盖率报告的摘录。测试运行时被执行到的代码行高亮标为绿色，可执行但是未被执行到的代码行标为红色，“死代码”标为灰色。代码行左边的数字表明有多少测试覆盖了此行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how &lt;l0&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/l0&gt; extends the abstract base class for matcher objects (or constraints), &lt;l1&gt;PHPUnit_Framework_Constraint&lt;/l1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T065800Z" creationid="Wynn" creationdate="20150319T065800Z">
        <seg>展示了 &lt;l0&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/l0&gt; 是如何扩展针对匹配器对象（或约束）的抽象基类 &lt;l1&gt;PHPUnit_Framework_Constraint&lt;/l1&gt; 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how &lt;l0&gt;getMockFromWsdl()&lt;/l0&gt; can be used to stub, for example, the web service described in &lt;f1&gt;GoogleSearch.wsdl&lt;/f1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091329Z" creationid="Wynn" creationdate="20150327T091329Z">
        <seg>展示了如何用 &lt;l0&gt;getMockFromWsdl()&lt;/l0&gt; 来对（例如）&lt;f1&gt;GoogleSearch.wsdl&lt;/f1&gt; 中描述的 web 服务上桩。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how the above rules can be written down as specification scenarios using &lt;l0&gt;PHPUnit_Extensions_Story_TestCase&lt;/l0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T031526Z" creationid="Wynn" creationdate="20150330T031526Z">
        <seg>展示了如何用 &lt;l0&gt;PHPUnit_Extensions_Story_TestCase&lt;/l0&gt; 把上述规则写成规格脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to stub method calls and set up return values. We first use the &lt;l0&gt;getMock()&lt;/l0&gt; method that is provided by the &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; class to set up a stub object that looks like an object of &lt;l2&gt;SomeClass&lt;/l2&gt; (&lt;x3/&gt;). We then use the &lt;u4&gt;Fluent Interface&lt;/u4&gt; that PHPUnit provides to specify the behavior for the stub. In essence, this means that you do not need to create several temporary objects and wire them together afterwards. Instead, you chain method calls as shown in the example. This leads to more readable and "fluent" code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043924Z" creationid="Wynn" creationdate="20150330T043924Z">
        <seg>展示了如何对方法的调用上桩以及如何设定返回值。首先用 &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; 类提供的 &lt;l0&gt;getMock()&lt;/l0&gt; 方法来建立一个桩件对象，它表面看起来像是 &lt;l2&gt;SomeClass&lt;/l2&gt;类（&lt;x3/&gt;）的实例。随后用 PHPUnit 提供的 &lt;u4&gt;流畅式接口&lt;/u4&gt;来指定桩件的行为。本质上，这意味着不需要建立多个临时对象然后再把它们捆到一起。取而代之的是范例中所示的链式方法调用。这使得代码更加易读并更加“流畅”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to stub method calls and set up return values. We first use the &lt;l0&gt;getMockBuilder()&lt;/l0&gt; method that is provided by the &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; class to set up a stub object that looks like an object of &lt;l2&gt;SomeClass&lt;/l2&gt; (&lt;x3/&gt;). We then use the &lt;u4&gt;Fluent Interface&lt;/u4&gt; that PHPUnit provides to specify the behavior for the stub. In essence, this means that you do not need to create several temporary objects and wire them together afterwards. Instead, you chain method calls as shown in the example. This leads to more readable and "fluent" code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074932Z" creationid="Wynn" creationdate="20150327T074932Z">
        <seg>展示了如何对方法的调用上桩以及如何设定返回值。首先用 &lt;l1&gt;PHPUnit_Framework_TestCase&lt;/l1&gt; 类提供的 &lt;l0&gt;getMockBuilder()&lt;/l0&gt; 方法来建立一个桩件对象，它表面看起来像是 &lt;l2&gt;SomeClass&lt;/l2&gt;类（&lt;x3/&gt;）的实例。随后用 PHPUnit 提供的 &lt;u4&gt;流畅式接口&lt;/u4&gt;来指定桩件的行为。本质上，这意味着不需要建立多个临时对象然后再把它们捆到一起。取而代之的是范例中所示的链式方法调用。这使得代码更加易读并更加“流畅”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to subclass the &lt;l0&gt;PHPUnit_Framework_BaseTestListener&lt;/l0&gt; abstract class, which lets you specify only the interface methods that are interesting for your use case, while providing empty implementations for all the others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T070324Z" creationid="Wynn" creationdate="20150319T070324Z">
        <seg>展示了如何从抽象类 &lt;l0&gt;PHPUnit_Framework_BaseTestListener&lt;/l0&gt; 派生子类，这个抽象类为所有接口方法提供了空白实现，这样你就只需要指定那些在你的使用情境下有意义的接口方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to test the contents of the &lt;l0&gt;&lt;title&gt;&lt;/l0&gt; element of the &lt;s1&gt;http://www.example.com/&lt;/s1&gt; website.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T062920Z" creationid="Wynn" creationdate="20150327T062213Z">
        <seg>展示了如何对 &lt;s1&gt;http://www.example.com/&lt;/s1&gt; 网站 &lt;l0&gt;&lt;title&gt;&lt;/l0&gt; 元素的内容进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to use a mock object to test the interaction between &lt;l0&gt;Subject&lt;/l0&gt; and &lt;l1&gt;Observer&lt;/l1&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084909Z" creationid="Wynn" creationdate="20150327T084909Z">
        <seg>展示了如何用仿件对象来测试 &lt;l0&gt;Subject&lt;/l0&gt; 和 &lt;l1&gt;Observer&lt;/l1&gt; 对象之间的互动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to use the &lt;l0&gt;@depends&lt;/l0&gt; annotation to express dependencies between test methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101720Z" creationid="Wynn" creationdate="20150327T101720Z">
        <seg>展示了如何用 &lt;l0&gt;@depends&lt;/l0&gt; 标注来表达测试方法之间的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to use the &lt;l0&gt;@expectedException&lt;/l0&gt; annotation to test whether an exception is thrown inside the tested code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150302T071519Z" creationid="Wynn" creationdate="20150302T071519Z">
        <seg>展示了如何用 &lt;l0&gt;@expectedException&lt;/l0&gt;  标注来测试被测代码中是否抛出了异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to use the &lt;l0&gt;expectException()&lt;/l0&gt; method to test whether an exception is thrown by the code under test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20160113T041253Z" creationid="Wynn" creationdate="20160113T041253Z">
        <seg>展示了如何用 &lt;l0&gt;@expectedException&lt;/l0&gt;  方法来测试被测代码是否抛出了异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how to use the &lt;l0&gt;expectOutputString()&lt;/l0&gt; method to set the expected output. If this expected output is not generated, the test will be counted as a failure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024633Z" creationid="Wynn" creationdate="20150330T024633Z">
        <seg>展示了如何用 &lt;l0&gt;expectOutputString()&lt;/l0&gt; 方法来设定所预期的输出。如果没有产生预期的输出，测试将计为失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how vfsStream can be used to mock the filesystem in a test for a class that interacts with the filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092133Z" creationid="Wynn" creationdate="20150327T092133Z">
        <seg>展示了如何在对与文件系统交互的类进行的测试中使用 vfsStream 来模仿文件系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows how we can write tests using PHPUnit that exercise PHP's array operations. The example introduces the basic conventions and steps for writing tests with PHPUnit:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101408Z" creationid="Wynn" creationdate="20150327T101408Z">
        <seg>展示了如何用 PHPUnit 编写测试来对 PHP 数组操作进行测试。本例介绍了用 PHPUnit 编写测试的基本惯例与步骤：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the API for marking tests as incomplete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091901Z" creationid="Wynn" creationdate="20150319T091823Z">
        <seg>列举了用于将测试标记为未完成的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the API for skipping tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092239Z" creationid="Wynn" creationdate="20150319T092239Z">
        <seg>列举了用于跳过测试的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the available &lt;l0&gt;PHPUnit_Framework_Constraint&lt;/l0&gt; classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150306T083106Z" creationid="Wynn" creationdate="20150306T083106Z">
        <seg>列举了所有可用的 &lt;l0&gt;PHPUnit_Framework_Constraint&lt;/l0&gt; 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the code coverage of the &lt;l0&gt;setBalance()&lt;/l0&gt; method with the additional test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T032655Z" creationid="Wynn" creationdate="20150330T032655Z">
        <seg>展示了加入额外的测试之后 &lt;l0&gt;setBalance()&lt;/l0&gt; 方法的代码覆盖情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the constraints that can be applied to method arguments and &lt;x0/&gt; shows the matchers that are available to specify the number of invocations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T090141Z" creationid="Wynn" creationdate="20150327T090141Z">
        <seg>列出了可以应用于方法参数的各种约束，&lt;x0/&gt;列出了可以用于指定调用次数的各种匹配器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the methods provided for testing exceptions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103120Z" creationid="Wynn" creationdate="20150327T103120Z">
        <seg>中列举了用于对异常进行测试的各种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the methods provided for testing output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024650Z" creationid="Wynn" creationdate="20150330T024650Z">
        <seg>中列举了用于对输出进行测试的各种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the supported variations of the &lt;l0&gt;@assert&lt;/l0&gt; annotation and how they are transformed into test code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043510Z" creationid="Wynn" creationdate="20150330T043510Z">
        <seg>列出了 &lt;l0&gt;@assert&lt;/l0&gt; 标注所允许的的各种变体，以及它们是如何转换为测试代码的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the syntax of the &lt;l0&gt;@covers&lt;/l0&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080546Z" creationid="Wynn" creationdate="20150228T080546Z">
        <seg>列出了 &lt;l0&gt;@covers&lt;/l0&gt; 标注的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shows the template method of &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T070902Z" creationid="Wynn" creationdate="20150327T070902Z">
        <seg>列出了 &lt;l0&gt;PHPUnit_Extensions_SeleniumTestCase&lt;/l0&gt; 的模板方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src                                 tests
`-- Currency.php                    `-- CurrencyTest.php
`-- IntlFormatter.php               `-- IntlFormatterTest.php
`-- Money.php                       `-- MoneyTest.php
`-- autoload.php</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T035759Z" creationid="Wynn" creationdate="20150320T035759Z">
        <seg>src                                 tests
`-- Currency.php                    `-- CurrencyTest.php
`-- IntlFormatter.php               `-- IntlFormatterTest.php
`-- Money.php                       `-- MoneyTest.php
`-- autoload.php</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stringContains()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093318Z" creationid="Wynn" creationdate="20150309T093318Z">
        <seg>stringContains()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stringEndsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093319Z" creationid="Wynn" creationdate="20150309T093319Z">
        <seg>stringEndsWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stringStartsWith()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093321Z" creationid="Wynn" creationdate="20150309T093321Z">
        <seg>stringStartsWith()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>suhosin.executor.include.whitelist = phar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T095204Z" creationid="Wynn" creationdate="20150319T095204Z">
        <seg>suhosin.executor.include.whitelist = phar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tearDown()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T075837Z" creationid="Wynn" creationdate="20150319T075837Z">
        <seg>tearDown()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tearDownAfterClass</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082150Z" creationid="Wynn" creationdate="20150319T082150Z">
        <seg>tearDownAfterClass</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tearDownAfterClass()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T081051Z" creationid="Wynn" creationdate="20150319T081051Z">
        <seg>tearDownAfterClass()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>textui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150316T095451Z" creationid="Wynn" creationdate="20150316T095451Z">
        <seg>textui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>throwException()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T084243Z" creationid="Wynn" creationdate="20150327T084243Z">
        <seg>throwException()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>timeoutForLargeTests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092650Z" creationid="Wynn" creationdate="20150309T092650Z">
        <seg>timeoutForLargeTests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>timeoutForMediumTests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092729Z" creationid="Wynn" creationdate="20150309T092729Z">
        <seg>timeoutForMediumTests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>timeoutForSmallTests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T092744Z" creationid="Wynn" creationdate="20150309T092744Z">
        <seg>timeoutForSmallTests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to configure the URL for the &lt;f0&gt;phpunit_coverage.php&lt;/f0&gt; script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064336Z" creationid="Wynn" creationdate="20150327T064336Z">
        <seg> 来配置 &lt;f0&gt;phpunit_coverage.php&lt;/f0&gt; 脚本所在的 URL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to keep track of the tests that you have to write. The problem with empty test methods is that they are interpreted as a success by the PHPUnit framework. This misinterpretation leads to the test reports being useless -- you cannot see whether a test is actually successful or just not yet implemented. Calling &lt;l0&gt;$this-&gt;fail()&lt;/l0&gt; in the unimplemented test method does not help either, since then the test will be interpreted as a failure. This would be just as wrong as interpreting an unimplemented test as a success.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T090954Z" creationid="Wynn" creationdate="20150319T090954Z">
        <seg>以此来跟踪需要编写的测试。空测试的问题是 PHPUnit 框架会将它们解读为成功。这种错误解读导致错误报告变得毫无用处——无法分辨出测试是真的成功了还是根本就未编写实现。在未实现的测试中调用 &lt;l0&gt;$this-&gt;fail()&lt;/l0&gt; 同样没啥帮助，因为测试将被解读为失败。这和将未实现的测试解读为成功是一样的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uses the &lt;l0&gt;setUpBeforeClass()&lt;/l0&gt; and &lt;l1&gt;tearDownAfterClass()&lt;/l1&gt; template methods to connect to the database before the test case class' first test and to disconnect from the database after the last test of the test case, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T082223Z" creationid="Wynn" creationdate="20150319T082223Z">
        <seg>用 &lt;l0&gt;setUpBeforeClass()&lt;/l0&gt; 和 &lt;l1&gt;tearDownAfterClass()&lt;/l1&gt; 模板方法来分别在测试用例类的第一个测试之前和最后一个测试之后连接与断开数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>vfsStream gives the test developer full control over what the filesystem environment looks like to the tested code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T092206Z" creationid="Wynn" creationdate="20150327T092206Z">
        <seg>vfsStream 让开发者能够完全控制被测代码所处的文件系统环境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementContainsText(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065347Z" creationid="Wynn" creationdate="20150327T065347Z">
        <seg>void assertElementContainsText(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementNotContainsText(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065352Z" creationid="Wynn" creationdate="20150327T065352Z">
        <seg>void assertElementNotContainsText(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementValueContains(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065345Z" creationid="Wynn" creationdate="20150327T065345Z">
        <seg>void assertElementValueContains(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementValueEquals(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T064402Z" creationid="Wynn" creationdate="20150327T064402Z">
        <seg>void assertElementValueEquals(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementValueNotContains(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065346Z" creationid="Wynn" creationdate="20150327T065346Z">
        <seg>void assertElementValueNotContains(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertElementValueNotEquals(string $locator, string $text)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065344Z" creationid="Wynn" creationdate="20150327T065344Z">
        <seg>void assertElementValueNotEquals(string $locator, string $text)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertIsNotSelected(string $selectLocator, string $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065830Z" creationid="Wynn" creationdate="20150327T065830Z">
        <seg>void assertIsNotSelected(string $selectLocator, string $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertIsSelected(string $selectLocator, string $value)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065354Z" creationid="Wynn" creationdate="20150327T065354Z">
        <seg>void assertIsSelected(string $selectLocator, string $value)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertNotSelected($selectLocator, $option)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065348Z" creationid="Wynn" creationdate="20150327T065348Z">
        <seg>void assertNotSelected($selectLocator, $option)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertSelectHasOption(string $selectLocator, string $option)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065351Z" creationid="Wynn" creationdate="20150327T065351Z">
        <seg>void assertSelectHasOption(string $selectLocator, string $option)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertSelectNotHasOption(string $selectLocator, string $option)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065350Z" creationid="Wynn" creationdate="20150327T065350Z">
        <seg>void assertSelectNotHasOption(string $selectLocator, string $option)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void assertSelected($selectLocator, $option)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T065350Z" creationid="Wynn" creationdate="20150327T065350Z">
        <seg>void assertSelected($selectLocator, $option)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void defaultAssertions()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T073451Z" creationid="Wynn" creationdate="20150327T073451Z">
        <seg>void defaultAssertions()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void expectOutputRegex(string $regularExpression)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024659Z" creationid="Wynn" creationdate="20150330T024659Z">
        <seg>void expectOutputRegex(string $regularExpression)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void expectOutputString(string $expectedString)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T024700Z" creationid="Wynn" creationdate="20150330T024700Z">
        <seg>void expectOutputString(string $expectedString)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void markTestIncomplete()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091922Z" creationid="Wynn" creationdate="20150319T091922Z">
        <seg>void markTestIncomplete()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void markTestIncomplete(string $message)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T091927Z" creationid="Wynn" creationdate="20150319T091927Z">
        <seg>void markTestIncomplete(string $message)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void markTestSkipped()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092254Z" creationid="Wynn" creationdate="20150319T092254Z">
        <seg>void markTestSkipped()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void markTestSkipped(string $message)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T092311Z" creationid="Wynn" creationdate="20150319T092311Z">
        <seg>void markTestSkipped(string $message)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setBrowser(string $browser)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063550Z" creationid="Wynn" creationdate="20150327T063550Z">
        <seg>void setBrowser(string $browser)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setBrowserUrl(string $browserUrl)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063553Z" creationid="Wynn" creationdate="20150327T063553Z">
        <seg>void setBrowserUrl(string $browserUrl)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setExpectedException(string $exceptionName[, string $exceptionMessage = '', integer $exceptionCode = NULL])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103259Z" creationid="Wynn" creationdate="20150327T103259Z">
        <seg>void setExpectedException(string $exceptionName[, string $exceptionMessage = '', integer $exceptionCode = NULL])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setExpectedExceptionRegExp(string $exceptionName[, string $exceptionMessageRegExp = '', integer $exceptionCode = NULL])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T103258Z" creationid="Wynn" creationdate="20150327T103258Z">
        <seg>void setExpectedExceptionRegExp(string $exceptionName[, string $exceptionMessageRegExp = '', integer $exceptionCode = NULL])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setHost(string $host)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063628Z" creationid="Wynn" creationdate="20150327T063628Z">
        <seg>void setHost(string $host)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setPort(int $port)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063635Z" creationid="Wynn" creationdate="20150327T063635Z">
        <seg>void setPort(int $port)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setSleep(int $seconds)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063646Z" creationid="Wynn" creationdate="20150327T063646Z">
        <seg>void setSleep(int $seconds)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>void setTimeout(int $timeout)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T063643Z" creationid="Wynn" creationdate="20150327T063643Z">
        <seg>void setTimeout(int $timeout)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>will()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T081301Z" creationid="Wynn" creationdate="20150327T081301Z">
        <seg>will()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>willReturn()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074953Z" creationid="Wynn" creationdate="20150327T074953Z">
        <seg>willReturn()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>xUnit Test Patterns: Refactoring Test Code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150309T093341Z" creationid="Wynn" creationdate="20150309T093341Z">
        <seg>xUnit Test Patterns: Refactoring Test Code</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "3.7.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T041754Z" creationid="Wynn" creationdate="20150330T041754Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "3.7.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "3.7.*",
        "mikey179/vfsStream": "1.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T045652Z" creationid="Wynn" creationdate="20150330T045652Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "3.7.*",
        "mikey179/vfsStream": "1.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.0.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061902Z" creationid="Wynn" creationdate="20150330T061902Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.0.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.1.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T062826Z" creationid="Wynn" creationdate="20150330T062826Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.1.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.2.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063206Z" creationid="Wynn" creationdate="20150330T063206Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.2.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.3.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063357Z" creationid="Wynn" creationdate="20150330T063357Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.3.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.4.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063531Z" creationid="Wynn" creationdate="20150330T063531Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.4.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.5.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T063703Z" creationid="Wynn" creationdate="20150330T063703Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.5.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.6.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100505Z" creationid="Wynn" creationdate="20150319T100505Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.6.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.7.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075603Z" creationid="Wynn" creationdate="20150706T075603Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.7.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.8.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T075644Z" creationid="Wynn" creationdate="20150706T075644Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "4.8.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "5.0.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150706T080215Z" creationid="Wynn" creationdate="20150706T080215Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "5.0.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "5.1.*"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20151222T041429Z" creationid="Wynn" creationdate="20151222T041429Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "5.1.*"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "~4.6",
        "mikey179/vfsStream": "~1"
    }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T091659Z" creationid="Wynn" creationdate="20150327T091659Z">
        <seg>{
    "require-dev": {
        "phpunit/phpunit": "~4.6",
        "mikey179/vfsStream": "~1"
    }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{"event":"suiteStart","suite":"ArrayTest","tests":2}
{"event":"test","suite":"ArrayTest",
 "test":"testNewArrayIsEmpty(ArrayTest)","status":"pass",
 "time":0.000460147858,"trace":[],"message":""}
{"event":"test","suite":"ArrayTest",
 "test":"testArrayContainsAnElement(ArrayTest)","status":"pass",
 "time":0.000422954559,"trace":[],"message":""}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101513Z" creationid="Wynn" creationdate="20150319T101513Z">
        <seg>{"event":"suiteStart","suite":"ArrayTest","tests":2}
{"event":"test","suite":"ArrayTest",
 "test":"testNewArrayIsEmpty(ArrayTest)","status":"pass",
 "time":0.000460147858,"trace":[],"message":""}
{"event":"test","suite":"ArrayTest",
 "test":"testArrayContainsAnElement(ArrayTest)","status":"pass",
 "time":0.000422954559,"trace":[],"message":""}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>{"event":"suiteStart","suite":"FailureErrorTest","tests":2}
{"event":"test","suite":"FailureErrorTest",
 "test":"testFailure(FailureErrorTest)","status":"fail",
 "time":0.0082459449768066,"trace":[],
 "message":"Failed asserting that &lt;integer:2&gt; is equal to &lt;integer:1&gt;."}
{"event":"test","suite":"FailureErrorTest",
 "test":"testError(FailureErrorTest)","status":"error",
 "time":0.0083680152893066,"trace":[],"message":""}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T101532Z" creationid="Wynn" creationdate="20150319T101532Z">
        <seg>{"event":"suiteStart","suite":"FailureErrorTest","tests":2}
{"event":"test","suite":"FailureErrorTest",
 "test":"testFailure(FailureErrorTest)","status":"fail",
 "time":0.0082459449768066,"trace":[],
 "message":"Failed asserting that &lt;integer:2&gt; is equal to &lt;integer:1&gt;."}
{"event":"test","suite":"FailureErrorTest",
 "test":"testError(FailureErrorTest)","status":"error",
 "time":0.0083680152893066,"trace":[],"message":""}</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">3.7/en/automating-tests.xml</prop>
      <prop type="prev">ok
ok</prop>
      <prop type="next">We now factor out the comparison of expected and actual values into a function that raises an Exception when there is a discrepancy (&lt;x0/&gt;). This gives us two benefits: the writing of tests becomes easier and we only get output when something is wrong.</prop>
      <tuv lang="EN-US">
        <seg>Assertions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030203Z" creationid="Wynn" creationdate="20150330T030203Z">
        <seg>Assertions （断言）</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">3.7/en/behaviour-driven-development.xml</prop>
      <prop type="prev">When you realize that it's all about specifying behaviour and not writing tests, your point of view shifts. Suddenly the idea of having a Test class for each of your production classes is ridiculously limiting. And the thought of testing each of your methods with its own test method (in a 1-1 relationship) will be laughable.</prop>
      <prop type="next">Domain-Driven Design</prop>
      <tuv lang="EN-US">
        <seg>Behaviour-Driven Development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T030834Z" creationid="Wynn" creationdate="20150330T030834Z">
        <seg>Behaviour-Driven Development （行为驱动开发）</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">3.7/en/skeleton-generator.xml</prop>
      <prop type="prev">Supported variations of the @assert annotation</prop>
      <prop type="next">Transformed to</prop>
      <tuv lang="EN-US">
        <seg>Annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T043525Z" creationid="Wynn" creationdate="20150330T043525Z">
        <seg>标注</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.0/en/strict-mode.xml</prop>
      <prop type="prev"></prop>
      <prop type="next">PHPUnit can perform additional checks while it executes the tests. In addition to the fine-grained control over the various strict mode checks (see below) you may use the &lt;l0&gt;--strict&lt;/l0&gt; commandline option or set &lt;l1&gt;strict="true"&lt;/l1&gt; in PHPUnit's XML configuration file to enable all of them.</prop>
      <tuv lang="EN-US">
        <seg>Strict Mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150330T061940Z" creationid="Wynn" creationdate="20150330T061940Z">
        <seg>严格模式</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.6/en/annotations.xml</prop>
      <prop type="prev">Annotations for specifying which methods are covered by a test</prop>
      <prop type="next">Description</prop>
      <tuv lang="EN-US">
        <seg>Annotation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150228T080726Z" creationid="Wynn" creationdate="20150228T080726Z">
        <seg>标注</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.7/en/logging.xml</prop>
      <prop type="prev"></prop>
      <prop type="next">Logging</prop>
      <tuv lang="EN-US">
        <seg>Logging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150319T100839Z" creationid="Wynn" creationdate="20150319T100839Z">
        <seg>日志记录</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.7/en/other-uses-for-tests.xml</prop>
      <prop type="prev">Agile Documentation</prop>
      <prop type="next">Automated Documentation</prop>
      <tuv lang="EN-US">
        <seg>Agile Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150320T040744Z" creationid="Wynn" creationdate="20150320T040744Z">
        <seg>Agile Documentation （敏捷文档）</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.7/en/test-doubles.xml</prop>
      <prop type="prev">Please pay attention to the fact that the parameters managing has been changed. The previous implementation clones all object parameters. It did not allow to check whether the same object was passed to method or not. &lt;x0/&gt; shows where the new implementation could be useful. &lt;x1/&gt; shows how to switch back to previous behavior.</prop>
      <prop type="next">Stub</prop>
      <tuv lang="EN-US">
        <seg>Stubs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T074610Z" creationid="Wynn" creationdate="20150327T074610Z">
        <seg>桩件(Stub)</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.7/en/textui.xml</prop>
      <prop type="prev">Reports the test progress using the &lt;u0&gt;Test Anything Protocol (TAP)&lt;/u0&gt;. See &lt;x1/&gt; for more details.</prop>
      <prop type="next">--testdox</prop>
      <tuv lang="EN-US">
        <seg>Agile Documentation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T100310Z" creationid="Wynn" creationdate="20150327T100310Z">
        <seg>Agile Documentation （敏捷文档）</seg>
      </tuv>
    </tu>
    <tu>
      <prop type="file">4.7/en/writing-tests-for-phpunit.xml</prop>
      <prop type="prev">Unit Tests are primarily written as a good practice to help developers identify and fix bugs, to refactor code and to serve as documentation for a unit of software under test. To achieve these benefits, unit tests ideally should cover all the possible paths in a program. One unit test usually covers one specific path in one function or method. However a test method is not necessary an encapsulated, independent entity. Often there are implicit dependencies between test methods, hidden in the implementation scenario of a test.</prop>
      <prop type="next">PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers.</prop>
      <tuv lang="EN-US">
        <seg>Test Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Wynn" changedate="20150327T101650Z" creationid="Wynn" creationdate="20150327T101650Z">
        <seg>Test Dependencies （测试的依赖关系）</seg>
      </tuv>
    </tu>
  </body>
</tmx>
